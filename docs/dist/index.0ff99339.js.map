{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-34e0858f534b4b0d.js","docs/demo.js","src/mergeTools/languages/javascript/javascript.js","node_modules/escodegen/escodegen.js","node_modules/estraverse/estraverse.js","node_modules/esutils/lib/utils.js","node_modules/esutils/lib/ast.js","node_modules/esutils/lib/code.js","node_modules/esutils/lib/keyword.js","node_modules/source-map/source-map.js","node_modules/source-map/lib/source-map-generator.js","node_modules/source-map/lib/base64-vlq.js","node_modules/source-map/lib/base64.js","node_modules/source-map/lib/util.js","node_modules/source-map/lib/array-set.js","node_modules/source-map/lib/mapping-list.js","node_modules/source-map/lib/source-map-consumer.js","node_modules/source-map/lib/binary-search.js","node_modules/source-map/lib/quick-sort.js","node_modules/source-map/lib/source-node.js","node_modules/escodegen/package.json","node_modules/esprima-next/dist/esprima.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"852b4c630ff99339\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, disposedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    disposedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'reload') {\n      fullReload();\n    } else if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n        hmrDisposeQueue();\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        let processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import { javascriptManipulator } from \"../src/mergeTools/languages/javascript/javascript.js\";\n\nconst manipulator = new javascriptManipulator()\n\ndocument.getElementById('mergeButton').addEventListener('click', merge);\n\nasync function merge() {\n    const original = document.getElementById('original').value;\n    const snippet = document.getElementById('snippet').value;\n    await manipulator.setCode(original);\n    await manipulator.parse();\n    const result = await manipulator.mergeCode(snippet);\n    \n\n    document.getElementById('original').value = result;\n    console.log(result);\n}","\nimport * as escodegen from 'escodegen';\nimport esprima from 'esprima-next';\nimport estraverse from 'estraverse';\n\nconst debug = true;\n\n\nexport class javascriptManipulator {\n    constructor(code = '') {\n        this.code = code;\n    }\n    async setCode(code) {\n        this.code = code;\n        await this.parse();\n        return this.code;\n    }\n    async mergeCode(newCode) {\n        try {\n            await esprima.parseScript(newCode, {\n                tolerant: true,\n                range: true,\n                loc: true,\n                attachComment: true\n            });\n        } catch (e) {\n            console.error(e);\n            debugLog('Error parsing the new code snippet');\n            return false;\n        }\n        this.code = this.code + '\\n\\n\\n\\n' + newCode;\n        await this.parse();\n        await this.mergeDuplicates();\n        return await this.generateCode();\n    }\n    async mergeDuplicates() {\n        try {\n            await this.parse();\n            console.log('parsed');\n            await this.cleanUpComments();\n            console.log('cleaned up comments');\n            await this.makeAllFunctionsExported();\n            console.log('made all functions exported');\n            await this.makeAllClassesExported();\n            console.log('made all classes exported');\n            await this.mergeDuplicateImports();\n            console.log('merged duplicate imports');\n            await this.mergeDuplicateVariables();\n            console.log('merged duplicate variables');\n            await this.mergeDuplicateFunctions();\n            console.log('merged duplicate functions');\n            await this.mergeDuplicateClasses();\n            console.log('merged duplicate classes');\n            await this.removeEmptyExports();\n            console.log('removed empty exports');\n            return await this.generateCode();\n        } catch (e) {\n            console.error(e);\n            debugLog('Error parsing the new code snippet');\n            return false;\n        }\n\n    }\n    async removeEmptyExports() {\n        // Remove empty export statements\n        await estraverse.replace(this.ast, {\n            enter: (node, parent) => {\n                if (node.type === 'ExportNamedDeclaration' && !node.declaration && (!node.specifiers || node.specifiers.length === 0)) {\n                    return this.removeNodeFromParent(node, parent);\n                }\n                return node;\n            }\n        });\n    }\n    async mergeDuplicateFunctions() {\n        if (!this.ast) {\n            throw new Error('AST not parsed. Call the `parse` method first.');\n        }\n        const functionMap = new Map();\n        // Traverse the AST to collect all function declarations\n        estraverse.traverse(this.ast, {\n            enter: node => {\n                if (node.type === 'FunctionDeclaration') {\n                    const functionName = node.id.name;\n                    debugLog(`Processing function: ${functionName}`);\n                    if (functionMap.has(functionName)) {\n                        const existingFunction = functionMap.get(functionName);\n                        debugLog(`Duplicate function found: ${functionName}`);\n                        // Check if the new function contains code\n                        const hasCode = node.body.body && node.body.body.length > 0;\n                        const existingHasCode = existingFunction.body.body && existingFunction.body.body.length > 0;\n                        // Handle JSDoc comments\n                        const jsDocComment = node.leadingComments?.find(comment => comment.type === 'Block' && comment.value.startsWith('*'));\n                        if (hasCode) {\n                            debugLog(`Replacing existing function '${functionName}' with new implementation.`);\n                            functionMap.set(functionName, node);\n                            // Update map to hold the new function\n                            // Copy JSDoc comments from the new function if exists\n                            if (jsDocComment) {\n                                existingFunction.leadingComments = [\n                                    ...existingFunction.leadingComments || [],\n                                    jsDocComment\n                                ];\n                            }\n                        } else if (existingHasCode) {\n                            debugLog(`Keeping existing function '${functionName}' as it has valid implementation.`);\n                        } else {\n                            debugLog(`Both functions '${functionName}' are stubs; keeping the first one.`);\n                        }\n                        // Keep the original stub\n                        // Mark the duplicate function for removal (the one that is lower in the file)\n                        if (hasCode) {\n                            existingFunction.remove = true;\n                        } else\n                        // We want to remove the earlier one only if hasCode is true\n                        {\n                            node.remove = true;\n                        }\n                    } else\n                    // If duplicate stubs, mark the later one for removal\n                    {\n                        debugLog(`Adding function '${functionName}' to map.`);\n                        functionMap.set(functionName, node);\n                    }\n                }\n            }\n        });\n        // Store the new function in the map\n        // Remove marked duplicate functions\n        estraverse.replace(this.ast, {\n            enter: (node, parent) => {\n                if (node.remove) {\n                    debugLog(`Removing duplicate function: ${node.id.name}`);\n                    return this.removeNodeFromParent(node, parent);\n                }\n                return node;\n            }\n        });\n        // Check for exported functions and ensure they stay distinct\n        estraverse.replace(this.ast, {\n            enter: node => {\n                if (node.type === 'ExportNamedDeclaration' && node.declaration && node.declaration.type === 'FunctionDeclaration') {\n                    const functionName = node.declaration.id.name;\n                    debugLog(`Processing exported function: ${functionName}`);\n                    if (functionMap.has(functionName)) {\n                        const existingFunction = functionMap.get(functionName);\n                        if (existingFunction !== node.declaration) {\n                            debugLog(`Marking old exported function '${functionName}' for removal.`);\n                            existingFunction.remove = true;\n                        }\n                    }\n                }\n            }\n        });\n        // Mark the old function for removal\n        return this.ast;\n    }\n    async mergeDuplicateImports() {\n        if (!this.ast) {\n            throw new Error('AST not parsed. Call the `parse` method first.');\n        }\n        const importMap = new Map();\n        const importNodes = [];\n        debugLog('Merging duplicate imports');\n        // Traverse the AST to collect and combine imports\n        estraverse.traverse(this.ast, {\n            enter: (node, parent) => {\n                if (node.type === 'ImportDeclaration') {\n                    const source = node.source.value;\n                    debugLog(`import {${node.specifiers.map(s => s.local.name).join(', ')}} from '${source}'`);\n                    if (importMap.has(source)) {\n                        // Merge specifiers from the duplicate import\n                        const existingNode = importMap.get(source);\n                        const existingSpecifiers = existingNode.specifiers;\n                        const newSpecifiers = node.specifiers;\n                        // Avoid duplicates in specifiers\n                        newSpecifiers.forEach(specifier => {\n                            if (!existingSpecifiers.some(existing => existing.local.name === specifier.local.name)) {\n                                existingSpecifiers.push(specifier);\n                            }\n                        });\n                        // Mark the duplicate node for removal\n                        node.remove = true;\n                    } else {\n                        // Add the import to the map\n                        importMap.set(source, node);\n                        importNodes.push(node);\n                    }\n                }\n            }\n        });\n        // Keep track of import nodes\n        // Remove duplicate import nodes\n        estraverse.replace(this.ast, {\n            enter: (node, parent) => {\n                if (node.type === 'ImportDeclaration' && node.remove) {\n                    return this.removeNodeFromParent(node, parent);\n                }\n                return node;\n            }\n        });\n        // Move all imports to the top of the program\n        estraverse.replace(this.ast, {\n            enter: node => {\n                if (node.type === 'Program') {\n                    // Remove all imports from their original position\n                    node.body = node.body.filter(child => child.type !== 'ImportDeclaration');\n                    // Add the combined import statements to the top\n                    node.body.unshift(...importNodes);\n                }\n                return node;\n            }\n        });\n        return this.ast;\n    }\n    async mergeDuplicateVariables() {\n        if (!this.ast) {\n            throw new Error('AST not parsed. Call the `parse` method first.');\n        }\n        const variableMap = new Map();\n        // Traverse the AST to collect root-level variable declarations\n        estraverse.traverse(this.ast, {\n            enter: (node, parent) => {\n                // Only process root-level variable declarations\n                if (node.type === 'VariableDeclaration' && parent.type === 'Program') {\n                    node.declarations.forEach(declaration => {\n                        const variableName = declaration.id.name;\n                        if (variableMap.has(variableName)) {\n                            const existingDeclaration = variableMap.get(variableName);\n                            existingDeclaration.id = declaration.id;\n                            existingDeclaration.init = declaration.init;\n                            // Mark the new (later) declaration for removal\n                            declaration.remove = true;\n                        } else {\n                            // Add the variable to the map\n                            variableMap.set(variableName, declaration);\n                        }\n                    });\n                }\n            }\n        });\n        // Remove duplicate variable declarations\n        estraverse.replace(this.ast, {\n            enter: (node, parent) => {\n                if (node.type === 'VariableDeclaration' && node.declarations.every(decl => decl.remove)) {\n                    return this.removeNodeFromParent(node, parent);\n                }\n                // Filter out removed declarations from VariableDeclaration nodes\n                if (node.type === 'VariableDeclaration') {\n                    node.declarations = node.declarations.filter(decl => !decl.remove);\n                }\n                return node;\n            }\n        });\n        return this.ast;\n    }\n    async mergeDuplicateClasses() {\n        if (!this.ast) {\n            throw new Error('AST not parsed. Call the `parse` method first.');\n        }\n        const classMap = new Map();\n        // Traverse the AST to collect all class declarations\n        estraverse.traverse(this.ast, {\n            enter: node => {\n                if (node.type === 'ClassDeclaration') {\n                    const className = node.id.name;\n                    if (classMap.has(className)) {\n                        const existingClass = classMap.get(className);\n                        const existingMethods = new Map(existingClass.body.body.filter(method => method.type === 'MethodDefinition').map(method => [\n                            method.key.name,\n                            method\n                        ]));\n                        node.body.body.forEach(method => {\n                            if (method.type === 'MethodDefinition') {\n                                const methodName = method.key.name;\n                                if (existingMethods.has(methodName)) {\n                                    const existingMethod = existingMethods.get(methodName);\n                                    // Handle JSDoc comments\n                                    const jsDocComment = method.leadingComments?.find(comment => comment.type === 'Block' && comment.value.startsWith('*'));\n                                    // Replace method only if the new method has code\n                                    if (method.value.body && method.value.body.body.length > 0) {\n                                        existingMethod.value = method.value;\n                                        if (jsDocComment) {\n                                            existingMethod.leadingComments = [\n                                                ...existingMethod.leadingComments || [],\n                                                jsDocComment\n                                            ];\n                                        }\n                                    } else {\n                                        if (jsDocComment) {\n                                            existingMethod.leadingComments = [\n                                                ...existingMethod.leadingComments || [],\n                                                jsDocComment\n                                            ];\n                                        }\n                                    }\n                                } else {\n                                    // Add the new method if it does not exist\n                                    existingClass.body.body.push(method);\n                                }\n                            }\n                        });\n                        // Mark the current class for removal\n                        node.remove = true;\n                    } else {\n                        // Add the class to the map\n                        classMap.set(className, node);\n                    }\n                }\n            }\n        });\n        // Remove duplicate classes\n        estraverse.replace(this.ast, {\n            enter: (node, parent) => {\n                if (node.remove) {\n                    return this.removeNodeFromParent(node, parent);\n                }\n                return node;\n            }\n        });\n        return this.ast;\n    }\n    async cleanUpComments() {\n        // iterate over the AST and remove adjacent duplicate leading comments\n        await estraverse.traverse(this.ast, {\n            enter: node => {\n                if (node.leadingComments) {\n                    for (let i = 0; i < node.leadingComments.length - 1; i++) {\n                        if (node.leadingComments[i].value === node.leadingComments[i + 1].value) {\n                            node.leadingComments.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        });\n        await estraverse.traverse(this.ast, {\n            enter: node => {\n                if (node.leadingComments) {\n                    node.leadingComments = node.leadingComments.filter(comment => !comment.value.match(/... existing/i));\n                }\n            }\n        });\n        // if a comment includes \"\" remove the string \"\" (case insensitive)\n        await estraverse.traverse(this.ast, {\n            enter: node => {\n                if (node.leadingComments) {\n                    node.leadingComments = node.leadingComments.map(comment => {\n                        return {\n                            type: comment.type,\n                            value: comment.value.replace(/New method:/i, '')\n                        };\n                    });\n                }\n            }\n        });\n    }\n    removeNodeFromParent(node, parent) {\n        if (!parent)\n            return null;\n        if (Array.isArray(parent.body)) {\n            parent.body = parent.body.filter(child => child !== node);\n        }\n        return null;\n    }\n    async makeAllClassesExported() {\n        if (!this.ast) {\n            throw new Error('AST not parsed. Call the `parse` method first.');\n        }\n        await estraverse.replace(this.ast, {\n            enter: (node, parent) => {\n                // Check if the node is a class declaration\n                if (node.type === 'ClassDeclaration') {\n                    // If the parent is not already an export declaration, modify it\n                    if (!parent || parent.type !== 'ExportNamedDeclaration') {\n                        // Wrap in ExportNamedDeclaration only if not already exported\n                        // copy the comments from the function to the export statement\n                        const leadingComments = node.leadingComments;\n                        const trailingComments = node.trailingComments;\n                        node.leadingComments = [];\n                        node.trailingComments = [];\n                        return {\n                            type: 'ExportNamedDeclaration',\n                            declaration: node,\n                            specifiers: [],\n                            source: null,\n                            leadingComments,\n                            trailingComments\n                        };\n                    }\n                }\n                return node;\n            }\n        });\n        await this.generateCode();\n        return this.ast;\n    }\n    async makeAllFunctionsExported() {\n        if (!this.ast) {\n            throw new Error('AST not parsed. Call the `parse` method first.');\n        }\n\n        estraverse.replace(this.ast, {\n            enter: (node, parent) => {\n                // Check if the node is a FunctionDeclaration\n                if (node.type === 'FunctionDeclaration') {\n                    // Ensure the parent is the root Program node\n                    if (parent && parent.type === 'Program') {\n                        // If not already an ExportNamedDeclaration, wrap it\n                        if (!parent.body.some(\n                            (child) =>\n                                child.type === 'ExportNamedDeclaration' &&\n                                child.declaration === node\n                        )) {\n                            // Handle comments\n                            const leadingComments = node.leadingComments || [];\n                            const trailingComments = node.trailingComments || [];\n                            node.leadingComments = [];\n                            node.trailingComments = [];\n\n                            return {\n                                type: 'ExportNamedDeclaration',\n                                declaration: node,\n                                specifiers: [],\n                                source: null,\n                                leadingComments,\n                                trailingComments,\n                            };\n                        }\n                    }\n                }\n                return node;\n            },\n        });\n\n        await this.generateCode();\n        return this.ast;\n    }\n\n    async parse() {\n        this.ast = {};\n        this.ast = await esprima.parseScript(this.code, {\n            tolerant: true,\n            range: true,\n            loc: true,\n            attachComment: true,\n            sourceType: 'module'\n        });\n        // remove trailing comments from the original code except for the last one under the particular node\n        estraverse.traverse(this.ast, {\n            enter: node => {\n                if (node.trailingComments) {\n                    node.trailingComments = [];\n                }\n            }\n        });\n        // iterate over the AST and remove adjacent duplicate leading comments\n        estraverse.traverse(this.ast, {\n            enter: node => {\n                if (node.leadingComments) {\n                    for (let i = 0; i < node.leadingComments.length - 1; i++) {\n                        if (node.leadingComments[i].value === node.leadingComments[i + 1].value) {\n                            node.leadingComments.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        });\n        //debugLog(this.ast);\n        return this.ast;\n    }\n    async generateCode() {\n        //debugLog('Generating code', this.code);\n        if (!this.ast) {\n            throw new Error('AST not parsed. Call the `parse` method first.');\n        }\n        //debugLog(this.ast)\n        const newCode = await escodegen.generate(this.ast, {\n            comment: true,\n            format: {\n                indent: {\n                    style: '    ',\n                    base: 0,\n                    adjustMultilineComment: false\n                },\n                newline: '\\n',\n                space: ' ',\n                json: false,\n                renumber: false,\n                hexadecimal: false,\n                quotes: 'single',\n                escapeless: true,\n                compact: false,\n                parentheses: true,\n                semicolons: true,\n                safeConcatenation: true\n            }\n        });\n        //debugLog(`this is the new code: ${newCode}`);\n        //debugLog(this.ast);\n        this.code = newCode;\n        await this.parse();\n        return this.code;\n    }\n}\n\n\nasync function debugLog(...args) {\n    if (debug) {\n        console.log(...args);\n    }\n}","/*\n  Copyright (C) 2012-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2015 Ingvar Stepanyan <me@rreverser.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n  Copyright (C) 2012-2013 Michael Ficarra <escodegen.copyright@michael.ficarra.me>\n  Copyright (C) 2012-2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2013 Irakli Gozalishvili <rfobic@gmail.com>\n  Copyright (C) 2012 Robert Gust-Bardon <donate@robert.gust-bardon.org>\n  Copyright (C) 2012 John Freeman <jfreeman08@gmail.com>\n  Copyright (C) 2011-2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2020 Apple Inc. All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*global exports:true, require:true, global:true*/\n(function () {\n    'use strict';\n\n    var Syntax,\n        Precedence,\n        BinaryPrecedence,\n        SourceNode,\n        estraverse,\n        esutils,\n        base,\n        indent,\n        json,\n        renumber,\n        hexadecimal,\n        quotes,\n        escapeless,\n        newline,\n        space,\n        parentheses,\n        semicolons,\n        safeConcatenation,\n        directive,\n        extra,\n        parse,\n        sourceMap,\n        sourceCode,\n        preserveBlankLines,\n        FORMAT_MINIFY,\n        FORMAT_DEFAULTS;\n\n    estraverse = require('estraverse');\n    esutils = require('esutils');\n\n    Syntax = estraverse.Syntax;\n\n    // Generation is done by generateExpression.\n    function isExpression(node) {\n        return CodeGenerator.Expression.hasOwnProperty(node.type);\n    }\n\n    // Generation is done by generateStatement.\n    function isStatement(node) {\n        return CodeGenerator.Statement.hasOwnProperty(node.type);\n    }\n\n    Precedence = {\n        Sequence: 0,\n        Yield: 1,\n        Assignment: 1,\n        Conditional: 2,\n        ArrowFunction: 2,\n        Coalesce: 3,\n        LogicalOR: 4,\n        LogicalAND: 5,\n        BitwiseOR: 6,\n        BitwiseXOR: 7,\n        BitwiseAND: 8,\n        Equality: 9,\n        Relational: 10,\n        BitwiseSHIFT: 11,\n        Additive: 12,\n        Multiplicative: 13,\n        Exponentiation: 14,\n        Await: 15,\n        Unary: 15,\n        Postfix: 16,\n        OptionalChaining: 17,\n        Call: 18,\n        New: 19,\n        TaggedTemplate: 20,\n        Member: 21,\n        Primary: 22\n    };\n\n    BinaryPrecedence = {\n        '??': Precedence.Coalesce,\n        '||': Precedence.LogicalOR,\n        '&&': Precedence.LogicalAND,\n        '|': Precedence.BitwiseOR,\n        '^': Precedence.BitwiseXOR,\n        '&': Precedence.BitwiseAND,\n        '==': Precedence.Equality,\n        '!=': Precedence.Equality,\n        '===': Precedence.Equality,\n        '!==': Precedence.Equality,\n        'is': Precedence.Equality,\n        'isnt': Precedence.Equality,\n        '<': Precedence.Relational,\n        '>': Precedence.Relational,\n        '<=': Precedence.Relational,\n        '>=': Precedence.Relational,\n        'in': Precedence.Relational,\n        'instanceof': Precedence.Relational,\n        '<<': Precedence.BitwiseSHIFT,\n        '>>': Precedence.BitwiseSHIFT,\n        '>>>': Precedence.BitwiseSHIFT,\n        '+': Precedence.Additive,\n        '-': Precedence.Additive,\n        '*': Precedence.Multiplicative,\n        '%': Precedence.Multiplicative,\n        '/': Precedence.Multiplicative,\n        '**': Precedence.Exponentiation\n    };\n\n    //Flags\n    var F_ALLOW_IN = 1,\n        F_ALLOW_CALL = 1 << 1,\n        F_ALLOW_UNPARATH_NEW = 1 << 2,\n        F_FUNC_BODY = 1 << 3,\n        F_DIRECTIVE_CTX = 1 << 4,\n        F_SEMICOLON_OPT = 1 << 5,\n        F_FOUND_COALESCE = 1 << 6;\n\n    //Expression flag sets\n    //NOTE: Flag order:\n    // F_ALLOW_IN\n    // F_ALLOW_CALL\n    // F_ALLOW_UNPARATH_NEW\n    var E_FTT = F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,\n        E_TTF = F_ALLOW_IN | F_ALLOW_CALL,\n        E_TTT = F_ALLOW_IN | F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,\n        E_TFF = F_ALLOW_IN,\n        E_FFT = F_ALLOW_UNPARATH_NEW,\n        E_TFT = F_ALLOW_IN | F_ALLOW_UNPARATH_NEW;\n\n    //Statement flag sets\n    //NOTE: Flag order:\n    // F_ALLOW_IN\n    // F_FUNC_BODY\n    // F_DIRECTIVE_CTX\n    // F_SEMICOLON_OPT\n    var S_TFFF = F_ALLOW_IN,\n        S_TFFT = F_ALLOW_IN | F_SEMICOLON_OPT,\n        S_FFFF = 0x00,\n        S_TFTF = F_ALLOW_IN | F_DIRECTIVE_CTX,\n        S_TTFF = F_ALLOW_IN | F_FUNC_BODY;\n\n    function getDefaultOptions() {\n        // default options\n        return {\n            indent: null,\n            base: null,\n            parse: null,\n            comment: false,\n            format: {\n                indent: {\n                    style: '    ',\n                    base: 0,\n                    adjustMultilineComment: false\n                },\n                newline: '\\n',\n                space: ' ',\n                json: false,\n                renumber: false,\n                hexadecimal: false,\n                quotes: 'single',\n                escapeless: false,\n                compact: false,\n                parentheses: true,\n                semicolons: true,\n                safeConcatenation: false,\n                preserveBlankLines: false\n            },\n            moz: {\n                comprehensionExpressionStartsWithAssignment: false,\n                starlessGenerator: false\n            },\n            sourceMap: null,\n            sourceMapRoot: null,\n            sourceMapWithCode: false,\n            directive: false,\n            raw: true,\n            verbatim: null,\n            sourceCode: null\n        };\n    }\n\n    function stringRepeat(str, num) {\n        var result = '';\n\n        for (num |= 0; num > 0; num >>>= 1, str += str) {\n            if (num & 1) {\n                result += str;\n            }\n        }\n\n        return result;\n    }\n\n    function hasLineTerminator(str) {\n        return (/[\\r\\n]/g).test(str);\n    }\n\n    function endsWithLineTerminator(str) {\n        var len = str.length;\n        return len && esutils.code.isLineTerminator(str.charCodeAt(len - 1));\n    }\n\n    function merge(target, override) {\n        var key;\n        for (key in override) {\n            if (override.hasOwnProperty(key)) {\n                target[key] = override[key];\n            }\n        }\n        return target;\n    }\n\n    function updateDeeply(target, override) {\n        var key, val;\n\n        function isHashObject(target) {\n            return typeof target === 'object' && target instanceof Object && !(target instanceof RegExp);\n        }\n\n        for (key in override) {\n            if (override.hasOwnProperty(key)) {\n                val = override[key];\n                if (isHashObject(val)) {\n                    if (isHashObject(target[key])) {\n                        updateDeeply(target[key], val);\n                    } else {\n                        target[key] = updateDeeply({}, val);\n                    }\n                } else {\n                    target[key] = val;\n                }\n            }\n        }\n        return target;\n    }\n\n    function generateNumber(value) {\n        var result, point, temp, exponent, pos;\n\n        if (value !== value) {\n            throw new Error('Numeric literal whose value is NaN');\n        }\n        if (value < 0 || (value === 0 && 1 / value < 0)) {\n            throw new Error('Numeric literal whose value is negative');\n        }\n\n        if (value === 1 / 0) {\n            return json ? 'null' : renumber ? '1e400' : '1e+400';\n        }\n\n        result = '' + value;\n        if (!renumber || result.length < 3) {\n            return result;\n        }\n\n        point = result.indexOf('.');\n        if (!json && result.charCodeAt(0) === 0x30  /* 0 */ && point === 1) {\n            point = 0;\n            result = result.slice(1);\n        }\n        temp = result;\n        result = result.replace('e+', 'e');\n        exponent = 0;\n        if ((pos = temp.indexOf('e')) > 0) {\n            exponent = +temp.slice(pos + 1);\n            temp = temp.slice(0, pos);\n        }\n        if (point >= 0) {\n            exponent -= temp.length - point - 1;\n            temp = +(temp.slice(0, point) + temp.slice(point + 1)) + '';\n        }\n        pos = 0;\n        while (temp.charCodeAt(temp.length + pos - 1) === 0x30  /* 0 */) {\n            --pos;\n        }\n        if (pos !== 0) {\n            exponent -= pos;\n            temp = temp.slice(0, pos);\n        }\n        if (exponent !== 0) {\n            temp += 'e' + exponent;\n        }\n        if ((temp.length < result.length ||\n                    (hexadecimal && value > 1e12 && Math.floor(value) === value && (temp = '0x' + value.toString(16)).length < result.length)) &&\n                +temp === value) {\n            result = temp;\n        }\n\n        return result;\n    }\n\n    // Generate valid RegExp expression.\n    // This function is based on https://github.com/Constellation/iv Engine\n\n    function escapeRegExpCharacter(ch, previousIsBackslash) {\n        // not handling '\\' and handling \\u2028 or \\u2029 to unicode escape sequence\n        if ((ch & ~1) === 0x2028) {\n            return (previousIsBackslash ? 'u' : '\\\\u') + ((ch === 0x2028) ? '2028' : '2029');\n        } else if (ch === 10 || ch === 13) {  // \\n, \\r\n            return (previousIsBackslash ? '' : '\\\\') + ((ch === 10) ? 'n' : 'r');\n        }\n        return String.fromCharCode(ch);\n    }\n\n    function generateRegExp(reg) {\n        var match, result, flags, i, iz, ch, characterInBrack, previousIsBackslash;\n\n        result = reg.toString();\n\n        if (reg.source) {\n            // extract flag from toString result\n            match = result.match(/\\/([^/]*)$/);\n            if (!match) {\n                return result;\n            }\n\n            flags = match[1];\n            result = '';\n\n            characterInBrack = false;\n            previousIsBackslash = false;\n            for (i = 0, iz = reg.source.length; i < iz; ++i) {\n                ch = reg.source.charCodeAt(i);\n\n                if (!previousIsBackslash) {\n                    if (characterInBrack) {\n                        if (ch === 93) {  // ]\n                            characterInBrack = false;\n                        }\n                    } else {\n                        if (ch === 47) {  // /\n                            result += '\\\\';\n                        } else if (ch === 91) {  // [\n                            characterInBrack = true;\n                        }\n                    }\n                    result += escapeRegExpCharacter(ch, previousIsBackslash);\n                    previousIsBackslash = ch === 92;  // \\\n                } else {\n                    // if new RegExp(\"\\\\\\n') is provided, create /\\n/\n                    result += escapeRegExpCharacter(ch, previousIsBackslash);\n                    // prevent like /\\\\[/]/\n                    previousIsBackslash = false;\n                }\n            }\n\n            return '/' + result + '/' + flags;\n        }\n\n        return result;\n    }\n\n    function escapeAllowedCharacter(code, next) {\n        var hex;\n\n        if (code === 0x08  /* \\b */) {\n            return '\\\\b';\n        }\n\n        if (code === 0x0C  /* \\f */) {\n            return '\\\\f';\n        }\n\n        if (code === 0x09  /* \\t */) {\n            return '\\\\t';\n        }\n\n        hex = code.toString(16).toUpperCase();\n        if (json || code > 0xFF) {\n            return '\\\\u' + '0000'.slice(hex.length) + hex;\n        } else if (code === 0x0000 && !esutils.code.isDecimalDigit(next)) {\n            return '\\\\0';\n        } else if (code === 0x000B  /* \\v */) { // '\\v'\n            return '\\\\x0B';\n        } else {\n            return '\\\\x' + '00'.slice(hex.length) + hex;\n        }\n    }\n\n    function escapeDisallowedCharacter(code) {\n        if (code === 0x5C  /* \\ */) {\n            return '\\\\\\\\';\n        }\n\n        if (code === 0x0A  /* \\n */) {\n            return '\\\\n';\n        }\n\n        if (code === 0x0D  /* \\r */) {\n            return '\\\\r';\n        }\n\n        if (code === 0x2028) {\n            return '\\\\u2028';\n        }\n\n        if (code === 0x2029) {\n            return '\\\\u2029';\n        }\n\n        throw new Error('Incorrectly classified character');\n    }\n\n    function escapeDirective(str) {\n        var i, iz, code, quote;\n\n        quote = quotes === 'double' ? '\"' : '\\'';\n        for (i = 0, iz = str.length; i < iz; ++i) {\n            code = str.charCodeAt(i);\n            if (code === 0x27  /* ' */) {\n                quote = '\"';\n                break;\n            } else if (code === 0x22  /* \" */) {\n                quote = '\\'';\n                break;\n            } else if (code === 0x5C  /* \\ */) {\n                ++i;\n            }\n        }\n\n        return quote + str + quote;\n    }\n\n    function escapeString(str) {\n        var result = '', i, len, code, singleQuotes = 0, doubleQuotes = 0, single, quote;\n\n        for (i = 0, len = str.length; i < len; ++i) {\n            code = str.charCodeAt(i);\n            if (code === 0x27  /* ' */) {\n                ++singleQuotes;\n            } else if (code === 0x22  /* \" */) {\n                ++doubleQuotes;\n            } else if (code === 0x2F  /* / */ && json) {\n                result += '\\\\';\n            } else if (esutils.code.isLineTerminator(code) || code === 0x5C  /* \\ */) {\n                result += escapeDisallowedCharacter(code);\n                continue;\n            } else if (!esutils.code.isIdentifierPartES5(code) && (json && code < 0x20  /* SP */ || !json && !escapeless && (code < 0x20  /* SP */ || code > 0x7E  /* ~ */))) {\n                result += escapeAllowedCharacter(code, str.charCodeAt(i + 1));\n                continue;\n            }\n            result += String.fromCharCode(code);\n        }\n\n        single = !(quotes === 'double' || (quotes === 'auto' && doubleQuotes < singleQuotes));\n        quote = single ? '\\'' : '\"';\n\n        if (!(single ? singleQuotes : doubleQuotes)) {\n            return quote + result + quote;\n        }\n\n        str = result;\n        result = quote;\n\n        for (i = 0, len = str.length; i < len; ++i) {\n            code = str.charCodeAt(i);\n            if ((code === 0x27  /* ' */ && single) || (code === 0x22  /* \" */ && !single)) {\n                result += '\\\\';\n            }\n            result += String.fromCharCode(code);\n        }\n\n        return result + quote;\n    }\n\n    /**\n     * flatten an array to a string, where the array can contain\n     * either strings or nested arrays\n     */\n    function flattenToString(arr) {\n        var i, iz, elem, result = '';\n        for (i = 0, iz = arr.length; i < iz; ++i) {\n            elem = arr[i];\n            result += Array.isArray(elem) ? flattenToString(elem) : elem;\n        }\n        return result;\n    }\n\n    /**\n     * convert generated to a SourceNode when source maps are enabled.\n     */\n    function toSourceNodeWhenNeeded(generated, node) {\n        if (!sourceMap) {\n            // with no source maps, generated is either an\n            // array or a string.  if an array, flatten it.\n            // if a string, just return it\n            if (Array.isArray(generated)) {\n                return flattenToString(generated);\n            } else {\n                return generated;\n            }\n        }\n        if (node == null) {\n            if (generated instanceof SourceNode) {\n                return generated;\n            } else {\n                node = {};\n            }\n        }\n        if (node.loc == null) {\n            return new SourceNode(null, null, sourceMap, generated, node.name || null);\n        }\n        return new SourceNode(node.loc.start.line, node.loc.start.column, (sourceMap === true ? node.loc.source || null : sourceMap), generated, node.name || null);\n    }\n\n    function noEmptySpace() {\n        return (space) ? space : ' ';\n    }\n\n    function join(left, right) {\n        var leftSource,\n            rightSource,\n            leftCharCode,\n            rightCharCode;\n\n        leftSource = toSourceNodeWhenNeeded(left).toString();\n        if (leftSource.length === 0) {\n            return [right];\n        }\n\n        rightSource = toSourceNodeWhenNeeded(right).toString();\n        if (rightSource.length === 0) {\n            return [left];\n        }\n\n        leftCharCode = leftSource.charCodeAt(leftSource.length - 1);\n        rightCharCode = rightSource.charCodeAt(0);\n\n        if ((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode ||\n            esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode) ||\n            leftCharCode === 0x2F  /* / */ && rightCharCode === 0x69  /* i */) { // infix word operators all start with `i`\n            return [left, noEmptySpace(), right];\n        } else if (esutils.code.isWhiteSpace(leftCharCode) || esutils.code.isLineTerminator(leftCharCode) ||\n                esutils.code.isWhiteSpace(rightCharCode) || esutils.code.isLineTerminator(rightCharCode)) {\n            return [left, right];\n        }\n        return [left, space, right];\n    }\n\n    function addIndent(stmt) {\n        return [base, stmt];\n    }\n\n    function withIndent(fn) {\n        var previousBase;\n        previousBase = base;\n        base += indent;\n        fn(base);\n        base = previousBase;\n    }\n\n    function calculateSpaces(str) {\n        var i;\n        for (i = str.length - 1; i >= 0; --i) {\n            if (esutils.code.isLineTerminator(str.charCodeAt(i))) {\n                break;\n            }\n        }\n        return (str.length - 1) - i;\n    }\n\n    function adjustMultilineComment(value, specialBase) {\n        var array, i, len, line, j, spaces, previousBase, sn;\n\n        array = value.split(/\\r\\n|[\\r\\n]/);\n        spaces = Number.MAX_VALUE;\n\n        // first line doesn't have indentation\n        for (i = 1, len = array.length; i < len; ++i) {\n            line = array[i];\n            j = 0;\n            while (j < line.length && esutils.code.isWhiteSpace(line.charCodeAt(j))) {\n                ++j;\n            }\n            if (spaces > j) {\n                spaces = j;\n            }\n        }\n\n        if (typeof specialBase !== 'undefined') {\n            // pattern like\n            // {\n            //   var t = 20;  /*\n            //                 * this is comment\n            //                 */\n            // }\n            previousBase = base;\n            if (array[1][spaces] === '*') {\n                specialBase += ' ';\n            }\n            base = specialBase;\n        } else {\n            if (spaces & 1) {\n                // /*\n                //  *\n                //  */\n                // If spaces are odd number, above pattern is considered.\n                // We waste 1 space.\n                --spaces;\n            }\n            previousBase = base;\n        }\n\n        for (i = 1, len = array.length; i < len; ++i) {\n            sn = toSourceNodeWhenNeeded(addIndent(array[i].slice(spaces)));\n            array[i] = sourceMap ? sn.join('') : sn;\n        }\n\n        base = previousBase;\n\n        return array.join('\\n');\n    }\n\n    function generateComment(comment, specialBase) {\n        if (comment.type === 'Line') {\n            if (endsWithLineTerminator(comment.value)) {\n                return '//' + comment.value;\n            } else {\n                // Always use LineTerminator\n                var result = '//' + comment.value;\n                if (!preserveBlankLines) {\n                    result += '\\n';\n                }\n                return result;\n            }\n        }\n        if (extra.format.indent.adjustMultilineComment && /[\\n\\r]/.test(comment.value)) {\n            return adjustMultilineComment('/*' + comment.value + '*/', specialBase);\n        }\n        return '/*' + comment.value + '*/';\n    }\n\n    function addComments(stmt, result) {\n        var i, len, comment, save, tailingToStatement, specialBase, fragment,\n            extRange, range, prevRange, prefix, infix, suffix, count;\n\n        if (stmt.leadingComments && stmt.leadingComments.length > 0) {\n            save = result;\n\n            if (preserveBlankLines) {\n                comment = stmt.leadingComments[0];\n                result = [];\n\n                extRange = comment.extendedRange;\n                range = comment.range;\n\n                prefix = sourceCode.substring(extRange[0], range[0]);\n                count = (prefix.match(/\\n/g) || []).length;\n                if (count > 0) {\n                    result.push(stringRepeat('\\n', count));\n                    result.push(addIndent(generateComment(comment)));\n                } else {\n                    result.push(prefix);\n                    result.push(generateComment(comment));\n                }\n\n                prevRange = range;\n\n                for (i = 1, len = stmt.leadingComments.length; i < len; i++) {\n                    comment = stmt.leadingComments[i];\n                    range = comment.range;\n\n                    infix = sourceCode.substring(prevRange[1], range[0]);\n                    count = (infix.match(/\\n/g) || []).length;\n                    result.push(stringRepeat('\\n', count));\n                    result.push(addIndent(generateComment(comment)));\n\n                    prevRange = range;\n                }\n\n                suffix = sourceCode.substring(range[1], extRange[1]);\n                count = (suffix.match(/\\n/g) || []).length;\n                result.push(stringRepeat('\\n', count));\n            } else {\n                comment = stmt.leadingComments[0];\n                result = [];\n                if (safeConcatenation && stmt.type === Syntax.Program && stmt.body.length === 0) {\n                    result.push('\\n');\n                }\n                result.push(generateComment(comment));\n                if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                    result.push('\\n');\n                }\n\n                for (i = 1, len = stmt.leadingComments.length; i < len; ++i) {\n                    comment = stmt.leadingComments[i];\n                    fragment = [generateComment(comment)];\n                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                        fragment.push('\\n');\n                    }\n                    result.push(addIndent(fragment));\n                }\n            }\n\n            result.push(addIndent(save));\n        }\n\n        if (stmt.trailingComments) {\n\n            if (preserveBlankLines) {\n                comment = stmt.trailingComments[0];\n                extRange = comment.extendedRange;\n                range = comment.range;\n\n                prefix = sourceCode.substring(extRange[0], range[0]);\n                count = (prefix.match(/\\n/g) || []).length;\n\n                if (count > 0) {\n                    result.push(stringRepeat('\\n', count));\n                    result.push(addIndent(generateComment(comment)));\n                } else {\n                    result.push(prefix);\n                    result.push(generateComment(comment));\n                }\n            } else {\n                tailingToStatement = !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());\n                specialBase = stringRepeat(' ', calculateSpaces(toSourceNodeWhenNeeded([base, result, indent]).toString()));\n                for (i = 0, len = stmt.trailingComments.length; i < len; ++i) {\n                    comment = stmt.trailingComments[i];\n                    if (tailingToStatement) {\n                        // We assume target like following script\n                        //\n                        // var t = 20;  /**\n                        //               * This is comment of t\n                        //               */\n                        if (i === 0) {\n                            // first case\n                            result = [result, indent];\n                        } else {\n                            result = [result, specialBase];\n                        }\n                        result.push(generateComment(comment, specialBase));\n                    } else {\n                        result = [result, addIndent(generateComment(comment))];\n                    }\n                    if (i !== len - 1 && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                        result = [result, '\\n'];\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function generateBlankLines(start, end, result) {\n        var j, newlineCount = 0;\n\n        for (j = start; j < end; j++) {\n            if (sourceCode[j] === '\\n') {\n                newlineCount++;\n            }\n        }\n\n        for (j = 1; j < newlineCount; j++) {\n            result.push(newline);\n        }\n    }\n\n    function parenthesize(text, current, should) {\n        if (current < should) {\n            return ['(', text, ')'];\n        }\n        return text;\n    }\n\n    function generateVerbatimString(string) {\n        var i, iz, result;\n        result = string.split(/\\r\\n|\\n/);\n        for (i = 1, iz = result.length; i < iz; i++) {\n            result[i] = newline + base + result[i];\n        }\n        return result;\n    }\n\n    function generateVerbatim(expr, precedence) {\n        var verbatim, result, prec;\n        verbatim = expr[extra.verbatim];\n\n        if (typeof verbatim === 'string') {\n            result = parenthesize(generateVerbatimString(verbatim), Precedence.Sequence, precedence);\n        } else {\n            // verbatim is object\n            result = generateVerbatimString(verbatim.content);\n            prec = (verbatim.precedence != null) ? verbatim.precedence : Precedence.Sequence;\n            result = parenthesize(result, prec, precedence);\n        }\n\n        return toSourceNodeWhenNeeded(result, expr);\n    }\n\n    function CodeGenerator() {\n    }\n\n    // Helpers.\n\n    CodeGenerator.prototype.maybeBlock = function(stmt, flags) {\n        var result, noLeadingComment, that = this;\n\n        noLeadingComment = !extra.comment || !stmt.leadingComments;\n\n        if (stmt.type === Syntax.BlockStatement && noLeadingComment) {\n            return [space, this.generateStatement(stmt, flags)];\n        }\n\n        if (stmt.type === Syntax.EmptyStatement && noLeadingComment) {\n            return ';';\n        }\n\n        withIndent(function () {\n            result = [\n                newline,\n                addIndent(that.generateStatement(stmt, flags))\n            ];\n        });\n\n        return result;\n    };\n\n    CodeGenerator.prototype.maybeBlockSuffix = function (stmt, result) {\n        var ends = endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());\n        if (stmt.type === Syntax.BlockStatement && (!extra.comment || !stmt.leadingComments) && !ends) {\n            return [result, space];\n        }\n        if (ends) {\n            return [result, base];\n        }\n        return [result, newline, base];\n    };\n\n    function generateIdentifier(node) {\n        return toSourceNodeWhenNeeded(node.name, node);\n    }\n\n    function generateAsyncPrefix(node, spaceRequired) {\n        return node.async ? 'async' + (spaceRequired ? noEmptySpace() : space) : '';\n    }\n\n    function generateStarSuffix(node) {\n        var isGenerator = node.generator && !extra.moz.starlessGenerator;\n        return isGenerator ? '*' + space : '';\n    }\n\n    function generateMethodPrefix(prop) {\n        var func = prop.value, prefix = '';\n        if (func.async) {\n            prefix += generateAsyncPrefix(func, !prop.computed);\n        }\n        if (func.generator) {\n            // avoid space before method name\n            prefix += generateStarSuffix(func) ? '*' : '';\n        }\n        return prefix;\n    }\n\n    CodeGenerator.prototype.generatePattern = function (node, precedence, flags) {\n        if (node.type === Syntax.Identifier) {\n            return generateIdentifier(node);\n        }\n        return this.generateExpression(node, precedence, flags);\n    };\n\n    CodeGenerator.prototype.generateFunctionParams = function (node) {\n        var i, iz, result, hasDefault;\n\n        hasDefault = false;\n\n        if (node.type === Syntax.ArrowFunctionExpression &&\n                !node.rest && (!node.defaults || node.defaults.length === 0) &&\n                node.params.length === 1 && node.params[0].type === Syntax.Identifier) {\n            // arg => { } case\n            result = [generateAsyncPrefix(node, true), generateIdentifier(node.params[0])];\n        } else {\n            result = node.type === Syntax.ArrowFunctionExpression ? [generateAsyncPrefix(node, false)] : [];\n            result.push('(');\n            if (node.defaults) {\n                hasDefault = true;\n            }\n            for (i = 0, iz = node.params.length; i < iz; ++i) {\n                if (hasDefault && node.defaults[i]) {\n                    // Handle default values.\n                    result.push(this.generateAssignment(node.params[i], node.defaults[i], '=', Precedence.Assignment, E_TTT));\n                } else {\n                    result.push(this.generatePattern(node.params[i], Precedence.Assignment, E_TTT));\n                }\n                if (i + 1 < iz) {\n                    result.push(',' + space);\n                }\n            }\n\n            if (node.rest) {\n                if (node.params.length) {\n                    result.push(',' + space);\n                }\n                result.push('...');\n                result.push(generateIdentifier(node.rest));\n            }\n\n            result.push(')');\n        }\n\n        return result;\n    };\n\n    CodeGenerator.prototype.generateFunctionBody = function (node) {\n        var result, expr;\n\n        result = this.generateFunctionParams(node);\n\n        if (node.type === Syntax.ArrowFunctionExpression) {\n            result.push(space);\n            result.push('=>');\n        }\n\n        if (node.expression) {\n            result.push(space);\n            expr = this.generateExpression(node.body, Precedence.Assignment, E_TTT);\n            if (expr.toString().charAt(0) === '{') {\n                expr = ['(', expr, ')'];\n            }\n            result.push(expr);\n        } else {\n            result.push(this.maybeBlock(node.body, S_TTFF));\n        }\n\n        return result;\n    };\n\n    CodeGenerator.prototype.generateIterationForStatement = function (operator, stmt, flags) {\n        var result = ['for' + (stmt.await ? noEmptySpace() + 'await' : '') + space + '('], that = this;\n        withIndent(function () {\n            if (stmt.left.type === Syntax.VariableDeclaration) {\n                withIndent(function () {\n                    result.push(stmt.left.kind + noEmptySpace());\n                    result.push(that.generateStatement(stmt.left.declarations[0], S_FFFF));\n                });\n            } else {\n                result.push(that.generateExpression(stmt.left, Precedence.Call, E_TTT));\n            }\n\n            result = join(result, operator);\n            result = [join(\n                result,\n                that.generateExpression(stmt.right, Precedence.Assignment, E_TTT)\n            ), ')'];\n        });\n        result.push(this.maybeBlock(stmt.body, flags));\n        return result;\n    };\n\n    CodeGenerator.prototype.generatePropertyKey = function (expr, computed) {\n        var result = [];\n\n        if (computed) {\n            result.push('[');\n        }\n\n        result.push(this.generateExpression(expr, Precedence.Assignment, E_TTT));\n\n        if (computed) {\n            result.push(']');\n        }\n\n        return result;\n    };\n\n    CodeGenerator.prototype.generateAssignment = function (left, right, operator, precedence, flags) {\n        if (Precedence.Assignment < precedence) {\n            flags |= F_ALLOW_IN;\n        }\n\n        return parenthesize(\n            [\n                this.generateExpression(left, Precedence.Call, flags),\n                space + operator + space,\n                this.generateExpression(right, Precedence.Assignment, flags)\n            ],\n            Precedence.Assignment,\n            precedence\n        );\n    };\n\n    CodeGenerator.prototype.semicolon = function (flags) {\n        if (!semicolons && flags & F_SEMICOLON_OPT) {\n            return '';\n        }\n        return ';';\n    };\n\n    // Statements.\n\n    CodeGenerator.Statement = {\n\n        BlockStatement: function (stmt, flags) {\n            var range, content, result = ['{', newline], that = this;\n\n            withIndent(function () {\n                // handle functions without any code\n                if (stmt.body.length === 0 && preserveBlankLines) {\n                    range = stmt.range;\n                    if (range[1] - range[0] > 2) {\n                        content = sourceCode.substring(range[0] + 1, range[1] - 1);\n                        if (content[0] === '\\n') {\n                            result = ['{'];\n                        }\n                        result.push(content);\n                    }\n                }\n\n                var i, iz, fragment, bodyFlags;\n                bodyFlags = S_TFFF;\n                if (flags & F_FUNC_BODY) {\n                    bodyFlags |= F_DIRECTIVE_CTX;\n                }\n\n                for (i = 0, iz = stmt.body.length; i < iz; ++i) {\n                    if (preserveBlankLines) {\n                        // handle spaces before the first line\n                        if (i === 0) {\n                            if (stmt.body[0].leadingComments) {\n                                range = stmt.body[0].leadingComments[0].extendedRange;\n                                content = sourceCode.substring(range[0], range[1]);\n                                if (content[0] === '\\n') {\n                                    result = ['{'];\n                                }\n                            }\n                            if (!stmt.body[0].leadingComments) {\n                                generateBlankLines(stmt.range[0], stmt.body[0].range[0], result);\n                            }\n                        }\n\n                        // handle spaces between lines\n                        if (i > 0) {\n                            if (!stmt.body[i - 1].trailingComments  && !stmt.body[i].leadingComments) {\n                                generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);\n                            }\n                        }\n                    }\n\n                    if (i === iz - 1) {\n                        bodyFlags |= F_SEMICOLON_OPT;\n                    }\n\n                    if (stmt.body[i].leadingComments && preserveBlankLines) {\n                        fragment = that.generateStatement(stmt.body[i], bodyFlags);\n                    } else {\n                        fragment = addIndent(that.generateStatement(stmt.body[i], bodyFlags));\n                    }\n\n                    result.push(fragment);\n                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                        if (preserveBlankLines && i < iz - 1) {\n                            // don't add a new line if there are leading coments\n                            // in the next statement\n                            if (!stmt.body[i + 1].leadingComments) {\n                                result.push(newline);\n                            }\n                        } else {\n                            result.push(newline);\n                        }\n                    }\n\n                    if (preserveBlankLines) {\n                        // handle spaces after the last line\n                        if (i === iz - 1) {\n                            if (!stmt.body[i].trailingComments) {\n                                generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);\n                            }\n                        }\n                    }\n                }\n            });\n\n            result.push(addIndent('}'));\n            return result;\n        },\n\n        BreakStatement: function (stmt, flags) {\n            if (stmt.label) {\n                return 'break ' + stmt.label.name + this.semicolon(flags);\n            }\n            return 'break' + this.semicolon(flags);\n        },\n\n        ContinueStatement: function (stmt, flags) {\n            if (stmt.label) {\n                return 'continue ' + stmt.label.name + this.semicolon(flags);\n            }\n            return 'continue' + this.semicolon(flags);\n        },\n\n        ClassBody: function (stmt, flags) {\n            var result = [ '{', newline], that = this;\n\n            withIndent(function (indent) {\n                var i, iz;\n\n                for (i = 0, iz = stmt.body.length; i < iz; ++i) {\n                    result.push(indent);\n                    result.push(that.generateExpression(stmt.body[i], Precedence.Sequence, E_TTT));\n                    if (i + 1 < iz) {\n                        result.push(newline);\n                    }\n                }\n            });\n\n            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                result.push(newline);\n            }\n            result.push(base);\n            result.push('}');\n            return result;\n        },\n\n        ClassDeclaration: function (stmt, flags) {\n            var result, fragment;\n            result  = ['class'];\n            if (stmt.id) {\n                result = join(result, this.generateExpression(stmt.id, Precedence.Sequence, E_TTT));\n            }\n            if (stmt.superClass) {\n                fragment = join('extends', this.generateExpression(stmt.superClass, Precedence.Unary, E_TTT));\n                result = join(result, fragment);\n            }\n            result.push(space);\n            result.push(this.generateStatement(stmt.body, S_TFFT));\n            return result;\n        },\n\n        DirectiveStatement: function (stmt, flags) {\n            if (extra.raw && stmt.raw) {\n                return stmt.raw + this.semicolon(flags);\n            }\n            return escapeDirective(stmt.directive) + this.semicolon(flags);\n        },\n\n        DoWhileStatement: function (stmt, flags) {\n            // Because `do 42 while (cond)` is Syntax Error. We need semicolon.\n            var result = join('do', this.maybeBlock(stmt.body, S_TFFF));\n            result = this.maybeBlockSuffix(stmt.body, result);\n            return join(result, [\n                'while' + space + '(',\n                this.generateExpression(stmt.test, Precedence.Sequence, E_TTT),\n                ')' + this.semicolon(flags)\n            ]);\n        },\n\n        CatchClause: function (stmt, flags) {\n            var result, that = this;\n            withIndent(function () {\n                var guard;\n\n                if (stmt.param) {\n                    result = [\n                        'catch' + space + '(',\n                        that.generateExpression(stmt.param, Precedence.Sequence, E_TTT),\n                        ')'\n                    ];\n\n                    if (stmt.guard) {\n                        guard = that.generateExpression(stmt.guard, Precedence.Sequence, E_TTT);\n                        result.splice(2, 0, ' if ', guard);\n                    }\n                } else {\n                    result = ['catch'];\n                }\n            });\n            result.push(this.maybeBlock(stmt.body, S_TFFF));\n            return result;\n        },\n\n        DebuggerStatement: function (stmt, flags) {\n            return 'debugger' + this.semicolon(flags);\n        },\n\n        EmptyStatement: function (stmt, flags) {\n            return ';';\n        },\n\n        ExportDefaultDeclaration: function (stmt, flags) {\n            var result = [ 'export' ], bodyFlags;\n\n            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;\n\n            // export default HoistableDeclaration[Default]\n            // export default AssignmentExpression[In] ;\n            result = join(result, 'default');\n            if (isStatement(stmt.declaration)) {\n                result = join(result, this.generateStatement(stmt.declaration, bodyFlags));\n            } else {\n                result = join(result, this.generateExpression(stmt.declaration, Precedence.Assignment, E_TTT) + this.semicolon(flags));\n            }\n            return result;\n        },\n\n        ExportNamedDeclaration: function (stmt, flags) {\n            var result = [ 'export' ], bodyFlags, that = this;\n\n            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;\n\n            // export VariableStatement\n            // export Declaration[Default]\n            if (stmt.declaration) {\n                return join(result, this.generateStatement(stmt.declaration, bodyFlags));\n            }\n\n            // export ExportClause[NoReference] FromClause ;\n            // export ExportClause ;\n            if (stmt.specifiers) {\n                if (stmt.specifiers.length === 0) {\n                    result = join(result, '{' + space + '}');\n                } else if (stmt.specifiers[0].type === Syntax.ExportBatchSpecifier) {\n                    result = join(result, this.generateExpression(stmt.specifiers[0], Precedence.Sequence, E_TTT));\n                } else {\n                    result = join(result, '{');\n                    withIndent(function (indent) {\n                        var i, iz;\n                        result.push(newline);\n                        for (i = 0, iz = stmt.specifiers.length; i < iz; ++i) {\n                            result.push(indent);\n                            result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));\n                            if (i + 1 < iz) {\n                                result.push(',' + newline);\n                            }\n                        }\n                    });\n                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                        result.push(newline);\n                    }\n                    result.push(base + '}');\n                }\n\n                if (stmt.source) {\n                    result = join(result, [\n                        'from' + space,\n                        // ModuleSpecifier\n                        this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),\n                        this.semicolon(flags)\n                    ]);\n                } else {\n                    result.push(this.semicolon(flags));\n                }\n            }\n            return result;\n        },\n\n        ExportAllDeclaration: function (stmt, flags) {\n            // export * FromClause ;\n            return [\n                'export' + space,\n                '*' + space,\n                'from' + space,\n                // ModuleSpecifier\n                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),\n                this.semicolon(flags)\n            ];\n        },\n\n        ExpressionStatement: function (stmt, flags) {\n            var result, fragment;\n\n            function isClassPrefixed(fragment) {\n                var code;\n                if (fragment.slice(0, 5) !== 'class') {\n                    return false;\n                }\n                code = fragment.charCodeAt(5);\n                return code === 0x7B  /* '{' */ || esutils.code.isWhiteSpace(code) || esutils.code.isLineTerminator(code);\n            }\n\n            function isFunctionPrefixed(fragment) {\n                var code;\n                if (fragment.slice(0, 8) !== 'function') {\n                    return false;\n                }\n                code = fragment.charCodeAt(8);\n                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);\n            }\n\n            function isAsyncPrefixed(fragment) {\n                var code, i, iz;\n                if (fragment.slice(0, 5) !== 'async') {\n                    return false;\n                }\n                if (!esutils.code.isWhiteSpace(fragment.charCodeAt(5))) {\n                    return false;\n                }\n                for (i = 6, iz = fragment.length; i < iz; ++i) {\n                    if (!esutils.code.isWhiteSpace(fragment.charCodeAt(i))) {\n                        break;\n                    }\n                }\n                if (i === iz) {\n                    return false;\n                }\n                if (fragment.slice(i, i + 8) !== 'function') {\n                    return false;\n                }\n                code = fragment.charCodeAt(i + 8);\n                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);\n            }\n\n            result = [this.generateExpression(stmt.expression, Precedence.Sequence, E_TTT)];\n            // 12.4 '{', 'function', 'class' is not allowed in this position.\n            // wrap expression with parentheses\n            fragment = toSourceNodeWhenNeeded(result).toString();\n            if (fragment.charCodeAt(0) === 0x7B  /* '{' */ ||  // ObjectExpression\n                    isClassPrefixed(fragment) ||\n                    isFunctionPrefixed(fragment) ||\n                    isAsyncPrefixed(fragment) ||\n                    (directive && (flags & F_DIRECTIVE_CTX) && stmt.expression.type === Syntax.Literal && typeof stmt.expression.value === 'string')) {\n                result = ['(', result, ')' + this.semicolon(flags)];\n            } else {\n                result.push(this.semicolon(flags));\n            }\n            return result;\n        },\n\n        ImportDeclaration: function (stmt, flags) {\n            // ES6: 15.2.1 valid import declarations:\n            //     - import ImportClause FromClause ;\n            //     - import ModuleSpecifier ;\n            var result, cursor, that = this;\n\n            // If no ImportClause is present,\n            // this should be `import ModuleSpecifier` so skip `from`\n            // ModuleSpecifier is StringLiteral.\n            if (stmt.specifiers.length === 0) {\n                // import ModuleSpecifier ;\n                return [\n                    'import',\n                    space,\n                    // ModuleSpecifier\n                    this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),\n                    this.semicolon(flags)\n                ];\n            }\n\n            // import ImportClause FromClause ;\n            result = [\n                'import'\n            ];\n            cursor = 0;\n\n            // ImportedBinding\n            if (stmt.specifiers[cursor].type === Syntax.ImportDefaultSpecifier) {\n                result = join(result, [\n                        this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)\n                ]);\n                ++cursor;\n            }\n\n            if (stmt.specifiers[cursor]) {\n                if (cursor !== 0) {\n                    result.push(',');\n                }\n\n                if (stmt.specifiers[cursor].type === Syntax.ImportNamespaceSpecifier) {\n                    // NameSpaceImport\n                    result = join(result, [\n                            space,\n                            this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)\n                    ]);\n                } else {\n                    // NamedImports\n                    result.push(space + '{');\n\n                    if ((stmt.specifiers.length - cursor) === 1) {\n                        // import { ... } from \"...\";\n                        result.push(space);\n                        result.push(this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT));\n                        result.push(space + '}' + space);\n                    } else {\n                        // import {\n                        //    ...,\n                        //    ...,\n                        // } from \"...\";\n                        withIndent(function (indent) {\n                            var i, iz;\n                            result.push(newline);\n                            for (i = cursor, iz = stmt.specifiers.length; i < iz; ++i) {\n                                result.push(indent);\n                                result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));\n                                if (i + 1 < iz) {\n                                    result.push(',' + newline);\n                                }\n                            }\n                        });\n                        if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                            result.push(newline);\n                        }\n                        result.push(base + '}' + space);\n                    }\n                }\n            }\n\n            result = join(result, [\n                'from' + space,\n                // ModuleSpecifier\n                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),\n                this.semicolon(flags)\n            ]);\n            return result;\n        },\n\n        VariableDeclarator: function (stmt, flags) {\n            var itemFlags = (flags & F_ALLOW_IN) ? E_TTT : E_FTT;\n            if (stmt.init) {\n                return [\n                    this.generateExpression(stmt.id, Precedence.Assignment, itemFlags),\n                    space,\n                    '=',\n                    space,\n                    this.generateExpression(stmt.init, Precedence.Assignment, itemFlags)\n                ];\n            }\n            return this.generatePattern(stmt.id, Precedence.Assignment, itemFlags);\n        },\n\n        VariableDeclaration: function (stmt, flags) {\n            // VariableDeclarator is typed as Statement,\n            // but joined with comma (not LineTerminator).\n            // So if comment is attached to target node, we should specialize.\n            var result, i, iz, node, bodyFlags, that = this;\n\n            result = [ stmt.kind ];\n\n            bodyFlags = (flags & F_ALLOW_IN) ? S_TFFF : S_FFFF;\n\n            function block() {\n                node = stmt.declarations[0];\n                if (extra.comment && node.leadingComments) {\n                    result.push('\\n');\n                    result.push(addIndent(that.generateStatement(node, bodyFlags)));\n                } else {\n                    result.push(noEmptySpace());\n                    result.push(that.generateStatement(node, bodyFlags));\n                }\n\n                for (i = 1, iz = stmt.declarations.length; i < iz; ++i) {\n                    node = stmt.declarations[i];\n                    if (extra.comment && node.leadingComments) {\n                        result.push(',' + newline);\n                        result.push(addIndent(that.generateStatement(node, bodyFlags)));\n                    } else {\n                        result.push(',' + space);\n                        result.push(that.generateStatement(node, bodyFlags));\n                    }\n                }\n            }\n\n            if (stmt.declarations.length > 1) {\n                withIndent(block);\n            } else {\n                block();\n            }\n\n            result.push(this.semicolon(flags));\n\n            return result;\n        },\n\n        ThrowStatement: function (stmt, flags) {\n            return [join(\n                'throw',\n                this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)\n            ), this.semicolon(flags)];\n        },\n\n        TryStatement: function (stmt, flags) {\n            var result, i, iz, guardedHandlers;\n\n            result = ['try', this.maybeBlock(stmt.block, S_TFFF)];\n            result = this.maybeBlockSuffix(stmt.block, result);\n\n            if (stmt.handlers) {\n                // old interface\n                for (i = 0, iz = stmt.handlers.length; i < iz; ++i) {\n                    result = join(result, this.generateStatement(stmt.handlers[i], S_TFFF));\n                    if (stmt.finalizer || i + 1 !== iz) {\n                        result = this.maybeBlockSuffix(stmt.handlers[i].body, result);\n                    }\n                }\n            } else {\n                guardedHandlers = stmt.guardedHandlers || [];\n\n                for (i = 0, iz = guardedHandlers.length; i < iz; ++i) {\n                    result = join(result, this.generateStatement(guardedHandlers[i], S_TFFF));\n                    if (stmt.finalizer || i + 1 !== iz) {\n                        result = this.maybeBlockSuffix(guardedHandlers[i].body, result);\n                    }\n                }\n\n                // new interface\n                if (stmt.handler) {\n                    if (Array.isArray(stmt.handler)) {\n                        for (i = 0, iz = stmt.handler.length; i < iz; ++i) {\n                            result = join(result, this.generateStatement(stmt.handler[i], S_TFFF));\n                            if (stmt.finalizer || i + 1 !== iz) {\n                                result = this.maybeBlockSuffix(stmt.handler[i].body, result);\n                            }\n                        }\n                    } else {\n                        result = join(result, this.generateStatement(stmt.handler, S_TFFF));\n                        if (stmt.finalizer) {\n                            result = this.maybeBlockSuffix(stmt.handler.body, result);\n                        }\n                    }\n                }\n            }\n            if (stmt.finalizer) {\n                result = join(result, ['finally', this.maybeBlock(stmt.finalizer, S_TFFF)]);\n            }\n            return result;\n        },\n\n        SwitchStatement: function (stmt, flags) {\n            var result, fragment, i, iz, bodyFlags, that = this;\n            withIndent(function () {\n                result = [\n                    'switch' + space + '(',\n                    that.generateExpression(stmt.discriminant, Precedence.Sequence, E_TTT),\n                    ')' + space + '{' + newline\n                ];\n            });\n            if (stmt.cases) {\n                bodyFlags = S_TFFF;\n                for (i = 0, iz = stmt.cases.length; i < iz; ++i) {\n                    if (i === iz - 1) {\n                        bodyFlags |= F_SEMICOLON_OPT;\n                    }\n                    fragment = addIndent(this.generateStatement(stmt.cases[i], bodyFlags));\n                    result.push(fragment);\n                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                        result.push(newline);\n                    }\n                }\n            }\n            result.push(addIndent('}'));\n            return result;\n        },\n\n        SwitchCase: function (stmt, flags) {\n            var result, fragment, i, iz, bodyFlags, that = this;\n            withIndent(function () {\n                if (stmt.test) {\n                    result = [\n                        join('case', that.generateExpression(stmt.test, Precedence.Sequence, E_TTT)),\n                        ':'\n                    ];\n                } else {\n                    result = ['default:'];\n                }\n\n                i = 0;\n                iz = stmt.consequent.length;\n                if (iz && stmt.consequent[0].type === Syntax.BlockStatement) {\n                    fragment = that.maybeBlock(stmt.consequent[0], S_TFFF);\n                    result.push(fragment);\n                    i = 1;\n                }\n\n                if (i !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                    result.push(newline);\n                }\n\n                bodyFlags = S_TFFF;\n                for (; i < iz; ++i) {\n                    if (i === iz - 1 && flags & F_SEMICOLON_OPT) {\n                        bodyFlags |= F_SEMICOLON_OPT;\n                    }\n                    fragment = addIndent(that.generateStatement(stmt.consequent[i], bodyFlags));\n                    result.push(fragment);\n                    if (i + 1 !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                        result.push(newline);\n                    }\n                }\n            });\n            return result;\n        },\n\n        IfStatement: function (stmt, flags) {\n            var result, bodyFlags, semicolonOptional, that = this;\n            withIndent(function () {\n                result = [\n                    'if' + space + '(',\n                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),\n                    ')'\n                ];\n            });\n            semicolonOptional = flags & F_SEMICOLON_OPT;\n            bodyFlags = S_TFFF;\n            if (semicolonOptional) {\n                bodyFlags |= F_SEMICOLON_OPT;\n            }\n            if (stmt.alternate) {\n                result.push(this.maybeBlock(stmt.consequent, S_TFFF));\n                result = this.maybeBlockSuffix(stmt.consequent, result);\n                if (stmt.alternate.type === Syntax.IfStatement) {\n                    result = join(result, ['else ', this.generateStatement(stmt.alternate, bodyFlags)]);\n                } else {\n                    result = join(result, join('else', this.maybeBlock(stmt.alternate, bodyFlags)));\n                }\n            } else {\n                result.push(this.maybeBlock(stmt.consequent, bodyFlags));\n            }\n            return result;\n        },\n\n        ForStatement: function (stmt, flags) {\n            var result, that = this;\n            withIndent(function () {\n                result = ['for' + space + '('];\n                if (stmt.init) {\n                    if (stmt.init.type === Syntax.VariableDeclaration) {\n                        result.push(that.generateStatement(stmt.init, S_FFFF));\n                    } else {\n                        // F_ALLOW_IN becomes false.\n                        result.push(that.generateExpression(stmt.init, Precedence.Sequence, E_FTT));\n                        result.push(';');\n                    }\n                } else {\n                    result.push(';');\n                }\n\n                if (stmt.test) {\n                    result.push(space);\n                    result.push(that.generateExpression(stmt.test, Precedence.Sequence, E_TTT));\n                    result.push(';');\n                } else {\n                    result.push(';');\n                }\n\n                if (stmt.update) {\n                    result.push(space);\n                    result.push(that.generateExpression(stmt.update, Precedence.Sequence, E_TTT));\n                    result.push(')');\n                } else {\n                    result.push(')');\n                }\n            });\n\n            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));\n            return result;\n        },\n\n        ForInStatement: function (stmt, flags) {\n            return this.generateIterationForStatement('in', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);\n        },\n\n        ForOfStatement: function (stmt, flags) {\n            return this.generateIterationForStatement('of', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);\n        },\n\n        LabeledStatement: function (stmt, flags) {\n            return [stmt.label.name + ':', this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF)];\n        },\n\n        Program: function (stmt, flags) {\n            var result, fragment, i, iz, bodyFlags;\n            iz = stmt.body.length;\n            result = [safeConcatenation && iz > 0 ? '\\n' : ''];\n            bodyFlags = S_TFTF;\n            for (i = 0; i < iz; ++i) {\n                if (!safeConcatenation && i === iz - 1) {\n                    bodyFlags |= F_SEMICOLON_OPT;\n                }\n\n                if (preserveBlankLines) {\n                    // handle spaces before the first line\n                    if (i === 0) {\n                        if (!stmt.body[0].leadingComments) {\n                            generateBlankLines(stmt.range[0], stmt.body[i].range[0], result);\n                        }\n                    }\n\n                    // handle spaces between lines\n                    if (i > 0) {\n                        if (!stmt.body[i - 1].trailingComments && !stmt.body[i].leadingComments) {\n                            generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);\n                        }\n                    }\n                }\n\n                fragment = addIndent(this.generateStatement(stmt.body[i], bodyFlags));\n                result.push(fragment);\n                if (i + 1 < iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                    if (preserveBlankLines) {\n                        if (!stmt.body[i + 1].leadingComments) {\n                            result.push(newline);\n                        }\n                    } else {\n                        result.push(newline);\n                    }\n                }\n\n                if (preserveBlankLines) {\n                    // handle spaces after the last line\n                    if (i === iz - 1) {\n                        if (!stmt.body[i].trailingComments) {\n                            generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);\n                        }\n                    }\n                }\n            }\n            return result;\n        },\n\n        FunctionDeclaration: function (stmt, flags) {\n            return [\n                generateAsyncPrefix(stmt, true),\n                'function',\n                generateStarSuffix(stmt) || noEmptySpace(),\n                stmt.id ? generateIdentifier(stmt.id) : '',\n                this.generateFunctionBody(stmt)\n            ];\n        },\n\n        ReturnStatement: function (stmt, flags) {\n            if (stmt.argument) {\n                return [join(\n                    'return',\n                    this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)\n                ), this.semicolon(flags)];\n            }\n            return ['return' + this.semicolon(flags)];\n        },\n\n        WhileStatement: function (stmt, flags) {\n            var result, that = this;\n            withIndent(function () {\n                result = [\n                    'while' + space + '(',\n                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),\n                    ')'\n                ];\n            });\n            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));\n            return result;\n        },\n\n        WithStatement: function (stmt, flags) {\n            var result, that = this;\n            withIndent(function () {\n                result = [\n                    'with' + space + '(',\n                    that.generateExpression(stmt.object, Precedence.Sequence, E_TTT),\n                    ')'\n                ];\n            });\n            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));\n            return result;\n        }\n\n    };\n\n    merge(CodeGenerator.prototype, CodeGenerator.Statement);\n\n    // Expressions.\n\n    CodeGenerator.Expression = {\n\n        SequenceExpression: function (expr, precedence, flags) {\n            var result, i, iz;\n            if (Precedence.Sequence < precedence) {\n                flags |= F_ALLOW_IN;\n            }\n            result = [];\n            for (i = 0, iz = expr.expressions.length; i < iz; ++i) {\n                result.push(this.generateExpression(expr.expressions[i], Precedence.Assignment, flags));\n                if (i + 1 < iz) {\n                    result.push(',' + space);\n                }\n            }\n            return parenthesize(result, Precedence.Sequence, precedence);\n        },\n\n        AssignmentExpression: function (expr, precedence, flags) {\n            return this.generateAssignment(expr.left, expr.right, expr.operator, precedence, flags);\n        },\n\n        ArrowFunctionExpression: function (expr, precedence, flags) {\n            return parenthesize(this.generateFunctionBody(expr), Precedence.ArrowFunction, precedence);\n        },\n\n        ConditionalExpression: function (expr, precedence, flags) {\n            if (Precedence.Conditional < precedence) {\n                flags |= F_ALLOW_IN;\n            }\n            return parenthesize(\n                [\n                    this.generateExpression(expr.test, Precedence.Coalesce, flags),\n                    space + '?' + space,\n                    this.generateExpression(expr.consequent, Precedence.Assignment, flags),\n                    space + ':' + space,\n                    this.generateExpression(expr.alternate, Precedence.Assignment, flags)\n                ],\n                Precedence.Conditional,\n                precedence\n            );\n        },\n\n        LogicalExpression: function (expr, precedence, flags) {\n            if (expr.operator === '??') {\n                flags |= F_FOUND_COALESCE;\n            }\n            return this.BinaryExpression(expr, precedence, flags);\n        },\n\n        BinaryExpression: function (expr, precedence, flags) {\n            var result, leftPrecedence, rightPrecedence, currentPrecedence, fragment, leftSource;\n            currentPrecedence = BinaryPrecedence[expr.operator];\n            leftPrecedence = expr.operator === '**' ? Precedence.Postfix : currentPrecedence;\n            rightPrecedence = expr.operator === '**' ? currentPrecedence : currentPrecedence + 1;\n\n            if (currentPrecedence < precedence) {\n                flags |= F_ALLOW_IN;\n            }\n\n            fragment = this.generateExpression(expr.left, leftPrecedence, flags);\n\n            leftSource = fragment.toString();\n\n            if (leftSource.charCodeAt(leftSource.length - 1) === 0x2F /* / */ && esutils.code.isIdentifierPartES5(expr.operator.charCodeAt(0))) {\n                result = [fragment, noEmptySpace(), expr.operator];\n            } else {\n                result = join(fragment, expr.operator);\n            }\n\n            fragment = this.generateExpression(expr.right, rightPrecedence, flags);\n\n            if (expr.operator === '/' && fragment.toString().charAt(0) === '/' ||\n            expr.operator.slice(-1) === '<' && fragment.toString().slice(0, 3) === '!--') {\n                // If '/' concats with '/' or `<` concats with `!--`, it is interpreted as comment start\n                result.push(noEmptySpace());\n                result.push(fragment);\n            } else {\n                result = join(result, fragment);\n            }\n\n            if (expr.operator === 'in' && !(flags & F_ALLOW_IN)) {\n                return ['(', result, ')'];\n            }\n            if ((expr.operator === '||' || expr.operator === '&&') && (flags & F_FOUND_COALESCE)) {\n                return ['(', result, ')'];\n            }\n            return parenthesize(result, currentPrecedence, precedence);\n        },\n\n        CallExpression: function (expr, precedence, flags) {\n            var result, i, iz;\n\n            // F_ALLOW_UNPARATH_NEW becomes false.\n            result = [this.generateExpression(expr.callee, Precedence.Call, E_TTF)];\n\n            if (expr.optional) {\n                result.push('?.');\n            }\n\n            result.push('(');\n            for (i = 0, iz = expr['arguments'].length; i < iz; ++i) {\n                result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));\n                if (i + 1 < iz) {\n                    result.push(',' + space);\n                }\n            }\n            result.push(')');\n\n            if (!(flags & F_ALLOW_CALL)) {\n                return ['(', result, ')'];\n            }\n\n            return parenthesize(result, Precedence.Call, precedence);\n        },\n\n        ChainExpression: function (expr, precedence, flags) {\n            if (Precedence.OptionalChaining < precedence) {\n                flags |= F_ALLOW_CALL;\n            }\n\n            var result = this.generateExpression(expr.expression, Precedence.OptionalChaining, flags);\n\n            return parenthesize(result, Precedence.OptionalChaining, precedence);\n        },\n\n        NewExpression: function (expr, precedence, flags) {\n            var result, length, i, iz, itemFlags;\n            length = expr['arguments'].length;\n\n            // F_ALLOW_CALL becomes false.\n            // F_ALLOW_UNPARATH_NEW may become false.\n            itemFlags = (flags & F_ALLOW_UNPARATH_NEW && !parentheses && length === 0) ? E_TFT : E_TFF;\n\n            result = join(\n                'new',\n                this.generateExpression(expr.callee, Precedence.New, itemFlags)\n            );\n\n            if (!(flags & F_ALLOW_UNPARATH_NEW) || parentheses || length > 0) {\n                result.push('(');\n                for (i = 0, iz = length; i < iz; ++i) {\n                    result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));\n                    if (i + 1 < iz) {\n                        result.push(',' + space);\n                    }\n                }\n                result.push(')');\n            }\n\n            return parenthesize(result, Precedence.New, precedence);\n        },\n\n        MemberExpression: function (expr, precedence, flags) {\n            var result, fragment;\n\n            // F_ALLOW_UNPARATH_NEW becomes false.\n            result = [this.generateExpression(expr.object, Precedence.Call, (flags & F_ALLOW_CALL) ? E_TTF : E_TFF)];\n\n            if (expr.computed) {\n                if (expr.optional) {\n                    result.push('?.');\n                }\n\n                result.push('[');\n                result.push(this.generateExpression(expr.property, Precedence.Sequence, flags & F_ALLOW_CALL ? E_TTT : E_TFT));\n                result.push(']');\n            } else {\n                if (!expr.optional && expr.object.type === Syntax.Literal && typeof expr.object.value === 'number') {\n                    fragment = toSourceNodeWhenNeeded(result).toString();\n                    // When the following conditions are all true,\n                    //   1. No floating point\n                    //   2. Don't have exponents\n                    //   3. The last character is a decimal digit\n                    //   4. Not hexadecimal OR octal number literal\n                    // we should add a floating point.\n                    if (\n                            fragment.indexOf('.') < 0 &&\n                            !/[eExX]/.test(fragment) &&\n                            esutils.code.isDecimalDigit(fragment.charCodeAt(fragment.length - 1)) &&\n                            !(fragment.length >= 2 && fragment.charCodeAt(0) === 48)  // '0'\n                            ) {\n                        result.push(' ');\n                    }\n                }\n                result.push(expr.optional ? '?.' : '.');\n                result.push(generateIdentifier(expr.property));\n            }\n\n            return parenthesize(result, Precedence.Member, precedence);\n        },\n\n        MetaProperty: function (expr, precedence, flags) {\n            var result;\n            result = [];\n            result.push(typeof expr.meta === \"string\" ? expr.meta : generateIdentifier(expr.meta));\n            result.push('.');\n            result.push(typeof expr.property === \"string\" ? expr.property : generateIdentifier(expr.property));\n            return parenthesize(result, Precedence.Member, precedence);\n        },\n\n        UnaryExpression: function (expr, precedence, flags) {\n            var result, fragment, rightCharCode, leftSource, leftCharCode;\n            fragment = this.generateExpression(expr.argument, Precedence.Unary, E_TTT);\n\n            if (space === '') {\n                result = join(expr.operator, fragment);\n            } else {\n                result = [expr.operator];\n                if (expr.operator.length > 2) {\n                    // delete, void, typeof\n                    // get `typeof []`, not `typeof[]`\n                    result = join(result, fragment);\n                } else {\n                    // Prevent inserting spaces between operator and argument if it is unnecessary\n                    // like, `!cond`\n                    leftSource = toSourceNodeWhenNeeded(result).toString();\n                    leftCharCode = leftSource.charCodeAt(leftSource.length - 1);\n                    rightCharCode = fragment.toString().charCodeAt(0);\n\n                    if (((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode) ||\n                            (esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode))) {\n                        result.push(noEmptySpace());\n                        result.push(fragment);\n                    } else {\n                        result.push(fragment);\n                    }\n                }\n            }\n            return parenthesize(result, Precedence.Unary, precedence);\n        },\n\n        YieldExpression: function (expr, precedence, flags) {\n            var result;\n            if (expr.delegate) {\n                result = 'yield*';\n            } else {\n                result = 'yield';\n            }\n            if (expr.argument) {\n                result = join(\n                    result,\n                    this.generateExpression(expr.argument, Precedence.Yield, E_TTT)\n                );\n            }\n            return parenthesize(result, Precedence.Yield, precedence);\n        },\n\n        AwaitExpression: function (expr, precedence, flags) {\n            var result = join(\n                expr.all ? 'await*' : 'await',\n                this.generateExpression(expr.argument, Precedence.Await, E_TTT)\n            );\n            return parenthesize(result, Precedence.Await, precedence);\n        },\n\n        UpdateExpression: function (expr, precedence, flags) {\n            if (expr.prefix) {\n                return parenthesize(\n                    [\n                        expr.operator,\n                        this.generateExpression(expr.argument, Precedence.Unary, E_TTT)\n                    ],\n                    Precedence.Unary,\n                    precedence\n                );\n            }\n            return parenthesize(\n                [\n                    this.generateExpression(expr.argument, Precedence.Postfix, E_TTT),\n                    expr.operator\n                ],\n                Precedence.Postfix,\n                precedence\n            );\n        },\n\n        FunctionExpression: function (expr, precedence, flags) {\n            var result = [\n                generateAsyncPrefix(expr, true),\n                'function'\n            ];\n            if (expr.id) {\n                result.push(generateStarSuffix(expr) || noEmptySpace());\n                result.push(generateIdentifier(expr.id));\n            } else {\n                result.push(generateStarSuffix(expr) || space);\n            }\n            result.push(this.generateFunctionBody(expr));\n            return result;\n        },\n\n        ArrayPattern: function (expr, precedence, flags) {\n            return this.ArrayExpression(expr, precedence, flags, true);\n        },\n\n        ArrayExpression: function (expr, precedence, flags, isPattern) {\n            var result, multiline, that = this;\n            if (!expr.elements.length) {\n                return '[]';\n            }\n            multiline = isPattern ? false : expr.elements.length > 1;\n            result = ['[', multiline ? newline : ''];\n            withIndent(function (indent) {\n                var i, iz;\n                for (i = 0, iz = expr.elements.length; i < iz; ++i) {\n                    if (!expr.elements[i]) {\n                        if (multiline) {\n                            result.push(indent);\n                        }\n                        if (i + 1 === iz) {\n                            result.push(',');\n                        }\n                    } else {\n                        result.push(multiline ? indent : '');\n                        result.push(that.generateExpression(expr.elements[i], Precedence.Assignment, E_TTT));\n                    }\n                    if (i + 1 < iz) {\n                        result.push(',' + (multiline ? newline : space));\n                    }\n                }\n            });\n            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                result.push(newline);\n            }\n            result.push(multiline ? base : '');\n            result.push(']');\n            return result;\n        },\n\n        RestElement: function(expr, precedence, flags) {\n            return '...' + this.generatePattern(expr.argument);\n        },\n\n        ClassExpression: function (expr, precedence, flags) {\n            var result, fragment;\n            result = ['class'];\n            if (expr.id) {\n                result = join(result, this.generateExpression(expr.id, Precedence.Sequence, E_TTT));\n            }\n            if (expr.superClass) {\n                fragment = join('extends', this.generateExpression(expr.superClass, Precedence.Unary, E_TTT));\n                result = join(result, fragment);\n            }\n            result.push(space);\n            result.push(this.generateStatement(expr.body, S_TFFT));\n            return result;\n        },\n\n        MethodDefinition: function (expr, precedence, flags) {\n            var result, fragment;\n            if (expr['static']) {\n                result = ['static' + space];\n            } else {\n                result = [];\n            }\n            if (expr.kind === 'get' || expr.kind === 'set') {\n                fragment = [\n                    join(expr.kind, this.generatePropertyKey(expr.key, expr.computed)),\n                    this.generateFunctionBody(expr.value)\n                ];\n            } else {\n                fragment = [\n                    generateMethodPrefix(expr),\n                    this.generatePropertyKey(expr.key, expr.computed),\n                    this.generateFunctionBody(expr.value)\n                ];\n            }\n            return join(result, fragment);\n        },\n\n        Property: function (expr, precedence, flags) {\n            if (expr.kind === 'get' || expr.kind === 'set') {\n                return [\n                    expr.kind, noEmptySpace(),\n                    this.generatePropertyKey(expr.key, expr.computed),\n                    this.generateFunctionBody(expr.value)\n                ];\n            }\n\n            if (expr.shorthand) {\n                if (expr.value.type === \"AssignmentPattern\") {\n                    return this.AssignmentPattern(expr.value, Precedence.Sequence, E_TTT);\n                }\n                return this.generatePropertyKey(expr.key, expr.computed);\n            }\n\n            if (expr.method) {\n                return [\n                    generateMethodPrefix(expr),\n                    this.generatePropertyKey(expr.key, expr.computed),\n                    this.generateFunctionBody(expr.value)\n                ];\n            }\n\n            return [\n                this.generatePropertyKey(expr.key, expr.computed),\n                ':' + space,\n                this.generateExpression(expr.value, Precedence.Assignment, E_TTT)\n            ];\n        },\n\n        ObjectExpression: function (expr, precedence, flags) {\n            var multiline, result, fragment, that = this;\n\n            if (!expr.properties.length) {\n                return '{}';\n            }\n            multiline = expr.properties.length > 1;\n\n            withIndent(function () {\n                fragment = that.generateExpression(expr.properties[0], Precedence.Sequence, E_TTT);\n            });\n\n            if (!multiline) {\n                // issues 4\n                // Do not transform from\n                //   dejavu.Class.declare({\n                //       method2: function () {}\n                //   });\n                // to\n                //   dejavu.Class.declare({method2: function () {\n                //       }});\n                if (!hasLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                    return [ '{', space, fragment, space, '}' ];\n                }\n            }\n\n            withIndent(function (indent) {\n                var i, iz;\n                result = [ '{', newline, indent, fragment ];\n\n                if (multiline) {\n                    result.push(',' + newline);\n                    for (i = 1, iz = expr.properties.length; i < iz; ++i) {\n                        result.push(indent);\n                        result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));\n                        if (i + 1 < iz) {\n                            result.push(',' + newline);\n                        }\n                    }\n                }\n            });\n\n            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                result.push(newline);\n            }\n            result.push(base);\n            result.push('}');\n            return result;\n        },\n\n        AssignmentPattern: function(expr, precedence, flags) {\n            return this.generateAssignment(expr.left, expr.right, '=', precedence, flags);\n        },\n\n        ObjectPattern: function (expr, precedence, flags) {\n            var result, i, iz, multiline, property, that = this;\n            if (!expr.properties.length) {\n                return '{}';\n            }\n\n            multiline = false;\n            if (expr.properties.length === 1) {\n                property = expr.properties[0];\n                if (\n                    property.type === Syntax.Property\n                    && property.value.type !== Syntax.Identifier\n                ) {\n                    multiline = true;\n                }\n            } else {\n                for (i = 0, iz = expr.properties.length; i < iz; ++i) {\n                    property = expr.properties[i];\n                    if (\n                        property.type === Syntax.Property\n                        && !property.shorthand\n                    ) {\n                        multiline = true;\n                        break;\n                    }\n                }\n            }\n            result = ['{', multiline ? newline : '' ];\n\n            withIndent(function (indent) {\n                var i, iz;\n                for (i = 0, iz = expr.properties.length; i < iz; ++i) {\n                    result.push(multiline ? indent : '');\n                    result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));\n                    if (i + 1 < iz) {\n                        result.push(',' + (multiline ? newline : space));\n                    }\n                }\n            });\n\n            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                result.push(newline);\n            }\n            result.push(multiline ? base : '');\n            result.push('}');\n            return result;\n        },\n\n        ThisExpression: function (expr, precedence, flags) {\n            return 'this';\n        },\n\n        Super: function (expr, precedence, flags) {\n            return 'super';\n        },\n\n        Identifier: function (expr, precedence, flags) {\n            return generateIdentifier(expr);\n        },\n\n        ImportDefaultSpecifier: function (expr, precedence, flags) {\n            return generateIdentifier(expr.id || expr.local);\n        },\n\n        ImportNamespaceSpecifier: function (expr, precedence, flags) {\n            var result = ['*'];\n            var id = expr.id || expr.local;\n            if (id) {\n                result.push(space + 'as' + noEmptySpace() + generateIdentifier(id));\n            }\n            return result;\n        },\n\n        ImportSpecifier: function (expr, precedence, flags) {\n            var imported = expr.imported;\n            var result = [ imported.name ];\n            var local = expr.local;\n            if (local && local.name !== imported.name) {\n                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(local));\n            }\n            return result;\n        },\n\n        ExportSpecifier: function (expr, precedence, flags) {\n            var local = expr.local;\n            var result = [ local.name ];\n            var exported = expr.exported;\n            if (exported && exported.name !== local.name) {\n                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(exported));\n            }\n            return result;\n        },\n\n        Literal: function (expr, precedence, flags) {\n            var raw;\n            if (expr.hasOwnProperty('raw') && parse && extra.raw) {\n                try {\n                    raw = parse(expr.raw).body[0].expression;\n                    if (raw.type === Syntax.Literal) {\n                        if (raw.value === expr.value) {\n                            return expr.raw;\n                        }\n                    }\n                } catch (e) {\n                    // not use raw property\n                }\n            }\n\n            if (expr.regex) {\n              return '/' + expr.regex.pattern + '/' + expr.regex.flags;\n            }\n\n            if (typeof expr.value === 'bigint') {\n                return expr.value.toString() + 'n';\n            }\n\n            // `expr.value` can be null if `expr.bigint` exists. We need to check\n            // `expr.bigint` first.\n            if (expr.bigint) {\n                return expr.bigint + 'n';\n            }\n\n            if (expr.value === null) {\n                return 'null';\n            }\n\n            if (typeof expr.value === 'string') {\n                return escapeString(expr.value);\n            }\n\n            if (typeof expr.value === 'number') {\n                return generateNumber(expr.value);\n            }\n\n            if (typeof expr.value === 'boolean') {\n                return expr.value ? 'true' : 'false';\n            }\n\n            return generateRegExp(expr.value);\n        },\n\n        GeneratorExpression: function (expr, precedence, flags) {\n            return this.ComprehensionExpression(expr, precedence, flags);\n        },\n\n        ComprehensionExpression: function (expr, precedence, flags) {\n            // GeneratorExpression should be parenthesized with (...), ComprehensionExpression with [...]\n            // Due to https://bugzilla.mozilla.org/show_bug.cgi?id=883468 position of expr.body can differ in Spidermonkey and ES6\n\n            var result, i, iz, fragment, that = this;\n            result = (expr.type === Syntax.GeneratorExpression) ? ['('] : ['['];\n\n            if (extra.moz.comprehensionExpressionStartsWithAssignment) {\n                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);\n                result.push(fragment);\n            }\n\n            if (expr.blocks) {\n                withIndent(function () {\n                    for (i = 0, iz = expr.blocks.length; i < iz; ++i) {\n                        fragment = that.generateExpression(expr.blocks[i], Precedence.Sequence, E_TTT);\n                        if (i > 0 || extra.moz.comprehensionExpressionStartsWithAssignment) {\n                            result = join(result, fragment);\n                        } else {\n                            result.push(fragment);\n                        }\n                    }\n                });\n            }\n\n            if (expr.filter) {\n                result = join(result, 'if' + space);\n                fragment = this.generateExpression(expr.filter, Precedence.Sequence, E_TTT);\n                result = join(result, [ '(', fragment, ')' ]);\n            }\n\n            if (!extra.moz.comprehensionExpressionStartsWithAssignment) {\n                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);\n\n                result = join(result, fragment);\n            }\n\n            result.push((expr.type === Syntax.GeneratorExpression) ? ')' : ']');\n            return result;\n        },\n\n        ComprehensionBlock: function (expr, precedence, flags) {\n            var fragment;\n            if (expr.left.type === Syntax.VariableDeclaration) {\n                fragment = [\n                    expr.left.kind, noEmptySpace(),\n                    this.generateStatement(expr.left.declarations[0], S_FFFF)\n                ];\n            } else {\n                fragment = this.generateExpression(expr.left, Precedence.Call, E_TTT);\n            }\n\n            fragment = join(fragment, expr.of ? 'of' : 'in');\n            fragment = join(fragment, this.generateExpression(expr.right, Precedence.Sequence, E_TTT));\n\n            return [ 'for' + space + '(', fragment, ')' ];\n        },\n\n        SpreadElement: function (expr, precedence, flags) {\n            return [\n                '...',\n                this.generateExpression(expr.argument, Precedence.Assignment, E_TTT)\n            ];\n        },\n\n        TaggedTemplateExpression: function (expr, precedence, flags) {\n            var itemFlags = E_TTF;\n            if (!(flags & F_ALLOW_CALL)) {\n                itemFlags = E_TFF;\n            }\n            var result = [\n                this.generateExpression(expr.tag, Precedence.Call, itemFlags),\n                this.generateExpression(expr.quasi, Precedence.Primary, E_FFT)\n            ];\n            return parenthesize(result, Precedence.TaggedTemplate, precedence);\n        },\n\n        TemplateElement: function (expr, precedence, flags) {\n            // Don't use \"cooked\". Since tagged template can use raw template\n            // representation. So if we do so, it breaks the script semantics.\n            return expr.value.raw;\n        },\n\n        TemplateLiteral: function (expr, precedence, flags) {\n            var result, i, iz;\n            result = [ '`' ];\n            for (i = 0, iz = expr.quasis.length; i < iz; ++i) {\n                result.push(this.generateExpression(expr.quasis[i], Precedence.Primary, E_TTT));\n                if (i + 1 < iz) {\n                    result.push('${' + space);\n                    result.push(this.generateExpression(expr.expressions[i], Precedence.Sequence, E_TTT));\n                    result.push(space + '}');\n                }\n            }\n            result.push('`');\n            return result;\n        },\n\n        ModuleSpecifier: function (expr, precedence, flags) {\n            return this.Literal(expr, precedence, flags);\n        },\n\n        ImportExpression: function(expr, precedence, flag) {\n            return parenthesize([\n                'import(',\n                this.generateExpression(expr.source, Precedence.Assignment, E_TTT),\n                ')'\n            ], Precedence.Call, precedence);\n        }\n    };\n\n    merge(CodeGenerator.prototype, CodeGenerator.Expression);\n\n    CodeGenerator.prototype.generateExpression = function (expr, precedence, flags) {\n        var result, type;\n\n        type = expr.type || Syntax.Property;\n\n        if (extra.verbatim && expr.hasOwnProperty(extra.verbatim)) {\n            return generateVerbatim(expr, precedence);\n        }\n\n        result = this[type](expr, precedence, flags);\n\n\n        if (extra.comment) {\n            result = addComments(expr, result);\n        }\n        return toSourceNodeWhenNeeded(result, expr);\n    };\n\n    CodeGenerator.prototype.generateStatement = function (stmt, flags) {\n        var result,\n            fragment;\n\n        result = this[stmt.type](stmt, flags);\n\n        // Attach comments\n\n        if (extra.comment) {\n            result = addComments(stmt, result);\n        }\n\n        fragment = toSourceNodeWhenNeeded(result).toString();\n        if (stmt.type === Syntax.Program && !safeConcatenation && newline === '' &&  fragment.charAt(fragment.length - 1) === '\\n') {\n            result = sourceMap ? toSourceNodeWhenNeeded(result).replaceRight(/\\s+$/, '') : fragment.replace(/\\s+$/, '');\n        }\n\n        return toSourceNodeWhenNeeded(result, stmt);\n    };\n\n    function generateInternal(node) {\n        var codegen;\n\n        codegen = new CodeGenerator();\n        if (isStatement(node)) {\n            return codegen.generateStatement(node, S_TFFF);\n        }\n\n        if (isExpression(node)) {\n            return codegen.generateExpression(node, Precedence.Sequence, E_TTT);\n        }\n\n        throw new Error('Unknown node type: ' + node.type);\n    }\n\n    function generate(node, options) {\n        var defaultOptions = getDefaultOptions(), result, pair;\n\n        if (options != null) {\n            // Obsolete options\n            //\n            //   `options.indent`\n            //   `options.base`\n            //\n            // Instead of them, we can use `option.format.indent`.\n            if (typeof options.indent === 'string') {\n                defaultOptions.format.indent.style = options.indent;\n            }\n            if (typeof options.base === 'number') {\n                defaultOptions.format.indent.base = options.base;\n            }\n            options = updateDeeply(defaultOptions, options);\n            indent = options.format.indent.style;\n            if (typeof options.base === 'string') {\n                base = options.base;\n            } else {\n                base = stringRepeat(indent, options.format.indent.base);\n            }\n        } else {\n            options = defaultOptions;\n            indent = options.format.indent.style;\n            base = stringRepeat(indent, options.format.indent.base);\n        }\n        json = options.format.json;\n        renumber = options.format.renumber;\n        hexadecimal = json ? false : options.format.hexadecimal;\n        quotes = json ? 'double' : options.format.quotes;\n        escapeless = options.format.escapeless;\n        newline = options.format.newline;\n        space = options.format.space;\n        if (options.format.compact) {\n            newline = space = indent = base = '';\n        }\n        parentheses = options.format.parentheses;\n        semicolons = options.format.semicolons;\n        safeConcatenation = options.format.safeConcatenation;\n        directive = options.directive;\n        parse = json ? null : options.parse;\n        sourceMap = options.sourceMap;\n        sourceCode = options.sourceCode;\n        preserveBlankLines = options.format.preserveBlankLines && sourceCode !== null;\n        extra = options;\n\n        if (sourceMap) {\n            if (!exports.browser) {\n                // We assume environment is node.js\n                // And prevent from including source-map by browserify\n                SourceNode = require('source-map').SourceNode;\n            } else {\n                SourceNode = global.sourceMap.SourceNode;\n            }\n        }\n\n        result = generateInternal(node);\n\n        if (!sourceMap) {\n            pair = {code: result.toString(), map: null};\n            return options.sourceMapWithCode ? pair : pair.code;\n        }\n\n\n        pair = result.toStringWithSourceMap({\n            file: options.file,\n            sourceRoot: options.sourceMapRoot\n        });\n\n        if (options.sourceContent) {\n            pair.map.setSourceContent(options.sourceMap,\n                                      options.sourceContent);\n        }\n\n        if (options.sourceMapWithCode) {\n            return pair;\n        }\n\n        return pair.map.toString();\n    }\n\n    FORMAT_MINIFY = {\n        indent: {\n            style: '',\n            base: 0\n        },\n        renumber: true,\n        hexadecimal: true,\n        quotes: 'auto',\n        escapeless: true,\n        compact: true,\n        parentheses: false,\n        semicolons: false\n    };\n\n    FORMAT_DEFAULTS = getDefaultOptions().format;\n\n    exports.version = require('./package.json').version;\n    exports.generate = generate;\n    exports.attachComments = estraverse.attachComments;\n    exports.Precedence = updateDeeply({}, Precedence);\n    exports.browser = false;\n    exports.FORMAT_MINIFY = FORMAT_MINIFY;\n    exports.FORMAT_DEFAULTS = FORMAT_DEFAULTS;\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ChainExpression: 'ChainExpression',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        PrivateIdentifier: 'PrivateIdentifier',\n        Program: 'Program',\n        Property: 'Property',\n        PropertyDefinition: 'PropertyDefinition',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ChainExpression: ['expression'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        PrivateIdentifier: [],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        PropertyDefinition: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n  \n    function candidateExistsInLeaveList(leavelist, candidate) {\n        for (var i = leavelist.length - 1; i >= 0; --i) {\n            if (leavelist[i].node === candidate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n\n                            if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                              continue;\n                            }\n\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        if (candidateExistsInLeaveList(leavelist, candidate)) {\n                          continue;\n                        }\n\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n(function () {\n    'use strict';\n\n    exports.ast = require('./ast');\n    exports.code = require('./code');\n    exports.keyword = require('./keyword');\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    function isExpression(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'ArrayExpression':\n            case 'AssignmentExpression':\n            case 'BinaryExpression':\n            case 'CallExpression':\n            case 'ConditionalExpression':\n            case 'FunctionExpression':\n            case 'Identifier':\n            case 'Literal':\n            case 'LogicalExpression':\n            case 'MemberExpression':\n            case 'NewExpression':\n            case 'ObjectExpression':\n            case 'SequenceExpression':\n            case 'ThisExpression':\n            case 'UnaryExpression':\n            case 'UpdateExpression':\n                return true;\n        }\n        return false;\n    }\n\n    function isIterationStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'DoWhileStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'WhileStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'BlockStatement':\n            case 'BreakStatement':\n            case 'ContinueStatement':\n            case 'DebuggerStatement':\n            case 'DoWhileStatement':\n            case 'EmptyStatement':\n            case 'ExpressionStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'IfStatement':\n            case 'LabeledStatement':\n            case 'ReturnStatement':\n            case 'SwitchStatement':\n            case 'ThrowStatement':\n            case 'TryStatement':\n            case 'VariableDeclaration':\n            case 'WhileStatement':\n            case 'WithStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isSourceElement(node) {\n      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\n    }\n\n    function trailingStatement(node) {\n        switch (node.type) {\n        case 'IfStatement':\n            if (node.alternate != null) {\n                return node.alternate;\n            }\n            return node.consequent;\n\n        case 'LabeledStatement':\n        case 'ForStatement':\n        case 'ForInStatement':\n        case 'WhileStatement':\n        case 'WithStatement':\n            return node.body;\n        }\n        return null;\n    }\n\n    function isProblematicIfStatement(node) {\n        var current;\n\n        if (node.type !== 'IfStatement') {\n            return false;\n        }\n        if (node.alternate == null) {\n            return false;\n        }\n        current = node.consequent;\n        do {\n            if (current.type === 'IfStatement') {\n                if (current.alternate == null)  {\n                    return true;\n                }\n            }\n            current = trailingStatement(current);\n        } while (current);\n\n        return false;\n    }\n\n    module.exports = {\n        isExpression: isExpression,\n        isStatement: isStatement,\n        isIterationStatement: isIterationStatement,\n        isSourceElement: isSourceElement,\n        isProblematicIfStatement: isProblematicIfStatement,\n\n        trailingStatement: trailingStatement\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;\n\n    // See `tools/generate-identifier-regex.js`.\n    ES5Regex = {\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n    };\n\n    ES6Regex = {\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n    };\n\n    function isDecimalDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39;  // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39 ||  // 0..9\n            0x61 <= ch && ch <= 0x66 ||     // a..f\n            0x41 <= ch && ch <= 0x46;       // A..F\n    }\n\n    function isOctalDigit(ch) {\n        return ch >= 0x30 && ch <= 0x37;  // 0..7\n    }\n\n    // 7.2 White Space\n\n    NON_ASCII_WHITESPACES = [\n        0x1680,\n        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\n        0x202F, 0x205F,\n        0x3000,\n        0xFEFF\n    ];\n\n    function isWhiteSpace(ch) {\n        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||\n            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function fromCodePoint(cp) {\n        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }\n        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);\n        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);\n        return cu1 + cu2;\n    }\n\n    IDENTIFIER_START = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_START[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    IDENTIFIER_PART = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_PART[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch >= 0x30 && ch <= 0x39 ||  // 0..9\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    function isIdentifierStartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierStartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    module.exports = {\n        isDecimalDigit: isDecimalDigit,\n        isHexDigit: isHexDigit,\n        isOctalDigit: isOctalDigit,\n        isWhiteSpace: isWhiteSpace,\n        isLineTerminator: isLineTerminator,\n        isIdentifierStartES5: isIdentifierStartES5,\n        isIdentifierPartES5: isIdentifierPartES5,\n        isIdentifierStartES6: isIdentifierStartES6,\n        isIdentifierPartES6: isIdentifierPartES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var code = require('./code');\n\n    function isStrictModeReservedWordES6(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isKeywordES5(id, strict) {\n        // yield should not be treated as keyword under non-strict mode.\n        if (!strict && id === 'yield') {\n            return false;\n        }\n        return isKeywordES6(id, strict);\n    }\n\n    function isKeywordES6(id, strict) {\n        if (strict && isStrictModeReservedWordES6(id)) {\n            return true;\n        }\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    function isReservedWordES5(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\n    }\n\n    function isReservedWordES6(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    function isIdentifierNameES5(id) {\n        var i, iz, ch;\n\n        if (id.length === 0) { return false; }\n\n        ch = id.charCodeAt(0);\n        if (!code.isIdentifierStartES5(ch)) {\n            return false;\n        }\n\n        for (i = 1, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (!code.isIdentifierPartES5(ch)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function decodeUtf16(lead, trail) {\n        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n    }\n\n    function isIdentifierNameES6(id) {\n        var i, iz, ch, lowCh, check;\n\n        if (id.length === 0) { return false; }\n\n        check = code.isIdentifierStartES6;\n        for (i = 0, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (0xD800 <= ch && ch <= 0xDBFF) {\n                ++i;\n                if (i >= iz) { return false; }\n                lowCh = id.charCodeAt(i);\n                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {\n                    return false;\n                }\n                ch = decodeUtf16(ch, lowCh);\n            }\n            if (!check(ch)) {\n                return false;\n            }\n            check = code.isIdentifierPartES6;\n        }\n        return true;\n    }\n\n    function isIdentifierES5(id, strict) {\n        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);\n    }\n\n    function isIdentifierES6(id, strict) {\n        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);\n    }\n\n    module.exports = {\n        isKeywordES5: isKeywordES5,\n        isKeywordES6: isKeywordES6,\n        isReservedWordES5: isReservedWordES5,\n        isReservedWordES6: isReservedWordES6,\n        isRestrictedWord: isRestrictedWord,\n        isIdentifierNameES5: isIdentifierNameES5,\n        isIdentifierNameES6: isIdentifierNameES6,\n        isIdentifierES5: isIdentifierES5,\n        isIdentifierES6: isIdentifierES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","{\n    \"name\": \"escodegen\",\n    \"description\": \"ECMAScript code generator\",\n    \"homepage\": \"http://github.com/estools/escodegen\",\n    \"main\": \"escodegen.js\",\n    \"bin\": {\n        \"esgenerate\": \"./bin/esgenerate.js\",\n        \"escodegen\": \"./bin/escodegen.js\"\n    },\n    \"files\": [\n        \"LICENSE.BSD\",\n        \"README.md\",\n        \"bin\",\n        \"escodegen.js\",\n        \"package.json\"\n    ],\n    \"version\": \"2.1.0\",\n    \"engines\": {\n        \"node\": \">=6.0\"\n    },\n    \"maintainers\": [\n        {\n            \"name\": \"Yusuke Suzuki\",\n            \"email\": \"utatane.tea@gmail.com\",\n            \"web\": \"http://github.com/Constellation\"\n        }\n    ],\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"http://github.com/estools/escodegen.git\"\n    },\n    \"dependencies\": {\n        \"estraverse\": \"^5.2.0\",\n        \"esutils\": \"^2.0.2\",\n        \"esprima\": \"^4.0.1\"\n    },\n    \"optionalDependencies\": {\n        \"source-map\": \"~0.6.1\"\n    },\n    \"devDependencies\": {\n        \"acorn\": \"^8.0.4\",\n        \"bluebird\": \"^3.4.7\",\n        \"bower-registry-client\": \"^1.0.0\",\n        \"chai\": \"^4.2.0\",\n        \"chai-exclude\": \"^2.0.2\",\n        \"commonjs-everywhere\": \"^0.9.7\",\n        \"gulp\": \"^4.0.2\",\n        \"gulp-eslint\": \"^6.0.0\",\n        \"gulp-mocha\": \"^7.0.2\",\n        \"minimist\": \"^1.2.5\",\n        \"optionator\": \"^0.9.1\",\n        \"semver\": \"^7.3.4\"\n    },\n    \"license\": \"BSD-2-Clause\",\n    \"scripts\": {\n        \"test\": \"gulp travis\",\n        \"unit-test\": \"gulp test\",\n        \"lint\": \"gulp lint\",\n        \"release\": \"node tools/release.js\",\n        \"build-min\": \"./node_modules/.bin/cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js\",\n        \"build\": \"./node_modules/.bin/cjsify -a path: tools/entry-point.js > escodegen.browser.js\"\n    }\n}\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/syntax.ts\nvar Syntax = /* @__PURE__ */ ((Syntax2) => {\n  Syntax2[\"AssignmentExpression\"] = \"AssignmentExpression\";\n  Syntax2[\"AssignmentPattern\"] = \"AssignmentPattern\";\n  Syntax2[\"ArrayExpression\"] = \"ArrayExpression\";\n  Syntax2[\"ArrayPattern\"] = \"ArrayPattern\";\n  Syntax2[\"ArrowFunctionExpression\"] = \"ArrowFunctionExpression\";\n  Syntax2[\"AwaitExpression\"] = \"AwaitExpression\";\n  Syntax2[\"BlockStatement\"] = \"BlockStatement\";\n  Syntax2[\"BinaryExpression\"] = \"BinaryExpression\";\n  Syntax2[\"BreakStatement\"] = \"BreakStatement\";\n  Syntax2[\"CallExpression\"] = \"CallExpression\";\n  Syntax2[\"CatchClause\"] = \"CatchClause\";\n  Syntax2[\"ChainExpression\"] = \"ChainExpression\";\n  Syntax2[\"ClassBody\"] = \"ClassBody\";\n  Syntax2[\"ClassDeclaration\"] = \"ClassDeclaration\";\n  Syntax2[\"ClassExpression\"] = \"ClassExpression\";\n  Syntax2[\"ConditionalExpression\"] = \"ConditionalExpression\";\n  Syntax2[\"ContinueStatement\"] = \"ContinueStatement\";\n  Syntax2[\"Decorator\"] = \"Decorator\";\n  Syntax2[\"DoWhileStatement\"] = \"DoWhileStatement\";\n  Syntax2[\"DebuggerStatement\"] = \"DebuggerStatement\";\n  Syntax2[\"EmptyStatement\"] = \"EmptyStatement\";\n  Syntax2[\"ExportAllDeclaration\"] = \"ExportAllDeclaration\";\n  Syntax2[\"ExportDefaultDeclaration\"] = \"ExportDefaultDeclaration\";\n  Syntax2[\"ExportNamedDeclaration\"] = \"ExportNamedDeclaration\";\n  Syntax2[\"ExportSpecifier\"] = \"ExportSpecifier\";\n  Syntax2[\"ExpressionStatement\"] = \"ExpressionStatement\";\n  Syntax2[\"ForStatement\"] = \"ForStatement\";\n  Syntax2[\"ForOfStatement\"] = \"ForOfStatement\";\n  Syntax2[\"ForInStatement\"] = \"ForInStatement\";\n  Syntax2[\"FunctionDeclaration\"] = \"FunctionDeclaration\";\n  Syntax2[\"FunctionExpression\"] = \"FunctionExpression\";\n  Syntax2[\"Identifier\"] = \"Identifier\";\n  Syntax2[\"IfStatement\"] = \"IfStatement\";\n  Syntax2[\"ImportAttribute\"] = \"ImportAttribute\";\n  Syntax2[\"ImportExpression\"] = \"ImportExpression\";\n  Syntax2[\"ImportDeclaration\"] = \"ImportDeclaration\";\n  Syntax2[\"ImportDefaultSpecifier\"] = \"ImportDefaultSpecifier\";\n  Syntax2[\"ImportNamespaceSpecifier\"] = \"ImportNamespaceSpecifier\";\n  Syntax2[\"ImportSpecifier\"] = \"ImportSpecifier\";\n  Syntax2[\"Literal\"] = \"Literal\";\n  Syntax2[\"LabeledStatement\"] = \"LabeledStatement\";\n  Syntax2[\"LogicalExpression\"] = \"LogicalExpression\";\n  Syntax2[\"MemberExpression\"] = \"MemberExpression\";\n  Syntax2[\"MetaProperty\"] = \"MetaProperty\";\n  Syntax2[\"MethodDefinition\"] = \"MethodDefinition\";\n  Syntax2[\"NewExpression\"] = \"NewExpression\";\n  Syntax2[\"ObjectExpression\"] = \"ObjectExpression\";\n  Syntax2[\"ObjectPattern\"] = \"ObjectPattern\";\n  Syntax2[\"Program\"] = \"Program\";\n  Syntax2[\"Property\"] = \"Property\";\n  Syntax2[\"PrivateIdentifier\"] = \"PrivateIdentifier\";\n  Syntax2[\"RestElement\"] = \"RestElement\";\n  Syntax2[\"ReturnStatement\"] = \"ReturnStatement\";\n  Syntax2[\"SequenceExpression\"] = \"SequenceExpression\";\n  Syntax2[\"SpreadElement\"] = \"SpreadElement\";\n  Syntax2[\"StaticBlock\"] = \"StaticBlock\";\n  Syntax2[\"Super\"] = \"Super\";\n  Syntax2[\"SwitchCase\"] = \"SwitchCase\";\n  Syntax2[\"SwitchStatement\"] = \"SwitchStatement\";\n  Syntax2[\"TaggedTemplateExpression\"] = \"TaggedTemplateExpression\";\n  Syntax2[\"TemplateElement\"] = \"TemplateElement\";\n  Syntax2[\"TemplateLiteral\"] = \"TemplateLiteral\";\n  Syntax2[\"ThisExpression\"] = \"ThisExpression\";\n  Syntax2[\"ThrowStatement\"] = \"ThrowStatement\";\n  Syntax2[\"TryStatement\"] = \"TryStatement\";\n  Syntax2[\"UnaryExpression\"] = \"UnaryExpression\";\n  Syntax2[\"UpdateExpression\"] = \"UpdateExpression\";\n  Syntax2[\"VariableDeclaration\"] = \"VariableDeclaration\";\n  Syntax2[\"VariableDeclarator\"] = \"VariableDeclarator\";\n  Syntax2[\"WhileStatement\"] = \"WhileStatement\";\n  Syntax2[\"WithStatement\"] = \"WithStatement\";\n  Syntax2[\"YieldExpression\"] = \"YieldExpression\";\n  return Syntax2;\n})(Syntax || {});\n\n// src/comment-handler.ts\nvar CommentHandler = class {\n  attach;\n  comments;\n  stack;\n  leading;\n  trailing;\n  constructor() {\n    this.attach = false;\n    this.comments = [];\n    this.stack = [];\n    this.leading = [];\n    this.trailing = [];\n  }\n  insertInnerComments(node, metadata) {\n    if (node.type === \"BlockStatement\" /* BlockStatement */ && node.body.length === 0) {\n      const innerComments = [];\n      for (let i = this.leading.length - 1; i >= 0; --i) {\n        const entry = this.leading[i];\n        if (metadata.end.offset >= entry.start) {\n          innerComments.unshift(entry.comment);\n          this.leading.splice(i, 1);\n          this.trailing.splice(i, 1);\n        }\n      }\n      if (innerComments.length) {\n        node.innerComments = innerComments;\n      }\n    }\n  }\n  findTrailingComments(metadata) {\n    let trailingComments = [];\n    if (this.trailing.length > 0) {\n      for (let i = this.trailing.length - 1; i >= 0; --i) {\n        const entry = this.trailing[i];\n        if (entry.start >= metadata.end.offset) {\n          trailingComments.unshift(entry.comment);\n        }\n      }\n      this.trailing.length = 0;\n      return trailingComments;\n    }\n    const last = this.stack[this.stack.length - 1];\n    if (last && last.node.trailingComments) {\n      const firstComment = last.node.trailingComments[0];\n      if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n        trailingComments = last.node.trailingComments;\n        delete last.node.trailingComments;\n      }\n    }\n    return trailingComments;\n  }\n  findLeadingComments(metadata) {\n    const leadingComments = [];\n    let target;\n    while (this.stack.length > 0) {\n      const entry = this.stack[this.stack.length - 1];\n      if (entry && entry.start >= metadata.start.offset) {\n        target = entry.node;\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n    if (target) {\n      const count = target.leadingComments ? target.leadingComments.length : 0;\n      for (let i = count - 1; i >= 0; --i) {\n        const comment = target.leadingComments[i];\n        if (comment.range[1] <= metadata.start.offset) {\n          leadingComments.unshift(comment);\n          target.leadingComments.splice(i, 1);\n        }\n      }\n      if (target.leadingComments && target.leadingComments.length === 0) {\n        delete target.leadingComments;\n      }\n      return leadingComments;\n    }\n    for (let i = this.leading.length - 1; i >= 0; --i) {\n      const entry = this.leading[i];\n      if (entry.start <= metadata.start.offset) {\n        leadingComments.unshift(entry.comment);\n        this.leading.splice(i, 1);\n      }\n    }\n    return leadingComments;\n  }\n  visitNode(node, metadata) {\n    if (node.type === \"Program\" /* Program */ && node.body.length > 0) {\n      return;\n    }\n    this.insertInnerComments(node, metadata);\n    const trailingComments = this.findTrailingComments(metadata);\n    const leadingComments = this.findLeadingComments(metadata);\n    if (leadingComments.length > 0) {\n      node.leadingComments = leadingComments;\n    }\n    if (trailingComments.length > 0) {\n      node.trailingComments = trailingComments;\n    }\n    this.stack.push({\n      node,\n      start: metadata.start.offset\n    });\n  }\n  visitComment(node, metadata) {\n    const type = node.type[0] === \"L\" ? \"Line\" : \"Block\";\n    const comment = {\n      type,\n      value: node.value\n    };\n    if (node.range) {\n      comment.range = node.range;\n    }\n    if (node.loc) {\n      comment.loc = node.loc;\n    }\n    this.comments.push(comment);\n    if (this.attach) {\n      const entry = {\n        comment: {\n          type,\n          value: node.value,\n          range: [metadata.start.offset, metadata.end.offset]\n        },\n        start: metadata.start.offset\n      };\n      if (node.loc) {\n        entry.comment.loc = node.loc;\n      }\n      node.type = type;\n      this.leading.push(entry);\n      this.trailing.push(entry);\n    }\n  }\n  visit(node, metadata) {\n    if (node.type === \"LineComment\") {\n      this.visitComment(node, metadata);\n    } else if (node.type === \"BlockComment\") {\n      this.visitComment(node, metadata);\n    } else if (this.attach) {\n      this.visitNode(node, metadata);\n    }\n  }\n};\n\n// src/character.ts\nvar Regex = {\n  // Unicode v12.1.0 NonAsciiIdentifierStart:\n  NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/,\n  // Unicode v12.1.0 NonAsciiIdentifierPart:\n  // eslint-disable-next-line no-misleading-character-class\n  NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD46\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E\\uDC5F\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n};\nvar Character = {\n  fromCodePoint(cp) {\n    return cp < 65536 ? String.fromCharCode(cp) : String.fromCharCode(55296 + (cp - 65536 >> 10)) + String.fromCharCode(56320 + (cp - 65536 & 1023));\n  },\n  isStringWellFormedUnicode(text) {\n    for (let i = 0; i < text.length; i++) {\n      let c = text.charCodeAt(i);\n      if (c >= 55296 && c <= 56319) {\n        if (i === text.length - 1) {\n          return false;\n        }\n        i++;\n        c = text.charCodeAt(i);\n        if (c < 56320 && c > 57343) {\n          return false;\n        }\n      } else if (c >= 56320 && c <= 57343) {\n        return false;\n      }\n    }\n    return true;\n  },\n  // https://tc39.github.io/ecma262/#sec-white-space\n  isWhiteSpace(cp) {\n    return cp === 32 || cp === 9 || cp === 11 || cp === 12 || cp === 160 || cp >= 5760 && [5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279].indexOf(cp) >= 0;\n  },\n  // https://tc39.github.io/ecma262/#sec-line-terminators\n  isLineTerminator(cp) {\n    return cp === 10 || cp === 13 || cp === 8232 || cp === 8233;\n  },\n  // https://tc39.github.io/ecma262/#sec-names-and-keywords\n  isIdentifierStart(cp) {\n    return cp === 36 || cp === 95 || // $ (dollar) and _ (underscore)\n    cp >= 65 && cp <= 90 || // A..Z\n    cp >= 97 && cp <= 122 || // a..z\n    cp === 92 || // \\ (backslash)\n    cp >= 128 && Regex.NonAsciiIdentifierStart.test(Character.fromCodePoint(cp));\n  },\n  isIdentifierPart(cp) {\n    return cp === 36 || cp === 95 || // $ (dollar) and _ (underscore)\n    cp >= 65 && cp <= 90 || // A..Z\n    cp >= 97 && cp <= 122 || // a..z\n    cp >= 48 && cp <= 57 || // 0..9\n    cp === 92 || // \\ (backslash)\n    cp >= 128 && Regex.NonAsciiIdentifierPart.test(Character.fromCodePoint(cp));\n  },\n  // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n  isDecimalDigit(cp) {\n    return cp >= 48 && cp <= 57;\n  },\n  isDecimalDigitChar(ch) {\n    return ch.length === 1 && Character.isDecimalDigit(ch.charCodeAt(0));\n  },\n  isHexDigit(cp) {\n    return cp >= 48 && cp <= 57 || // 0..9\n    cp >= 65 && cp <= 70 || // A..F\n    cp >= 97 && cp <= 102;\n  },\n  isHexDigitChar(ch) {\n    return ch.length === 1 && Character.isHexDigit(ch.charCodeAt(0));\n  },\n  isOctalDigit(cp) {\n    return cp >= 48 && cp <= 55;\n  },\n  isOctalDigitChar(ch) {\n    return ch.length === 1 && Character.isOctalDigit(ch.charCodeAt(0));\n  }\n};\n\n// src/jsx-nodes.ts\nvar JSXClosingElement = class {\n  type;\n  name;\n  constructor(name) {\n    this.type = \"JSXClosingElement\" /* JSXClosingElement */;\n    this.name = name;\n  }\n};\nvar JSXClosingFragment = class {\n  type;\n  constructor() {\n    this.type = \"JSXClosingFragment\" /* JSXClosingFragment */;\n  }\n};\nvar JSXElement = class {\n  type;\n  openingElement;\n  children;\n  closingElement;\n  constructor(openingElement, children, closingElement) {\n    this.type = \"JSXElement\" /* JSXElement */;\n    this.openingElement = openingElement;\n    this.children = children;\n    this.closingElement = closingElement;\n  }\n};\nvar JSXEmptyExpression = class {\n  type;\n  constructor() {\n    this.type = \"JSXEmptyExpression\" /* JSXEmptyExpression */;\n  }\n};\nvar JSXExpressionContainer = class {\n  type;\n  expression;\n  constructor(expression) {\n    this.type = \"JSXExpressionContainer\" /* JSXExpressionContainer */;\n    this.expression = expression;\n  }\n};\nvar JSXIdentifier = class {\n  type;\n  name;\n  constructor(name) {\n    this.type = \"JSXIdentifier\" /* JSXIdentifier */;\n    this.name = name;\n  }\n};\nvar JSXMemberExpression = class {\n  type;\n  object;\n  property;\n  constructor(object, property) {\n    this.type = \"JSXMemberExpression\" /* JSXMemberExpression */;\n    this.object = object;\n    this.property = property;\n  }\n};\nvar JSXAttribute = class {\n  type;\n  name;\n  value;\n  constructor(name, value) {\n    this.type = \"JSXAttribute\" /* JSXAttribute */;\n    this.name = name;\n    this.value = value;\n  }\n};\nvar JSXNamespacedName = class {\n  type;\n  namespace;\n  name;\n  constructor(namespace, name) {\n    this.type = \"JSXNamespacedName\" /* JSXNamespacedName */;\n    this.namespace = namespace;\n    this.name = name;\n  }\n};\nvar JSXOpeningElement = class {\n  type;\n  name;\n  selfClosing;\n  attributes;\n  constructor(name, selfClosing, attributes) {\n    this.type = \"JSXOpeningElement\" /* JSXOpeningElement */;\n    this.name = name;\n    this.selfClosing = selfClosing;\n    this.attributes = attributes;\n  }\n};\nvar JSXOpeningFragment = class {\n  type;\n  selfClosing;\n  constructor(selfClosing) {\n    this.type = \"JSXOpeningFragment\" /* JSXOpeningFragment */;\n    this.selfClosing = selfClosing;\n  }\n};\nvar JSXSpreadAttribute = class {\n  type;\n  argument;\n  constructor(argument) {\n    this.type = \"JSXSpreadAttribute\" /* JSXSpreadAttribute */;\n    this.argument = argument;\n  }\n};\nvar JSXText = class {\n  type;\n  value;\n  raw;\n  constructor(value, raw) {\n    this.type = \"JSXText\" /* JSXText */;\n    this.value = value;\n    this.raw = raw;\n  }\n};\n\n// src/nodes.ts\nvar nodes_exports = {};\n__export(nodes_exports, {\n  ArrayExpression: () => ArrayExpression,\n  ArrayPattern: () => ArrayPattern,\n  ArrowFunctionExpression: () => ArrowFunctionExpression,\n  AssignmentExpression: () => AssignmentExpression,\n  AssignmentPattern: () => AssignmentPattern,\n  AsyncFunctionDeclaration: () => AsyncFunctionDeclaration,\n  AwaitExpression: () => AwaitExpression,\n  BigIntLiteral: () => BigIntLiteral,\n  BinaryExpression: () => BinaryExpression,\n  BlockStatement: () => BlockStatement,\n  BreakStatement: () => BreakStatement,\n  CallExpression: () => CallExpression,\n  CatchClause: () => CatchClause,\n  ChainExpression: () => ChainExpression,\n  ClassBody: () => ClassBody,\n  ClassDeclaration: () => ClassDeclaration,\n  ClassExpression: () => ClassExpression,\n  ConditionalExpression: () => ConditionalExpression,\n  ContinueStatement: () => ContinueStatement,\n  DebuggerStatement: () => DebuggerStatement,\n  Decorator: () => Decorator,\n  Directive: () => Directive,\n  DoWhileStatement: () => DoWhileStatement,\n  EmptyStatement: () => EmptyStatement,\n  ExportAllDeclaration: () => ExportAllDeclaration,\n  ExportDefaultDeclaration: () => ExportDefaultDeclaration,\n  ExportNamedDeclaration: () => ExportNamedDeclaration,\n  ExportSpecifier: () => ExportSpecifier,\n  ExpressionStatement: () => ExpressionStatement,\n  ForInStatement: () => ForInStatement,\n  ForOfStatement: () => ForOfStatement,\n  ForStatement: () => ForStatement,\n  FunctionDeclaration: () => FunctionDeclaration,\n  FunctionExpression: () => FunctionExpression,\n  Identifier: () => Identifier,\n  IfStatement: () => IfStatement,\n  ImportAttribute: () => ImportAttribute,\n  ImportDeclaration: () => ImportDeclaration,\n  ImportDefaultSpecifier: () => ImportDefaultSpecifier,\n  ImportExpression: () => ImportExpression,\n  ImportNamespaceSpecifier: () => ImportNamespaceSpecifier,\n  ImportSpecifier: () => ImportSpecifier,\n  LabeledStatement: () => LabeledStatement,\n  Literal: () => Literal,\n  LogicalExpression: () => LogicalExpression,\n  MemberExpression: () => MemberExpression,\n  MetaProperty: () => MetaProperty,\n  MethodDefinition: () => MethodDefinition,\n  Module: () => Module,\n  NewExpression: () => NewExpression,\n  ObjectExpression: () => ObjectExpression,\n  ObjectPattern: () => ObjectPattern,\n  PrivateIdentifier: () => PrivateIdentifier,\n  Program: () => Program,\n  Property: () => Property,\n  PropertyDefinition: () => PropertyDefinition,\n  RegexLiteral: () => RegexLiteral,\n  RestElement: () => RestElement,\n  ReturnStatement: () => ReturnStatement,\n  Script: () => Script,\n  SequenceExpression: () => SequenceExpression,\n  SpreadElement: () => SpreadElement,\n  StaticBlock: () => StaticBlock,\n  Super: () => Super,\n  SwitchCase: () => SwitchCase,\n  SwitchStatement: () => SwitchStatement,\n  TaggedTemplateExpression: () => TaggedTemplateExpression,\n  TemplateElement: () => TemplateElement,\n  TemplateLiteral: () => TemplateLiteral,\n  ThisExpression: () => ThisExpression,\n  ThrowStatement: () => ThrowStatement,\n  TryStatement: () => TryStatement,\n  UnaryExpression: () => UnaryExpression,\n  UpdateExpression: () => UpdateExpression,\n  VariableDeclaration: () => VariableDeclaration,\n  VariableDeclarator: () => VariableDeclarator,\n  WhileStatement: () => WhileStatement,\n  WithStatement: () => WithStatement,\n  YieldExpression: () => YieldExpression\n});\nvar ArrayExpression = class {\n  type;\n  elements;\n  constructor(elements) {\n    this.type = \"ArrayExpression\" /* ArrayExpression */;\n    this.elements = elements;\n  }\n};\nvar ArrayPattern = class {\n  type;\n  elements;\n  constructor(elements) {\n    this.type = \"ArrayPattern\" /* ArrayPattern */;\n    this.elements = elements;\n  }\n};\nvar ArrowFunctionExpression = class {\n  type;\n  id;\n  params;\n  body;\n  generator;\n  expression;\n  async;\n  constructor(params, body, expression, isAsync) {\n    this.type = \"ArrowFunctionExpression\" /* ArrowFunctionExpression */;\n    this.id = null;\n    this.params = params;\n    this.body = body;\n    this.generator = false;\n    this.expression = expression;\n    this.async = isAsync;\n  }\n};\nvar AssignmentExpression = class {\n  type;\n  operator;\n  left;\n  right;\n  constructor(operator, left, right) {\n    this.type = \"AssignmentExpression\" /* AssignmentExpression */;\n    this.operator = operator;\n    this.left = left;\n    this.right = right;\n  }\n};\nvar AssignmentPattern = class {\n  type;\n  left;\n  right;\n  constructor(left, right) {\n    this.type = \"AssignmentPattern\" /* AssignmentPattern */;\n    this.left = left;\n    this.right = right;\n  }\n};\nvar AsyncFunctionDeclaration = class {\n  type;\n  id;\n  params;\n  body;\n  generator;\n  expression;\n  async;\n  constructor(id, params, body, generator) {\n    this.type = \"FunctionDeclaration\" /* FunctionDeclaration */;\n    this.id = id;\n    this.params = params;\n    this.body = body;\n    this.generator = generator;\n    this.expression = false;\n    this.async = true;\n  }\n};\nvar AwaitExpression = class {\n  type;\n  argument;\n  constructor(argument) {\n    this.type = \"AwaitExpression\" /* AwaitExpression */;\n    this.argument = argument;\n  }\n};\nvar BigIntLiteral = class {\n  type;\n  value;\n  raw;\n  bigint;\n  constructor(value, raw, bigint) {\n    this.type = \"Literal\" /* Literal */;\n    this.value = value;\n    this.raw = raw;\n    this.bigint = bigint;\n  }\n};\nvar BinaryExpression = class {\n  type;\n  operator;\n  left;\n  right;\n  constructor(operator, left, right) {\n    this.type = \"BinaryExpression\" /* BinaryExpression */;\n    this.operator = operator;\n    this.left = left;\n    this.right = right;\n  }\n};\nvar BlockStatement = class {\n  type;\n  body;\n  constructor(body) {\n    this.type = \"BlockStatement\" /* BlockStatement */;\n    this.body = body;\n  }\n};\nvar BreakStatement = class {\n  type;\n  label;\n  constructor(label) {\n    this.type = \"BreakStatement\" /* BreakStatement */;\n    this.label = label;\n  }\n};\nvar CallExpression = class {\n  type;\n  callee;\n  arguments;\n  optional;\n  constructor(callee, args, optional) {\n    this.type = \"CallExpression\" /* CallExpression */;\n    this.callee = callee;\n    this.arguments = args;\n    this.optional = optional;\n  }\n};\nvar CatchClause = class {\n  type;\n  param;\n  body;\n  constructor(param, body) {\n    this.type = \"CatchClause\" /* CatchClause */;\n    this.param = param;\n    this.body = body;\n  }\n};\nvar ChainExpression = class {\n  type;\n  expression;\n  constructor(expression) {\n    this.type = \"ChainExpression\" /* ChainExpression */;\n    this.expression = expression;\n  }\n};\nvar ClassBody = class {\n  type;\n  body;\n  constructor(body) {\n    this.type = \"ClassBody\" /* ClassBody */;\n    this.body = body;\n  }\n};\nvar ClassDeclaration = class {\n  type;\n  id;\n  superClass;\n  body;\n  decorators;\n  constructor(id, superClass, body, decorators) {\n    this.type = \"ClassDeclaration\" /* ClassDeclaration */;\n    this.id = id;\n    this.superClass = superClass;\n    this.body = body;\n    this.decorators = decorators;\n  }\n};\nvar ClassExpression = class {\n  type;\n  id;\n  superClass;\n  body;\n  decorators;\n  constructor(id, superClass, body, decorators) {\n    this.type = \"ClassExpression\" /* ClassExpression */;\n    this.id = id;\n    this.superClass = superClass;\n    this.body = body;\n    this.decorators = decorators;\n  }\n};\nvar ConditionalExpression = class {\n  type;\n  test;\n  consequent;\n  alternate;\n  constructor(test, consequent, alternate) {\n    this.type = \"ConditionalExpression\" /* ConditionalExpression */;\n    this.test = test;\n    this.consequent = consequent;\n    this.alternate = alternate;\n  }\n};\nvar ContinueStatement = class {\n  type;\n  label;\n  constructor(label) {\n    this.type = \"ContinueStatement\" /* ContinueStatement */;\n    this.label = label;\n  }\n};\nvar DebuggerStatement = class {\n  type;\n  constructor() {\n    this.type = \"DebuggerStatement\" /* DebuggerStatement */;\n  }\n};\nvar Decorator = class {\n  type;\n  expression;\n  constructor(expression) {\n    this.type = \"Decorator\" /* Decorator */;\n    this.expression = expression;\n  }\n};\nvar Directive = class {\n  type;\n  expression;\n  directive;\n  constructor(expression, directive) {\n    this.type = \"ExpressionStatement\" /* ExpressionStatement */;\n    this.expression = expression;\n    this.directive = directive;\n  }\n};\nvar DoWhileStatement = class {\n  type;\n  body;\n  test;\n  constructor(body, test) {\n    this.type = \"DoWhileStatement\" /* DoWhileStatement */;\n    this.body = body;\n    this.test = test;\n  }\n};\nvar EmptyStatement = class {\n  type;\n  constructor() {\n    this.type = \"EmptyStatement\" /* EmptyStatement */;\n  }\n};\nvar ExportAllDeclaration = class {\n  type;\n  source;\n  exported;\n  assertions;\n  constructor(source, exported, assertions) {\n    this.type = \"ExportAllDeclaration\" /* ExportAllDeclaration */;\n    this.source = source;\n    this.exported = exported;\n    this.assertions = assertions;\n  }\n};\nvar ExportDefaultDeclaration = class {\n  type;\n  declaration;\n  constructor(declaration) {\n    this.type = \"ExportDefaultDeclaration\" /* ExportDefaultDeclaration */;\n    this.declaration = declaration;\n  }\n};\nvar ExportNamedDeclaration = class {\n  type;\n  declaration;\n  specifiers;\n  source;\n  assertions;\n  constructor(declaration, specifiers, source, assertions) {\n    this.type = \"ExportNamedDeclaration\" /* ExportNamedDeclaration */;\n    this.declaration = declaration;\n    this.specifiers = specifiers;\n    this.source = source;\n    this.assertions = assertions;\n  }\n};\nvar ExportSpecifier = class {\n  type;\n  exported;\n  local;\n  constructor(local, exported) {\n    this.type = \"ExportSpecifier\" /* ExportSpecifier */;\n    this.exported = exported;\n    this.local = local;\n  }\n};\nvar ExpressionStatement = class {\n  type;\n  expression;\n  constructor(expression) {\n    this.type = \"ExpressionStatement\" /* ExpressionStatement */;\n    this.expression = expression;\n  }\n};\nvar ForInStatement = class {\n  type;\n  left;\n  right;\n  body;\n  each;\n  constructor(left, right, body) {\n    this.type = \"ForInStatement\" /* ForInStatement */;\n    this.left = left;\n    this.right = right;\n    this.body = body;\n    this.each = false;\n  }\n};\nvar ForOfStatement = class {\n  type;\n  await;\n  left;\n  right;\n  body;\n  constructor(left, right, body, _await) {\n    this.type = \"ForOfStatement\" /* ForOfStatement */;\n    this.await = _await;\n    this.left = left;\n    this.right = right;\n    this.body = body;\n  }\n};\nvar ForStatement = class {\n  type;\n  init;\n  test;\n  update;\n  body;\n  constructor(init, test, update, body) {\n    this.type = \"ForStatement\" /* ForStatement */;\n    this.init = init;\n    this.test = test;\n    this.update = update;\n    this.body = body;\n  }\n};\nvar FunctionDeclaration = class {\n  type;\n  id;\n  params;\n  body;\n  generator;\n  expression;\n  async;\n  constructor(id, params, body, generator) {\n    this.type = \"FunctionDeclaration\" /* FunctionDeclaration */;\n    this.id = id;\n    this.params = params;\n    this.body = body;\n    this.generator = generator;\n    this.expression = false;\n    this.async = false;\n  }\n};\nvar FunctionExpression = class {\n  type;\n  id;\n  params;\n  body;\n  generator;\n  expression;\n  async;\n  constructor(id, params, body, generator, isAsync) {\n    this.type = \"FunctionExpression\" /* FunctionExpression */;\n    this.id = id;\n    this.params = params;\n    this.body = body;\n    this.generator = generator;\n    this.expression = false;\n    this.async = isAsync;\n  }\n};\nvar Identifier = class {\n  type;\n  name;\n  constructor(name) {\n    this.type = \"Identifier\" /* Identifier */;\n    this.name = name;\n  }\n};\nvar IfStatement = class {\n  type;\n  test;\n  consequent;\n  alternate;\n  constructor(test, consequent, alternate) {\n    this.type = \"IfStatement\" /* IfStatement */;\n    this.test = test;\n    this.consequent = consequent;\n    this.alternate = alternate;\n  }\n};\nvar ImportAttribute = class {\n  type;\n  key;\n  value;\n  constructor(key, value) {\n    this.type = \"ImportAttribute\" /* ImportAttribute */;\n    this.key = key;\n    this.value = value;\n  }\n};\nvar ImportExpression = class {\n  type;\n  source;\n  attributes;\n  constructor(source, attributes) {\n    this.type = \"ImportExpression\" /* ImportExpression */;\n    this.source = source;\n    this.attributes = attributes;\n  }\n};\nvar ImportDeclaration = class {\n  type;\n  specifiers;\n  source;\n  assertions;\n  constructor(specifiers, source, assertions) {\n    this.type = \"ImportDeclaration\" /* ImportDeclaration */;\n    this.specifiers = specifiers;\n    this.source = source;\n    this.assertions = assertions;\n  }\n};\nvar ImportDefaultSpecifier = class {\n  type;\n  local;\n  constructor(local) {\n    this.type = \"ImportDefaultSpecifier\" /* ImportDefaultSpecifier */;\n    this.local = local;\n  }\n};\nvar ImportNamespaceSpecifier = class {\n  type;\n  local;\n  constructor(local) {\n    this.type = \"ImportNamespaceSpecifier\" /* ImportNamespaceSpecifier */;\n    this.local = local;\n  }\n};\nvar ImportSpecifier = class {\n  type;\n  local;\n  imported;\n  constructor(local, imported) {\n    this.type = \"ImportSpecifier\" /* ImportSpecifier */;\n    this.local = local;\n    this.imported = imported;\n  }\n};\nvar LabeledStatement = class {\n  type;\n  label;\n  body;\n  constructor(label, body) {\n    this.type = \"LabeledStatement\" /* LabeledStatement */;\n    this.label = label;\n    this.body = body;\n  }\n};\nvar Literal = class {\n  type;\n  value;\n  raw;\n  constructor(value, raw) {\n    this.type = \"Literal\" /* Literal */;\n    this.value = value;\n    this.raw = raw;\n  }\n};\nvar LogicalExpression = class {\n  type;\n  operator;\n  left;\n  right;\n  constructor(operator, left, right) {\n    this.type = \"LogicalExpression\" /* LogicalExpression */;\n    this.operator = operator;\n    this.left = left;\n    this.right = right;\n  }\n};\nvar MemberExpression = class {\n  type;\n  computed;\n  object;\n  property;\n  optional;\n  constructor(computed, object, property, optional) {\n    this.type = \"MemberExpression\" /* MemberExpression */;\n    this.computed = computed;\n    this.object = object;\n    this.property = property;\n    this.optional = optional;\n  }\n};\nvar MetaProperty = class {\n  type;\n  meta;\n  property;\n  constructor(meta, property) {\n    this.type = \"MetaProperty\" /* MetaProperty */;\n    this.meta = meta;\n    this.property = property;\n  }\n};\nvar MethodDefinition = class {\n  type;\n  key;\n  computed;\n  value;\n  kind;\n  static;\n  decorators;\n  constructor(key, computed, value, kind, isStatic, decorators) {\n    this.type = \"MethodDefinition\" /* MethodDefinition */;\n    this.key = key;\n    this.computed = computed;\n    this.value = value;\n    this.kind = kind;\n    this.static = isStatic;\n    this.decorators = decorators;\n  }\n};\nvar Module = class {\n  type;\n  body;\n  sourceType;\n  constructor(body) {\n    this.type = \"Program\" /* Program */;\n    this.body = body;\n    this.sourceType = \"module\";\n  }\n};\nvar NewExpression = class {\n  type;\n  callee;\n  arguments;\n  constructor(callee, args) {\n    this.type = \"NewExpression\" /* NewExpression */;\n    this.callee = callee;\n    this.arguments = args;\n  }\n};\nvar ObjectExpression = class {\n  type;\n  properties;\n  constructor(properties) {\n    this.type = \"ObjectExpression\" /* ObjectExpression */;\n    this.properties = properties;\n  }\n};\nvar ObjectPattern = class {\n  type;\n  properties;\n  constructor(properties) {\n    this.type = \"ObjectPattern\" /* ObjectPattern */;\n    this.properties = properties;\n  }\n};\nvar PrivateIdentifier = class {\n  type;\n  name;\n  constructor(name) {\n    this.type = \"PrivateIdentifier\" /* PrivateIdentifier */;\n    this.name = name;\n  }\n};\nvar Program = class {\n  type;\n  body;\n  sourceType;\n  constructor(sourceType, body) {\n    this.type = \"Program\" /* Program */;\n    this.sourceType = sourceType;\n    this.body = body;\n  }\n};\nvar Property = class {\n  type;\n  key;\n  computed;\n  value;\n  kind;\n  method;\n  shorthand;\n  constructor(kind, key, computed, value, method, shorthand) {\n    this.type = \"Property\" /* Property */;\n    this.key = key;\n    this.computed = computed;\n    this.value = value;\n    this.kind = kind;\n    this.method = method;\n    this.shorthand = shorthand;\n  }\n};\nvar PropertyDefinition = class {\n  type;\n  key;\n  computed;\n  value;\n  static;\n  decorators;\n  constructor(key, computed, value, isStatic, decorators) {\n    this.type = \"Property\" /* Property */;\n    this.key = key;\n    this.computed = computed;\n    this.value = value;\n    this.static = isStatic;\n    this.decorators = decorators;\n  }\n};\nvar RegexLiteral = class {\n  type;\n  value;\n  raw;\n  regex;\n  constructor(value, raw, pattern, flags) {\n    this.type = \"Literal\" /* Literal */;\n    this.value = value;\n    this.raw = raw;\n    this.regex = { pattern, flags };\n  }\n};\nvar RestElement = class {\n  type;\n  argument;\n  constructor(argument) {\n    this.type = \"RestElement\" /* RestElement */;\n    this.argument = argument;\n  }\n};\nvar ReturnStatement = class {\n  type;\n  argument;\n  constructor(argument) {\n    this.type = \"ReturnStatement\" /* ReturnStatement */;\n    this.argument = argument;\n  }\n};\nvar Script = class {\n  type;\n  body;\n  sourceType;\n  constructor(body) {\n    this.type = \"Program\" /* Program */;\n    this.body = body;\n    this.sourceType = \"script\";\n  }\n};\nvar SequenceExpression = class {\n  type;\n  expressions;\n  constructor(expressions) {\n    this.type = \"SequenceExpression\" /* SequenceExpression */;\n    this.expressions = expressions;\n  }\n};\nvar SpreadElement = class {\n  type;\n  argument;\n  constructor(argument) {\n    this.type = \"SpreadElement\" /* SpreadElement */;\n    this.argument = argument;\n  }\n};\nvar StaticBlock = class {\n  type;\n  body;\n  constructor(body) {\n    this.type = \"StaticBlock\" /* StaticBlock */;\n    this.body = body;\n  }\n};\nvar Super = class {\n  type;\n  constructor() {\n    this.type = \"Super\" /* Super */;\n  }\n};\nvar SwitchCase = class {\n  type;\n  test;\n  consequent;\n  constructor(test, consequent) {\n    this.type = \"SwitchCase\" /* SwitchCase */;\n    this.test = test;\n    this.consequent = consequent;\n  }\n};\nvar SwitchStatement = class {\n  type;\n  discriminant;\n  cases;\n  constructor(discriminant, cases) {\n    this.type = \"SwitchStatement\" /* SwitchStatement */;\n    this.discriminant = discriminant;\n    this.cases = cases;\n  }\n};\nvar TaggedTemplateExpression = class {\n  type;\n  tag;\n  quasi;\n  constructor(tag, quasi) {\n    this.type = \"TaggedTemplateExpression\" /* TaggedTemplateExpression */;\n    this.tag = tag;\n    this.quasi = quasi;\n  }\n};\nvar TemplateElement = class {\n  type;\n  value;\n  tail;\n  constructor(value, tail) {\n    this.type = \"TemplateElement\" /* TemplateElement */;\n    this.value = value;\n    this.tail = tail;\n  }\n};\nvar TemplateLiteral = class {\n  type;\n  quasis;\n  expressions;\n  constructor(quasis, expressions) {\n    this.type = \"TemplateLiteral\" /* TemplateLiteral */;\n    this.quasis = quasis;\n    this.expressions = expressions;\n  }\n};\nvar ThisExpression = class {\n  type;\n  constructor() {\n    this.type = \"ThisExpression\" /* ThisExpression */;\n  }\n};\nvar ThrowStatement = class {\n  type;\n  argument;\n  constructor(argument) {\n    this.type = \"ThrowStatement\" /* ThrowStatement */;\n    this.argument = argument;\n  }\n};\nvar TryStatement = class {\n  type;\n  block;\n  handler;\n  finalizer;\n  constructor(block, handler, finalizer) {\n    this.type = \"TryStatement\" /* TryStatement */;\n    this.block = block;\n    this.handler = handler;\n    this.finalizer = finalizer;\n  }\n};\nvar UnaryExpression = class {\n  type;\n  operator;\n  argument;\n  prefix;\n  constructor(operator, argument) {\n    this.type = \"UnaryExpression\" /* UnaryExpression */;\n    this.operator = operator;\n    this.argument = argument;\n    this.prefix = true;\n  }\n};\nvar UpdateExpression = class {\n  type;\n  operator;\n  argument;\n  prefix;\n  constructor(operator, argument, prefix) {\n    this.type = \"UpdateExpression\" /* UpdateExpression */;\n    this.operator = operator;\n    this.argument = argument;\n    this.prefix = prefix;\n  }\n};\nvar VariableDeclaration = class {\n  type;\n  declarations;\n  kind;\n  constructor(declarations, kind) {\n    this.type = \"VariableDeclaration\" /* VariableDeclaration */;\n    this.declarations = declarations;\n    this.kind = kind;\n  }\n};\nvar VariableDeclarator = class {\n  type;\n  id;\n  init;\n  constructor(id, init) {\n    this.type = \"VariableDeclarator\" /* VariableDeclarator */;\n    this.id = id;\n    this.init = init;\n  }\n};\nvar WhileStatement = class {\n  type;\n  test;\n  body;\n  constructor(test, body) {\n    this.type = \"WhileStatement\" /* WhileStatement */;\n    this.test = test;\n    this.body = body;\n  }\n};\nvar WithStatement = class {\n  type;\n  object;\n  body;\n  constructor(object, body) {\n    this.type = \"WithStatement\" /* WithStatement */;\n    this.object = object;\n    this.body = body;\n  }\n};\nvar YieldExpression = class {\n  type;\n  argument;\n  delegate;\n  constructor(argument, delegate) {\n    this.type = \"YieldExpression\" /* YieldExpression */;\n    this.argument = argument;\n    this.delegate = delegate;\n  }\n};\n\n// src/assert.ts\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"ASSERT: \" + message);\n  }\n}\n\n// src/error-handler.ts\nvar ErrorHandler = class {\n  errors;\n  tolerant;\n  constructor() {\n    this.errors = [];\n    this.tolerant = false;\n  }\n  recordError(error) {\n    this.errors.push(error);\n  }\n  tolerate(error) {\n    if (this.tolerant) {\n      this.recordError(error);\n    } else {\n      throw error;\n    }\n  }\n  constructError(msg, column) {\n    let error = new Error(msg);\n    try {\n      throw error;\n    } catch (base) {\n      if (Object.create && Object.defineProperty) {\n        error = Object.create(base);\n        Object.defineProperty(error, \"column\", { value: column });\n      }\n    }\n    return error;\n  }\n  createError(index, line, col, description) {\n    const msg = \"Line \" + line + \": \" + description;\n    const _error = this.constructError(msg, col);\n    _error.index = index;\n    _error.lineNumber = line;\n    _error.description = description;\n    const error = _error;\n    return error;\n  }\n  throwError(index, line, col, description) {\n    throw this.createError(index, line, col, description);\n  }\n  tolerateError(index, line, col, description) {\n    const error = this.createError(index, line, col, description);\n    if (this.tolerant) {\n      this.recordError(error);\n    } else {\n      throw error;\n    }\n  }\n};\n\n// src/messages.ts\nvar Messages = {\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  BadImportCallArity: \"Unexpected token\",\n  BadGetterArity: \"Getter must not have any formal parameters\",\n  BadSetterArity: \"Setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"Setter function argument must not be a rest parameter\",\n  CannotUseImportMetaOutsideAModule: \"Cannot use 'import.meta' outside a module\",\n  ConstructorIsAsync: \"Class constructor may not be an async method\",\n  ConstructorIsPrivate: \"Class constructor may not be a private method\",\n  ConstructorSpecialMethod: \"Class constructor may not be an accessor\",\n  DeclarationMissingInitializer: \"Missing initializer in %0 declaration\",\n  DefaultRestParameter: \"Unexpected token =\",\n  DefaultRestProperty: \"Unexpected token =\",\n  DuplicateBinding: \"Duplicate binding %0\",\n  DuplicateConstructor: \"A class may only have one constructor\",\n  DuplicateParameter: \"Duplicate parameter name not allowed in this context\",\n  DuplicateProtoProperty: \"Duplicate __proto__ fields are not allowed in object literals\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInLegacyContext: \"Generator declarations are not allowed in legacy contexts\",\n  IllegalBreak: \"Illegal break statement\",\n  IllegalContinue: \"Illegal continue statement\",\n  IllegalExportDeclaration: \"Unexpected token\",\n  IllegalImportDeclaration: \"Unexpected token\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"Illegal return statement\",\n  InvalidEscapedReservedWord: \"Keyword must not contain escaped characters\",\n  InvalidHexEscapeSequence: \"Invalid hexadecimal escape sequence\",\n  InvalidLHSInAssignment: \"Invalid left-hand side in assignment\",\n  InvalidLHSInForIn: \"Invalid left-hand side in for-in\",\n  InvalidLHSInForLoop: \"Invalid left-hand side in for-loop\",\n  InvalidModuleSpecifier: \"Unexpected token\",\n  InvalidRegExp: \"Invalid regular expression\",\n  InvalidTaggedTemplateOnOptionalChain: \"Invalid tagged template on optional chain\",\n  InvalidUnicodeEscapeSequence: \"Invalid Unicode escape sequence\",\n  LetInLexicalBinding: \"let is disallowed as a lexically bound name\",\n  MissingFromClause: \"Unexpected token\",\n  MultipleDefaultsInSwitch: \"More than one default clause in switch statement\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoAsAfterImportNamespace: \"Unexpected token\",\n  NoAsAndFromEscapeSequences: \"The `as` and `from` contextual keywords must not contain Unicode escape sequences.\",\n  NoCatchOrFinally: \"Missing catch or finally after try\",\n  NoSemicolonAfterDecorator: \"Decorators must not be followed by a semicolon.\",\n  NumericSeperatorOneUnderscore: \"Numeric separator must be exactly one underscore\",\n  NumericSeperatorNotAllowedHere: \"Numeric separator is not allowed here\",\n  ParameterAfterRestParameter: \"Rest parameter must be last formal parameter\",\n  PropertyAfterRestProperty: \"Unexpected token\",\n  Redeclaration: \"%0 '%1' has already been declared\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictCatchVariable: \"Catch variable may not be eval or arguments in strict mode\",\n  StrictDelete: \"Delete of an unqualified identifier in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictFunctionName: \"Function name may not be eval or arguments in strict mode\",\n  StrictLHSAssignment: \"Assignment to eval or arguments is not allowed in strict mode\",\n  StrictLHSPostfix: \"Postfix increment/decrement may not have eval or arguments operand in strict mode\",\n  StrictLHSPrefix: \"Prefix increment/decrement may not have eval or arguments operand in strict mode\",\n  StrictModeWith: \"Strict mode code may not include a with statement\",\n  StrictOctalLiteral: \"Octal literals are not allowed in strict mode.\",\n  StrictParamName: \"Parameter name eval or arguments is not allowed in strict mode\",\n  StrictReservedWord: \"Use of future reserved word in strict mode\",\n  StrictVarName: \"Variable name may not be eval or arguments in strict mode\",\n  TemplateOctalLiteral: \"Octal literals are not allowed in template strings.\",\n  TemplateEscape89: \"\\\\8 and \\\\9 are not allowed in template strings.\",\n  UnexpectedEOS: \"Unexpected end of input\",\n  UnexpectedIdentifier: \"Unexpected identifier\",\n  UnexpectedNumber: \"Unexpected number\",\n  UnexpectedReserved: \"Unexpected reserved word\",\n  UnexpectedString: \"Unexpected string\",\n  UnexpectedSuper: \"'super' keyword unexpected here\",\n  UnexpectedTemplate: \"Unexpected quasi %0\",\n  UnexpectedToken: \"Unexpected token %0\",\n  UnexpectedTokenIllegal: \"Unexpected token ILLEGAL\",\n  UnknownLabel: \"Undefined label '%0'\",\n  UnterminatedRegExp: \"Invalid regular expression: missing /\"\n};\n\n// src/token.ts\nvar TokenName = {};\nTokenName[1 /* BooleanLiteral */] = \"Boolean\";\nTokenName[2 /* EOF */] = \"<end>\";\nTokenName[3 /* Identifier */] = \"Identifier\";\nTokenName[4 /* Keyword */] = \"Keyword\";\nTokenName[5 /* NullLiteral */] = \"Null\";\nTokenName[6 /* NumericLiteral */] = \"Numeric\";\nTokenName[7 /* Punctuator */] = \"Punctuator\";\nTokenName[8 /* StringLiteral */] = \"String\";\nTokenName[9 /* RegularExpression */] = \"RegularExpression\";\nTokenName[10 /* Template */] = \"Template\";\n\n// src/scanner.ts\nfunction hexValue(ch) {\n  return \"0123456789abcdef\".indexOf(ch.toLowerCase());\n}\nfunction octalValue(ch) {\n  return \"01234567\".indexOf(ch);\n}\nvar Scanner = class {\n  source;\n  errorHandler;\n  trackComment;\n  isModule;\n  index;\n  lineNumber;\n  lineStart;\n  curlyStack;\n  length;\n  constructor(code, handler) {\n    this.source = code;\n    this.errorHandler = handler;\n    this.trackComment = false;\n    this.isModule = false;\n    this.length = code.length;\n    this.index = 0;\n    this.lineNumber = code.length > 0 ? 1 : 0;\n    this.lineStart = 0;\n    this.curlyStack = [];\n  }\n  saveState() {\n    return {\n      index: this.index,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      curlyStack: this.curlyStack.slice()\n    };\n  }\n  restoreState(state) {\n    this.index = state.index;\n    this.lineNumber = state.lineNumber;\n    this.lineStart = state.lineStart;\n    this.curlyStack = state.curlyStack;\n  }\n  eof() {\n    return this.index >= this.length;\n  }\n  throwUnexpectedToken(message = Messages.UnexpectedTokenIllegal) {\n    return this.errorHandler.throwError(\n      this.index,\n      this.lineNumber,\n      this.index - this.lineStart + 1,\n      message\n    );\n  }\n  tolerateUnexpectedToken(message = Messages.UnexpectedTokenIllegal) {\n    this.errorHandler.tolerateError(\n      this.index,\n      this.lineNumber,\n      this.index - this.lineStart + 1,\n      message\n    );\n  }\n  // https://tc39.github.io/ecma262/#sec-comments\n  skipSingleLineComment(offset) {\n    let comments = [];\n    let start, loc;\n    if (this.trackComment) {\n      comments = [];\n      start = this.index - offset;\n      loc = {\n        start: {\n          line: this.lineNumber,\n          column: this.index - this.lineStart - offset\n        },\n        end: {}\n      };\n    }\n    while (!this.eof()) {\n      const ch = this.source.charCodeAt(this.index);\n      ++this.index;\n      if (Character.isLineTerminator(ch)) {\n        if (this.trackComment) {\n          loc.end = {\n            line: this.lineNumber,\n            column: this.index - this.lineStart - 1\n          };\n          const entry = {\n            multiLine: false,\n            slice: [start + offset, this.index - 1],\n            range: [start, this.index - 1],\n            loc\n          };\n          comments.push(entry);\n        }\n        if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n          ++this.index;\n        }\n        ++this.lineNumber;\n        this.lineStart = this.index;\n        return comments;\n      }\n    }\n    if (this.trackComment) {\n      loc.end = {\n        line: this.lineNumber,\n        column: this.index - this.lineStart\n      };\n      const entry = {\n        multiLine: false,\n        slice: [start + offset, this.index],\n        range: [start, this.index],\n        loc\n      };\n      comments.push(entry);\n    }\n    return comments;\n  }\n  skipMultiLineComment() {\n    let comments = [];\n    let start, loc;\n    if (this.trackComment) {\n      comments = [];\n      start = this.index - 2;\n      loc = {\n        start: {\n          line: this.lineNumber,\n          column: this.index - this.lineStart - 2\n        },\n        end: {}\n      };\n    }\n    while (!this.eof()) {\n      const ch = this.source.charCodeAt(this.index);\n      if (Character.isLineTerminator(ch)) {\n        if (ch === 13 && this.source.charCodeAt(this.index + 1) === 10) {\n          ++this.index;\n        }\n        ++this.lineNumber;\n        ++this.index;\n        this.lineStart = this.index;\n      } else if (ch === 42) {\n        if (this.source.charCodeAt(this.index + 1) === 47) {\n          this.index += 2;\n          if (this.trackComment) {\n            loc.end = {\n              line: this.lineNumber,\n              column: this.index - this.lineStart\n            };\n            const entry = {\n              multiLine: true,\n              slice: [start + 2, this.index - 2],\n              range: [start, this.index],\n              loc\n            };\n            comments.push(entry);\n          }\n          return comments;\n        }\n        ++this.index;\n      } else {\n        ++this.index;\n      }\n    }\n    if (this.trackComment) {\n      loc.end = {\n        line: this.lineNumber,\n        column: this.index - this.lineStart\n      };\n      const entry = {\n        multiLine: true,\n        slice: [start + 2, this.index],\n        range: [start, this.index],\n        loc\n      };\n      comments.push(entry);\n    }\n    this.tolerateUnexpectedToken();\n    return comments;\n  }\n  scanComments() {\n    let comments;\n    if (this.trackComment) {\n      comments = [];\n    }\n    let start = this.index === 0;\n    while (!this.eof()) {\n      let ch = this.source.charCodeAt(this.index);\n      if (Character.isWhiteSpace(ch)) {\n        ++this.index;\n      } else if (Character.isLineTerminator(ch)) {\n        ++this.index;\n        if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n          ++this.index;\n        }\n        ++this.lineNumber;\n        this.lineStart = this.index;\n        start = true;\n      } else if (ch === 47) {\n        ch = this.source.charCodeAt(this.index + 1);\n        if (ch === 47) {\n          this.index += 2;\n          const comment = this.skipSingleLineComment(2);\n          if (this.trackComment) {\n            comments = comments.concat(comment);\n          }\n          start = true;\n        } else if (ch === 42) {\n          this.index += 2;\n          const comment = this.skipMultiLineComment();\n          if (this.trackComment) {\n            comments = comments.concat(comment);\n          }\n        } else {\n          break;\n        }\n      } else if (start && ch === 45) {\n        if (this.source.charCodeAt(this.index + 1) === 45 && this.source.charCodeAt(this.index + 2) === 62) {\n          this.index += 3;\n          const comment = this.skipSingleLineComment(3);\n          if (this.trackComment) {\n            comments = comments.concat(comment);\n          }\n        } else {\n          break;\n        }\n      } else if (ch === 60 && !this.isModule) {\n        if (this.source.slice(this.index + 1, this.index + 4) === \"!--\") {\n          this.index += 4;\n          const comment = this.skipSingleLineComment(4);\n          if (this.trackComment) {\n            comments = comments.concat(comment);\n          }\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    return comments;\n  }\n  // https://tc39.github.io/ecma262/#sec-future-reserved-words\n  isFutureReservedWord(id) {\n    switch (id) {\n      case \"enum\":\n      case \"export\":\n      case \"import\":\n      case \"super\":\n        return true;\n      default:\n        return false;\n    }\n  }\n  isStrictModeReservedWord(id) {\n    switch (id) {\n      case \"implements\":\n      case \"interface\":\n      case \"package\":\n      case \"private\":\n      case \"protected\":\n      case \"public\":\n      case \"static\":\n      case \"yield\":\n      case \"let\":\n        return true;\n      default:\n        return false;\n    }\n  }\n  isRestrictedWord(id) {\n    return id === \"eval\" || id === \"arguments\";\n  }\n  // https://tc39.github.io/ecma262/#sec-keywords\n  isKeyword(id) {\n    switch (id.length) {\n      case 2:\n        return id === \"if\" || id === \"in\" || id === \"do\";\n      case 3:\n        return id === \"var\" || id === \"for\" || id === \"new\" || id === \"try\" || id === \"let\";\n      case 4:\n        return id === \"this\" || id === \"else\" || id === \"case\" || id === \"void\" || id === \"with\" || id === \"enum\";\n      case 5:\n        return id === \"while\" || id === \"break\" || id === \"catch\" || id === \"throw\" || id === \"const\" || id === \"yield\" || id === \"class\" || id === \"super\";\n      case 6:\n        return id === \"return\" || id === \"typeof\" || id === \"delete\" || id === \"switch\" || id === \"export\" || id === \"import\";\n      case 7:\n        return id === \"default\" || id === \"finally\" || id === \"extends\";\n      case 8:\n        return id === \"function\" || id === \"continue\" || id === \"debugger\";\n      case 10:\n        return id === \"instanceof\";\n      default:\n        return false;\n    }\n  }\n  codePointAt(i) {\n    let cp = this.source.charCodeAt(i);\n    if (cp >= 55296 && cp <= 56319) {\n      const second = this.source.charCodeAt(i + 1);\n      if (second >= 56320 && second <= 57343) {\n        const first = cp;\n        cp = (first - 55296) * 1024 + second - 56320 + 65536;\n      }\n    }\n    return cp;\n  }\n  scanHexEscape(prefix) {\n    const len = prefix === \"u\" ? 4 : 2;\n    let code = 0;\n    for (let i = 0; i < len; ++i) {\n      if (!this.eof() && Character.isHexDigit(this.source.charCodeAt(this.index))) {\n        code = code * 16 + hexValue(this.source[this.index++]);\n      } else {\n        return null;\n      }\n    }\n    return String.fromCharCode(code);\n  }\n  tryToScanUnicodeCodePointEscape() {\n    let ch = this.source[this.index];\n    let code = 0;\n    if (ch === \"}\") {\n      return null;\n    }\n    while (!this.eof()) {\n      ch = this.source[this.index++];\n      if (!Character.isHexDigit(ch.charCodeAt(0))) {\n        break;\n      }\n      code = code * 16 + hexValue(ch);\n    }\n    if (code > 1114111 || ch !== \"}\") {\n      return null;\n    }\n    return Character.fromCodePoint(code);\n  }\n  scanUnicodeCodePointEscape() {\n    const result = this.tryToScanUnicodeCodePointEscape();\n    if (result === null) {\n      return this.throwUnexpectedToken();\n    }\n    return result;\n  }\n  getIdentifier() {\n    const start = this.index++;\n    while (!this.eof()) {\n      const ch = this.source.charCodeAt(this.index);\n      if (ch === 92) {\n        this.index = start;\n        return this.getComplexIdentifier();\n      } else if (ch >= 55296 && ch < 57343) {\n        this.index = start;\n        return this.getComplexIdentifier();\n      }\n      if (Character.isIdentifierPart(ch)) {\n        ++this.index;\n      } else {\n        break;\n      }\n    }\n    return this.source.slice(start, this.index);\n  }\n  getComplexIdentifier() {\n    let cp = this.codePointAt(this.index);\n    let id = Character.fromCodePoint(cp);\n    this.index += id.length;\n    let ch;\n    if (cp === 92) {\n      if (this.source.charCodeAt(this.index) !== 117) {\n        this.throwUnexpectedToken();\n      }\n      ++this.index;\n      if (this.source[this.index] === \"{\") {\n        ++this.index;\n        ch = this.scanUnicodeCodePointEscape();\n      } else {\n        ch = this.scanHexEscape(\"u\");\n        if (ch === null || ch === \"\\\\\" || !Character.isIdentifierStart(ch.charCodeAt(0))) {\n          this.throwUnexpectedToken();\n        }\n      }\n      id = ch;\n    }\n    while (!this.eof()) {\n      cp = this.codePointAt(this.index);\n      if (!Character.isIdentifierPart(cp)) {\n        break;\n      }\n      ch = Character.fromCodePoint(cp);\n      id += ch;\n      this.index += ch.length;\n      if (cp === 92) {\n        id = id.substr(0, id.length - 1);\n        if (this.source.charCodeAt(this.index) !== 117) {\n          this.throwUnexpectedToken();\n        }\n        ++this.index;\n        if (this.source[this.index] === \"{\") {\n          ++this.index;\n          ch = this.scanUnicodeCodePointEscape();\n        } else {\n          ch = this.scanHexEscape(\"u\");\n          if (ch === null || ch === \"\\\\\" || !Character.isIdentifierPart(ch.charCodeAt(0))) {\n            this.throwUnexpectedToken();\n          }\n        }\n        id += ch;\n      }\n    }\n    return id;\n  }\n  octalToDecimal(ch) {\n    let octal = ch !== \"0\";\n    let code = octalValue(ch);\n    if (!this.eof() && Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n      octal = true;\n      code = code * 8 + octalValue(this.source[this.index++]);\n      if (\"0123\".indexOf(ch) >= 0 && !this.eof() && Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n        code = code * 8 + octalValue(this.source[this.index++]);\n      }\n    }\n    return {\n      code,\n      octal\n    };\n  }\n  // https://tc39.github.io/ecma262/#sec-names-and-keywords\n  scanIdentifier() {\n    let type;\n    const start = this.index;\n    const escaped = this.source.charCodeAt(start) === 92;\n    const id = escaped ? this.getComplexIdentifier() : this.getIdentifier();\n    if (id.length === 1) {\n      type = 3 /* Identifier */;\n    } else if (this.isKeyword(id)) {\n      type = 4 /* Keyword */;\n    } else if (id === \"null\") {\n      type = 5 /* NullLiteral */;\n    } else if (id === \"true\" || id === \"false\") {\n      type = 1 /* BooleanLiteral */;\n    } else {\n      type = 3 /* Identifier */;\n    }\n    if (type !== 3 /* Identifier */ && start + id.length !== this.index) {\n      const restore = this.index;\n      this.index = start;\n      this.tolerateUnexpectedToken(Messages.InvalidEscapedReservedWord);\n      this.index = restore;\n    }\n    return {\n      type,\n      value: id,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start,\n      end: this.index,\n      escaped\n    };\n  }\n  // https://tc39.github.io/ecma262/#sec-punctuators\n  scanPunctuator() {\n    const start = this.index;\n    let str = this.source[this.index];\n    switch (str) {\n      case \"(\":\n      case \"{\":\n        if (str === \"{\") {\n          this.curlyStack.push(\"{\");\n        }\n        ++this.index;\n        break;\n      case \".\":\n        ++this.index;\n        if (this.source[this.index] === \".\" && this.source[this.index + 1] === \".\") {\n          this.index += 2;\n          str = \"...\";\n        }\n        break;\n      case \"}\":\n        ++this.index;\n        this.curlyStack.pop();\n        break;\n      case \"?\":\n        ++this.index;\n        if (this.source[this.index] === \"?\") {\n          ++this.index;\n          if (this.source[this.index] === \"=\") {\n            ++this.index;\n            str = \"??=\";\n          } else {\n            str = \"??\";\n          }\n        }\n        if (this.source[this.index] === \".\" && !/^\\d$/.test(this.source[this.index + 1])) {\n          ++this.index;\n          str = \"?.\";\n        }\n        break;\n      case \"#\":\n      case \")\":\n      case \";\":\n      case \",\":\n      case \"[\":\n      case \"]\":\n      case \":\":\n      case \"~\":\n      case \"@\":\n        ++this.index;\n        break;\n      default:\n        str = this.source.substr(this.index, 4);\n        if (str === \">>>=\") {\n          this.index += 4;\n        } else {\n          str = str.substr(0, 3);\n          if (str === \"===\" || str === \"!==\" || str === \">>>\" || str === \"<<=\" || str === \">>=\" || str === \"**=\" || str === \"&&=\" || str === \"||=\") {\n            this.index += 3;\n          } else {\n            str = str.substr(0, 2);\n            if (str === \"&&\" || str === \"||\" || str === \"==\" || str === \"!=\" || str === \"+=\" || str === \"-=\" || str === \"*=\" || str === \"/=\" || str === \"++\" || str === \"--\" || str === \"<<\" || str === \">>\" || str === \"&=\" || str === \"|=\" || str === \"^=\" || str === \"%=\" || str === \"<=\" || str === \">=\" || str === \"=>\" || str === \"**\") {\n              this.index += 2;\n            } else {\n              str = this.source[this.index];\n              if (\"<>=!+-*%&|^/\".indexOf(str) >= 0) {\n                ++this.index;\n              }\n            }\n          }\n        }\n    }\n    if (this.index === start) {\n      this.throwUnexpectedToken();\n    }\n    return {\n      type: 7 /* Punctuator */,\n      value: str,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start,\n      end: this.index\n    };\n  }\n  // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n  scanHexLiteral(start) {\n    let num = this.scanLiteralPart(Character.isHexDigitChar);\n    if (num.length === 0) {\n      this.throwUnexpectedToken();\n    }\n    if (this.source[this.index] === \"n\") {\n      this.index++;\n      return {\n        type: 6 /* NumericLiteral */,\n        value: BigInt(\"0x\" + num),\n        lineNumber: this.lineNumber,\n        lineStart: this.lineStart,\n        start,\n        end: this.index\n      };\n    }\n    if (Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n      this.throwUnexpectedToken();\n    }\n    return {\n      type: 6 /* NumericLiteral */,\n      value: parseInt(\"0x\" + num, 16),\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start,\n      end: this.index\n    };\n  }\n  scanBinaryLiteral(start) {\n    let ch;\n    let num = this.scanLiteralPart((c) => c === \"0\" || c === \"1\");\n    if (num.length === 0) {\n      this.throwUnexpectedToken();\n    }\n    if (this.source[this.index] === \"n\") {\n      this.index++;\n      return {\n        type: 6 /* NumericLiteral */,\n        value: BigInt(\"0b\" + num),\n        lineNumber: this.lineNumber,\n        lineStart: this.lineStart,\n        start,\n        end: this.index\n      };\n    }\n    if (!this.eof()) {\n      ch = this.source.charCodeAt(this.index);\n      if (Character.isIdentifierStart(ch) || Character.isDecimalDigit(ch)) {\n        this.throwUnexpectedToken();\n      }\n    }\n    return {\n      type: 6 /* NumericLiteral */,\n      value: parseInt(num, 2),\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start,\n      end: this.index\n    };\n  }\n  scanOctalLiteral(prefix, start) {\n    let num = \"\";\n    let octal = false;\n    if (Character.isOctalDigit(prefix.charCodeAt(0))) {\n      octal = true;\n      num = \"0\" + this.source[this.index++];\n    } else {\n      ++this.index;\n    }\n    num += this.scanLiteralPart(Character.isOctalDigitChar);\n    if (!octal && num.length === 0) {\n      this.throwUnexpectedToken();\n    }\n    if (this.source[this.index] === \"n\") {\n      this.index++;\n      return {\n        type: 6 /* NumericLiteral */,\n        value: BigInt(\"0o\" + num),\n        lineNumber: this.lineNumber,\n        lineStart: this.lineStart,\n        start,\n        end: this.index\n      };\n    }\n    if (Character.isIdentifierStart(this.source.charCodeAt(this.index)) || Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n      this.throwUnexpectedToken();\n    }\n    return {\n      type: 6 /* NumericLiteral */,\n      value: parseInt(num, 8),\n      octal,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start,\n      end: this.index\n    };\n  }\n  isImplicitOctalLiteral() {\n    for (let i = this.index + 1; i < this.length; ++i) {\n      const ch = this.source[i];\n      if (ch === \"8\" || ch === \"9\" || ch === \"n\") {\n        return false;\n      }\n      if (!Character.isOctalDigit(ch.charCodeAt(0))) {\n        return true;\n      }\n    }\n    return true;\n  }\n  scanLiteralPart(check) {\n    let num = \"\";\n    if (this.source[this.index] === \"_\")\n      this.throwUnexpectedToken(Messages.NumericSeperatorNotAllowedHere);\n    while (this.source[this.index] && (check(this.source[this.index]) || this.source[this.index] === \"_\")) {\n      if (this.source[this.index] !== \"_\")\n        num += this.source[this.index];\n      this.index++;\n      if (this.source[this.index - 1] === \"_\" && this.source[this.index] === \"_\")\n        this.throwUnexpectedToken(Messages.NumericSeperatorOneUnderscore);\n    }\n    if (this.source[this.index - 1] === \"_\")\n      this.throwUnexpectedToken(Messages.NumericSeperatorNotAllowedHere);\n    return num;\n  }\n  scanNumericLiteral() {\n    const start = this.index;\n    let ch = this.source[start];\n    assert(\n      Character.isDecimalDigit(ch.charCodeAt(0)) || ch === \".\",\n      \"Numeric literal must start with a decimal digit or a decimal point\"\n    );\n    let num = \"\";\n    if (ch !== \".\") {\n      num = this.source[this.index++];\n      ch = this.source[this.index];\n      if (num === \"0\") {\n        if (ch === \"x\" || ch === \"X\") {\n          ++this.index;\n          return this.scanHexLiteral(start);\n        }\n        if (ch === \"b\" || ch === \"B\") {\n          ++this.index;\n          return this.scanBinaryLiteral(start);\n        }\n        if (ch === \"o\" || ch === \"O\") {\n          return this.scanOctalLiteral(ch, start);\n        }\n        if (ch && Character.isOctalDigit(ch.charCodeAt(0))) {\n          if (this.isImplicitOctalLiteral()) {\n            return this.scanOctalLiteral(ch, start);\n          }\n        }\n      }\n      this.index--;\n      num = this.scanLiteralPart(Character.isDecimalDigitChar);\n      ch = this.source[this.index];\n    }\n    if (ch === \".\") {\n      num += this.source[this.index++];\n      num += this.scanLiteralPart(Character.isDecimalDigitChar);\n      ch = this.source[this.index];\n    }\n    if (ch === \"e\" || ch === \"E\") {\n      num += this.source[this.index++];\n      ch = this.source[this.index];\n      if (ch === \"+\" || ch === \"-\") {\n        num += this.source[this.index++];\n      }\n      if (Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n        num += this.scanLiteralPart(Character.isDecimalDigitChar);\n      } else {\n        this.throwUnexpectedToken();\n      }\n    } else if (ch === \"n\") {\n      if (num.length > 1 && num[0] === \"0\") {\n        this.throwUnexpectedToken();\n      }\n      this.index++;\n      return {\n        type: 6 /* NumericLiteral */,\n        value: BigInt(num),\n        lineNumber: this.lineNumber,\n        lineStart: this.lineStart,\n        start,\n        end: this.index\n      };\n    }\n    if (Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n      this.throwUnexpectedToken();\n    }\n    return {\n      type: 6 /* NumericLiteral */,\n      value: parseFloat(num),\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start,\n      end: this.index\n    };\n  }\n  // https://tc39.github.io/ecma262/#sec-literals-string-literals\n  scanStringLiteral() {\n    const start = this.index;\n    let quote = this.source[start];\n    assert(\n      quote === \"'\" || quote === '\"',\n      \"String literal must starts with a quote\"\n    );\n    ++this.index;\n    let octal = false;\n    let str = \"\";\n    while (!this.eof()) {\n      let ch = this.source[this.index++];\n      if (ch === quote) {\n        quote = \"\";\n        break;\n      } else if (ch === \"\\\\\") {\n        ch = this.source[this.index++];\n        if (!ch || !Character.isLineTerminator(ch.charCodeAt(0))) {\n          switch (ch) {\n            case \"u\":\n              if (this.source[this.index] === \"{\") {\n                ++this.index;\n                str += this.scanUnicodeCodePointEscape();\n              } else {\n                const unescapedChar = this.scanHexEscape(ch);\n                if (unescapedChar === null) {\n                  this.throwUnexpectedToken();\n                }\n                str += unescapedChar;\n              }\n              break;\n            case \"x\":\n              const unescaped = this.scanHexEscape(ch);\n              if (unescaped === null) {\n                this.throwUnexpectedToken(Messages.InvalidHexEscapeSequence);\n              }\n              str += unescaped;\n              break;\n            case \"n\":\n              str += \"\\n\";\n              break;\n            case \"r\":\n              str += \"\\r\";\n              break;\n            case \"t\":\n              str += \"\t\";\n              break;\n            case \"b\":\n              str += \"\\b\";\n              break;\n            case \"f\":\n              str += \"\\f\";\n              break;\n            case \"v\":\n              str += \"\\v\";\n              break;\n            case \"8\":\n            case \"9\":\n              str += ch;\n              this.tolerateUnexpectedToken();\n              break;\n            default:\n              if (ch && Character.isOctalDigit(ch.charCodeAt(0))) {\n                const octToDec = this.octalToDecimal(ch);\n                octal = octToDec.octal || octal;\n                str += String.fromCharCode(octToDec.code);\n              } else {\n                str += ch;\n              }\n              break;\n          }\n        } else {\n          ++this.lineNumber;\n          if (ch === \"\\r\" && this.source[this.index] === \"\\n\") {\n            ++this.index;\n          }\n          this.lineStart = this.index;\n        }\n      } else if (Character.isLineTerminator(ch.charCodeAt(0))) {\n        break;\n      } else {\n        str += ch;\n      }\n    }\n    if (quote !== \"\") {\n      this.index = start;\n      this.throwUnexpectedToken();\n    }\n    return {\n      type: 8 /* StringLiteral */,\n      value: str,\n      octal,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start,\n      end: this.index\n    };\n  }\n  // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n  scanTemplate() {\n    let cooked = \"\";\n    let terminated = false;\n    const start = this.index;\n    const head = this.source[start] === \"`\";\n    let tail = false;\n    let notEscapeSequenceHead = null;\n    let rawOffset = 2;\n    ++this.index;\n    while (!this.eof()) {\n      let ch = this.source[this.index++];\n      if (ch === \"`\") {\n        rawOffset = 1;\n        tail = true;\n        terminated = true;\n        break;\n      } else if (ch === \"$\") {\n        if (this.source[this.index] === \"{\") {\n          this.curlyStack.push(\"${\");\n          ++this.index;\n          terminated = true;\n          break;\n        }\n        cooked += ch;\n      } else if (notEscapeSequenceHead !== null) {\n        continue;\n      } else if (ch === \"\\\\\") {\n        ch = this.source[this.index++];\n        if (!Character.isLineTerminator(ch.charCodeAt(0))) {\n          switch (ch) {\n            case \"n\":\n              cooked += \"\\n\";\n              break;\n            case \"r\":\n              cooked += \"\\r\";\n              break;\n            case \"t\":\n              cooked += \"\t\";\n              break;\n            case \"u\":\n              if (this.source[this.index] === \"{\") {\n                ++this.index;\n                const unicodeCodePointEscape = this.tryToScanUnicodeCodePointEscape();\n                if (unicodeCodePointEscape === null) {\n                  notEscapeSequenceHead = \"u\";\n                } else {\n                  cooked += unicodeCodePointEscape;\n                }\n              } else {\n                const unescapedChar = this.scanHexEscape(ch);\n                if (unescapedChar === null) {\n                  notEscapeSequenceHead = \"u\";\n                } else {\n                  cooked += unescapedChar;\n                }\n              }\n              break;\n            case \"x\":\n              const unescaped = this.scanHexEscape(ch);\n              if (unescaped === null) {\n                notEscapeSequenceHead = \"x\";\n              } else {\n                cooked += unescaped;\n              }\n              break;\n            case \"b\":\n              cooked += \"\\b\";\n              break;\n            case \"f\":\n              cooked += \"\\f\";\n              break;\n            case \"v\":\n              cooked += \"\\v\";\n              break;\n            default:\n              if (ch === \"0\") {\n                if (Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n                  notEscapeSequenceHead = \"0\";\n                } else {\n                  cooked += \"\\0\";\n                }\n              } else if (Character.isDecimalDigitChar(ch)) {\n                notEscapeSequenceHead = ch;\n              } else {\n                cooked += ch;\n              }\n              break;\n          }\n        } else {\n          ++this.lineNumber;\n          if (ch === \"\\r\" && this.source[this.index] === \"\\n\") {\n            ++this.index;\n          }\n          this.lineStart = this.index;\n        }\n      } else if (Character.isLineTerminator(ch.charCodeAt(0))) {\n        ++this.lineNumber;\n        if (ch === \"\\r\" && this.source[this.index] === \"\\n\") {\n          ++this.index;\n        }\n        this.lineStart = this.index;\n        cooked += \"\\n\";\n      } else {\n        cooked += ch;\n      }\n    }\n    if (!terminated) {\n      this.throwUnexpectedToken();\n    }\n    if (!head) {\n      this.curlyStack.pop();\n    }\n    return {\n      type: 10 /* Template */,\n      value: this.source.slice(start + 1, this.index - rawOffset),\n      cooked: notEscapeSequenceHead === null ? cooked : null,\n      head,\n      tail,\n      notEscapeSequenceHead,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start,\n      end: this.index\n    };\n  }\n  // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n  testRegExp(pattern, flags) {\n    const astralSubstitute = \"\\uFFFF\";\n    let tmp = pattern;\n    if (flags.indexOf(\"u\") >= 0) {\n      tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, ($0, $1, $2) => {\n        const codePoint = parseInt($1 || $2, 16);\n        if (codePoint > 1114111) {\n          this.throwUnexpectedToken(Messages.InvalidRegExp);\n        }\n        if (codePoint <= 65535) {\n          return String.fromCharCode(codePoint);\n        }\n        return astralSubstitute;\n      }).replace(\n        /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n        astralSubstitute\n      );\n    }\n    try {\n      RegExp(tmp);\n    } catch (e) {\n      this.throwUnexpectedToken(Messages.InvalidRegExp);\n    }\n    try {\n      return new RegExp(pattern, flags);\n    } catch (exception) {\n      return null;\n    }\n  }\n  scanRegExpBody() {\n    let ch = this.source[this.index];\n    assert(ch === \"/\", \"Regular expression literal must start with a slash\");\n    let str = this.source[this.index++];\n    let classMarker = false;\n    let terminated = false;\n    while (!this.eof()) {\n      ch = this.source[this.index++];\n      str += ch;\n      if (ch === \"\\\\\") {\n        ch = this.source[this.index++];\n        if (Character.isLineTerminator(ch.charCodeAt(0))) {\n          this.throwUnexpectedToken(Messages.UnterminatedRegExp);\n        }\n        str += ch;\n      } else if (Character.isLineTerminator(ch.charCodeAt(0))) {\n        this.throwUnexpectedToken(Messages.UnterminatedRegExp);\n      } else if (classMarker) {\n        if (ch === \"]\") {\n          classMarker = false;\n        }\n      } else {\n        if (ch === \"/\") {\n          terminated = true;\n          break;\n        } else if (ch === \"[\") {\n          classMarker = true;\n        }\n      }\n    }\n    if (!terminated) {\n      this.throwUnexpectedToken(Messages.UnterminatedRegExp);\n    }\n    return str.substr(1, str.length - 2);\n  }\n  scanRegExpFlags() {\n    let str = \"\";\n    let flags = \"\";\n    while (!this.eof()) {\n      let ch = this.source[this.index];\n      if (!Character.isIdentifierPart(ch.charCodeAt(0))) {\n        break;\n      }\n      ++this.index;\n      if (ch === \"\\\\\" && !this.eof()) {\n        ch = this.source[this.index];\n        if (ch === \"u\") {\n          ++this.index;\n          let restore = this.index;\n          const char = this.scanHexEscape(\"u\");\n          if (char !== null) {\n            flags += char;\n            for (str += \"\\\\u\"; restore < this.index; ++restore) {\n              str += this.source[restore];\n            }\n          } else {\n            this.index = restore;\n            flags += \"u\";\n            str += \"\\\\u\";\n          }\n          this.tolerateUnexpectedToken();\n        } else {\n          str += \"\\\\\";\n          this.tolerateUnexpectedToken();\n        }\n      } else {\n        flags += ch;\n        str += ch;\n      }\n    }\n    return flags;\n  }\n  scanRegExp() {\n    const start = this.index;\n    const pattern = this.scanRegExpBody();\n    const flags = this.scanRegExpFlags();\n    const value = this.testRegExp(pattern, flags);\n    return {\n      type: 9 /* RegularExpression */,\n      value: \"\",\n      pattern,\n      flags,\n      regex: value,\n      lineNumber: this.lineNumber,\n      lineStart: this.lineStart,\n      start,\n      end: this.index\n    };\n  }\n  lex() {\n    if (this.eof()) {\n      return {\n        type: 2 /* EOF */,\n        value: \"\",\n        lineNumber: this.lineNumber,\n        lineStart: this.lineStart,\n        start: this.index,\n        end: this.index\n      };\n    }\n    const cp = this.source.charCodeAt(this.index);\n    if (Character.isIdentifierStart(cp)) {\n      return this.scanIdentifier();\n    }\n    if (cp === 40 || cp === 41 || cp === 59) {\n      return this.scanPunctuator();\n    }\n    if (cp === 39 || cp === 34) {\n      return this.scanStringLiteral();\n    }\n    if (cp === 46) {\n      if (Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n        return this.scanNumericLiteral();\n      }\n      return this.scanPunctuator();\n    }\n    if (Character.isDecimalDigit(cp)) {\n      return this.scanNumericLiteral();\n    }\n    if (cp === 96 || cp === 125 && this.curlyStack[this.curlyStack.length - 1] === \"${\") {\n      return this.scanTemplate();\n    }\n    if (cp >= 55296 && cp < 57343) {\n      if (Character.isIdentifierStart(this.codePointAt(this.index))) {\n        return this.scanIdentifier();\n      }\n    }\n    return this.scanPunctuator();\n  }\n};\n\n// src/parser.ts\nvar ArrowParameterPlaceHolder = \"ArrowParameterPlaceHolder\";\nvar Parser = class {\n  config;\n  delegate;\n  errorHandler;\n  scanner;\n  operatorPrecedence;\n  lookahead;\n  hasLineTerminator;\n  context;\n  tokens;\n  startMarker;\n  lastMarker;\n  constructor(code, options = {}, delegate) {\n    this.config = {\n      range: typeof options.range === \"boolean\" && options.range,\n      loc: typeof options.loc === \"boolean\" && options.loc,\n      source: null,\n      tokens: typeof options.tokens === \"boolean\" && options.tokens,\n      comment: typeof options.comment === \"boolean\" && options.comment,\n      tolerant: typeof options.tolerant === \"boolean\" && options.tolerant\n    };\n    if (this.config.loc && options.source && options.source !== null) {\n      this.config.source = String(options.source);\n    }\n    this.delegate = delegate;\n    this.errorHandler = new ErrorHandler();\n    this.errorHandler.tolerant = this.config.tolerant == true;\n    this.scanner = new Scanner(code, this.errorHandler);\n    this.scanner.trackComment = this.config.comment == true;\n    this.operatorPrecedence = {\n      \")\": 0,\n      \";\": 0,\n      \",\": 0,\n      \"=\": 0,\n      \"]\": 0,\n      \"??\": 5,\n      \"||\": 6,\n      \"&&\": 7,\n      \"|\": 8,\n      \"^\": 9,\n      \"&\": 10,\n      \"==\": 11,\n      \"!=\": 11,\n      \"===\": 11,\n      \"!==\": 11,\n      \"<\": 12,\n      \">\": 12,\n      \"<=\": 12,\n      \">=\": 12,\n      \"<<\": 13,\n      \">>\": 13,\n      \">>>\": 13,\n      \"+\": 14,\n      \"-\": 14,\n      \"*\": 15,\n      \"/\": 15,\n      \"%\": 15\n    };\n    this.lookahead = {\n      type: 2 /* EOF */,\n      value: \"\",\n      lineNumber: this.scanner.lineNumber,\n      lineStart: 0,\n      start: 0,\n      end: 0\n    };\n    this.hasLineTerminator = false;\n    this.context = {\n      isModule: false,\n      isAsync: false,\n      allowIn: true,\n      allowStrictDirective: true,\n      allowSuper: false,\n      allowYield: true,\n      firstCoverInitializedNameError: null,\n      isAssignmentTarget: false,\n      isBindingElement: false,\n      inConstructor: false,\n      inFunctionBody: false,\n      inIteration: false,\n      inSwitch: false,\n      inClassConstructor: false,\n      labelSet: {},\n      strict: false,\n      decorators: null\n    };\n    this.tokens = [];\n    this.startMarker = {\n      index: 0,\n      line: this.scanner.lineNumber,\n      column: 0\n    };\n    this.lastMarker = {\n      index: 0,\n      line: this.scanner.lineNumber,\n      column: 0\n    };\n    this.nextToken();\n    this.lastMarker = {\n      index: this.scanner.index,\n      line: this.scanner.lineNumber,\n      column: this.scanner.index - this.scanner.lineStart\n    };\n  }\n  throwError(messageFormat, ...values) {\n    const args = values.slice();\n    const msg = messageFormat.replace(\n      /%(\\d)/g,\n      (whole, idx) => {\n        assert(idx < args.length, \"Message reference must be in range\");\n        return args[idx];\n      }\n    );\n    const index = this.lastMarker.index;\n    const line = this.lastMarker.line;\n    const column = this.lastMarker.column + 1;\n    throw this.errorHandler.createError(index, line, column, msg);\n  }\n  tolerateError(messageFormat, ...values) {\n    const args = values.slice();\n    const msg = messageFormat.replace(\n      /%(\\d)/g,\n      (whole, idx) => {\n        assert(idx < args.length, \"Message reference must be in range\");\n        return args[idx];\n      }\n    );\n    const index = this.lastMarker.index;\n    const line = this.scanner.lineNumber;\n    const column = this.lastMarker.column + 1;\n    this.errorHandler.tolerateError(index, line, column, msg);\n  }\n  // Throw an exception because of the token.\n  unexpectedTokenError(token, message) {\n    let msg = message || Messages.UnexpectedToken;\n    let value;\n    if (token) {\n      if (!message) {\n        msg = token.type === 2 /* EOF */ ? Messages.UnexpectedEOS : token.type === 3 /* Identifier */ ? Messages.UnexpectedIdentifier : token.type === 6 /* NumericLiteral */ ? Messages.UnexpectedNumber : token.type === 8 /* StringLiteral */ ? Messages.UnexpectedString : token.type === 10 /* Template */ ? Messages.UnexpectedTemplate : Messages.UnexpectedToken;\n        if (token.type === 4 /* Keyword */) {\n          if (this.scanner.isFutureReservedWord(token.value)) {\n            msg = Messages.UnexpectedReserved;\n          } else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n            msg = Messages.StrictReservedWord;\n          }\n        }\n      }\n      value = token.value;\n    } else {\n      value = \"ILLEGAL\";\n    }\n    msg = msg.replace(\"%0\", value);\n    if (token && typeof token.lineNumber === \"number\") {\n      const index = token.start;\n      const line = token.lineNumber;\n      const lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n      const column = token.start - lastMarkerLineStart + 1;\n      return this.errorHandler.createError(index, line, column, msg);\n    } else {\n      const index = this.lastMarker.index;\n      const line = this.lastMarker.line;\n      const column = this.lastMarker.column + 1;\n      return this.errorHandler.createError(index, line, column, msg);\n    }\n  }\n  throwUnexpectedToken(token, message) {\n    throw this.unexpectedTokenError(token, message);\n  }\n  tolerateUnexpectedToken(token, message) {\n    this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n  }\n  tolerateInvalidLoopStatement() {\n    if (this.matchKeyword(\"class\") || this.matchKeyword(\"function\")) {\n      this.tolerateError(Messages.UnexpectedToken, this.lookahead);\n    }\n  }\n  collectComments() {\n    if (!this.config.comment) {\n      this.scanner.scanComments();\n    } else {\n      const comments = this.scanner.scanComments();\n      if (comments.length > 0 && this.delegate) {\n        for (let i = 0; i < comments.length; ++i) {\n          const e = comments[i];\n          const node = {\n            type: e.multiLine ? \"BlockComment\" : \"LineComment\",\n            value: this.scanner.source.slice(e.slice[0], e.slice[1])\n          };\n          if (this.config.range) {\n            node.range = e.range;\n          }\n          if (this.config.loc) {\n            node.loc = e.loc;\n          }\n          const metadata = {\n            start: {\n              line: e.loc.start.line,\n              column: e.loc.start.column,\n              offset: e.range[0]\n            },\n            end: {\n              line: e.loc.end.line,\n              column: e.loc.end.column,\n              offset: e.range[1]\n            }\n          };\n          this.delegate(node, metadata);\n        }\n      }\n    }\n  }\n  // From internal representation to an external structure\n  getTokenRaw(token) {\n    return this.scanner.source.slice(token.start, token.end);\n  }\n  convertToken(token) {\n    const t = {\n      type: TokenName[token.type],\n      value: this.getTokenRaw(token)\n    };\n    if (this.config.range) {\n      t.range = [token.start, token.end];\n    }\n    if (this.config.loc) {\n      t.loc = {\n        start: {\n          line: this.startMarker.line,\n          column: this.startMarker.column\n        },\n        end: {\n          line: this.scanner.lineNumber,\n          column: this.scanner.index - this.scanner.lineStart\n        }\n      };\n    }\n    if (token.type === 9 /* RegularExpression */) {\n      const pattern = token.pattern;\n      const flags = token.flags;\n      t.regex = { pattern, flags };\n    }\n    return t;\n  }\n  nextToken() {\n    const token = this.lookahead;\n    this.lastMarker.index = this.scanner.index;\n    this.lastMarker.line = this.scanner.lineNumber;\n    this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n    this.collectComments();\n    if (this.scanner.index !== this.startMarker.index) {\n      this.startMarker.index = this.scanner.index;\n      this.startMarker.line = this.scanner.lineNumber;\n      this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n    }\n    const next = this.scanner.lex();\n    this.hasLineTerminator = token.lineNumber !== next.lineNumber;\n    if (next && this.context.strict && next.type === 3 /* Identifier */) {\n      if (this.scanner.isStrictModeReservedWord(next.value)) {\n        next.type = 4 /* Keyword */;\n      }\n    }\n    this.lookahead = next;\n    if (this.config.tokens && next.type !== 2 /* EOF */) {\n      this.tokens.push(this.convertToken(next));\n    }\n    return token;\n  }\n  nextRegexToken() {\n    this.collectComments();\n    const token = this.scanner.scanRegExp();\n    if (this.config.tokens) {\n      this.tokens.pop();\n      this.tokens.push(this.convertToken(token));\n    }\n    this.lookahead = token;\n    this.nextToken();\n    return token;\n  }\n  createNode() {\n    return {\n      index: this.startMarker.index,\n      line: this.startMarker.line,\n      column: this.startMarker.column\n    };\n  }\n  startNode(token, lastLineStart = 0) {\n    let column = token.start - token.lineStart;\n    let line = token.lineNumber;\n    if (column < 0) {\n      column += lastLineStart;\n      line--;\n    }\n    return {\n      index: token.start,\n      line,\n      column\n    };\n  }\n  finalize(marker, node) {\n    if (this.config.range) {\n      node.range = [marker.index, this.lastMarker.index];\n    }\n    if (this.config.loc) {\n      node.loc = {\n        start: {\n          line: marker.line,\n          column: marker.column\n        },\n        end: {\n          line: this.lastMarker.line,\n          column: this.lastMarker.column\n        }\n      };\n      if (this.config.source) {\n        node.loc.source = this.config.source;\n      }\n    }\n    if (this.delegate) {\n      const metadata = {\n        start: {\n          line: marker.line,\n          column: marker.column,\n          offset: marker.index\n        },\n        end: {\n          line: this.lastMarker.line,\n          column: this.lastMarker.column,\n          offset: this.lastMarker.index\n        }\n      };\n      this.delegate(node, metadata);\n    }\n    return node;\n  }\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n  expect(value) {\n    const token = this.nextToken();\n    if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n      this.throwUnexpectedToken(token);\n    }\n  }\n  // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n  expectCommaSeparator() {\n    if (this.config.tolerant) {\n      const token = this.lookahead;\n      if (token.type === 7 /* Punctuator */ && token.value === \",\") {\n        this.nextToken();\n      } else if (token.type === 7 /* Punctuator */ && token.value === \";\") {\n        this.nextToken();\n        this.tolerateUnexpectedToken(token);\n      } else {\n        this.tolerateUnexpectedToken(token, Messages.UnexpectedToken);\n      }\n    } else {\n      this.expect(\",\");\n    }\n  }\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n  expectKeyword(keyword) {\n    const token = this.nextToken();\n    if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\n      this.throwUnexpectedToken(token);\n    }\n  }\n  // Return true if the next token matches the specified punctuator.\n  match(value) {\n    return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\n  }\n  // Return true if the next token matches the specified keyword\n  matchKeyword(keyword) {\n    return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\n  }\n  // Return true if the next token matches the specified contextual keyword\n  // (where an identifier is sometimes a keyword depending on the context)\n  matchContextualKeyword(keyword) {\n    return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\n  }\n  // Return true if the next token is an assignment operator\n  matchAssign() {\n    if (this.lookahead.type !== 7 /* Punctuator */) {\n      return false;\n    }\n    const op = this.lookahead.value;\n    return op === \"=\" || op === \"*=\" || op === \"**=\" || op === \"/=\" || op === \"%=\" || op === \"+=\" || op === \"-=\" || op === \"<<=\" || op === \">>=\" || op === \">>>=\" || op === \"&=\" || op === \"^=\" || op === \"|=\" || op === \"&&=\" || op === \"||=\" || op === \"??=\";\n  }\n  // Cover grammar support.\n  //\n  // When an assignment expression position starts with an left parenthesis, the determination of the type\n  // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n  // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n  //\n  // There are three productions that can be parsed in a parentheses pair that needs to be determined\n  // after the outermost pair is closed. They are:\n  //\n  //   1. AssignmentExpression\n  //   2. BindingElements\n  //   3. AssignmentTargets\n  //\n  // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n  // binding element or assignment target.\n  //\n  // The three productions have the relationship:\n  //\n  //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\n  //\n  // with a single exception that CoverInitializedName when used directly in an Expression, generates\n  // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n  // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n  //\n  // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n  // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n  // the CoverInitializedName check is conducted.\n  //\n  // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n  // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n  // pattern. The CoverInitializedName check is deferred.\n  isolateCoverGrammar(parseFunction) {\n    const previousIsBindingElement = this.context.isBindingElement;\n    const previousIsAssignmentTarget = this.context.isAssignmentTarget;\n    const previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n    this.context.isBindingElement = true;\n    this.context.isAssignmentTarget = true;\n    this.context.firstCoverInitializedNameError = null;\n    const result = parseFunction.call(this);\n    if (this.context.firstCoverInitializedNameError !== null) {\n      this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n    }\n    this.context.isBindingElement = previousIsBindingElement;\n    this.context.isAssignmentTarget = previousIsAssignmentTarget;\n    this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n    return result;\n  }\n  inheritCoverGrammar(parseFunction) {\n    const previousIsBindingElement = this.context.isBindingElement;\n    const previousIsAssignmentTarget = this.context.isAssignmentTarget;\n    const previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n    this.context.isBindingElement = true;\n    this.context.isAssignmentTarget = true;\n    this.context.firstCoverInitializedNameError = null;\n    const result = parseFunction.call(this);\n    this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n    this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n    this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n    return result;\n  }\n  consumeSemicolon() {\n    if (this.match(\";\")) {\n      this.nextToken();\n    } else if (!this.hasLineTerminator) {\n      if (this.lookahead.type !== 2 /* EOF */ && !this.match(\"}\")) {\n        this.throwUnexpectedToken(this.lookahead);\n      }\n      this.lastMarker.index = this.startMarker.index;\n      this.lastMarker.line = this.startMarker.line;\n      this.lastMarker.column = this.startMarker.column;\n    }\n  }\n  // https://tc39.github.io/ecma262/#sec-primary-expression\n  parsePrimaryExpression() {\n    const node = this.createNode();\n    let expr;\n    let token, raw;\n    switch (this.lookahead.type) {\n      case 3 /* Identifier */:\n        if ((this.context.isModule || this.context.isAsync) && this.lookahead.value === \"await\") {\n          this.tolerateUnexpectedToken(this.lookahead);\n        }\n        expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Identifier(this.nextToken().value));\n        break;\n      case 6 /* NumericLiteral */:\n      case 8 /* StringLiteral */:\n        if (this.context.strict && this.lookahead.octal) {\n          this.tolerateUnexpectedToken(this.lookahead, Messages.StrictOctalLiteral);\n        }\n        this.context.isAssignmentTarget = false;\n        this.context.isBindingElement = false;\n        token = this.nextToken();\n        raw = this.getTokenRaw(token);\n        if (typeof token.value === \"bigint\")\n          expr = this.finalize(node, new BigIntLiteral(token.value, raw, token.value.toString()));\n        else\n          expr = this.finalize(node, new Literal(token.value, raw));\n        break;\n      case 1 /* BooleanLiteral */:\n        this.context.isAssignmentTarget = false;\n        this.context.isBindingElement = false;\n        token = this.nextToken();\n        raw = this.getTokenRaw(token);\n        expr = this.finalize(node, new Literal(token.value === \"true\", raw));\n        break;\n      case 5 /* NullLiteral */:\n        this.context.isAssignmentTarget = false;\n        this.context.isBindingElement = false;\n        token = this.nextToken();\n        raw = this.getTokenRaw(token);\n        expr = this.finalize(node, new Literal(null, raw));\n        break;\n      case 10 /* Template */:\n        expr = this.parseTemplateLiteral({ isTagged: false });\n        break;\n      case 7 /* Punctuator */:\n        switch (this.lookahead.value) {\n          case \"(\":\n            this.context.isBindingElement = false;\n            expr = this.inheritCoverGrammar(this.parseGroupExpression);\n            break;\n          case \"[\":\n            expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n            break;\n          case \"{\":\n            expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n            break;\n          case \"/\":\n          case \"/=\":\n            this.context.isAssignmentTarget = false;\n            this.context.isBindingElement = false;\n            this.scanner.index = this.startMarker.index;\n            token = this.nextRegexToken();\n            raw = this.getTokenRaw(token);\n            expr = this.finalize(node, new RegexLiteral(token.regex, raw, token.pattern, token.flags));\n            break;\n          case \"#\":\n            this.nextToken();\n            expr = this.finalize(node, new PrivateIdentifier(this.nextToken().value));\n            break;\n          case \"@\":\n            let decorators = this.parseDecorators();\n            this.context.decorators = decorators;\n            let expression = this.parsePrimaryExpression();\n            this.context.decorators = null;\n            expr = this.finalize(node, new PrivateIdentifier(this.nextToken().value));\n            break;\n          default:\n            expr = this.throwUnexpectedToken(this.nextToken());\n        }\n        break;\n      case 4 /* Keyword */:\n        if (!this.context.strict && this.context.allowYield && this.matchKeyword(\"yield\")) {\n          expr = this.parseIdentifierName();\n        } else if (!this.context.strict && this.matchKeyword(\"let\")) {\n          expr = this.finalize(node, new Identifier(this.nextToken().value));\n        } else {\n          this.context.isAssignmentTarget = false;\n          this.context.isBindingElement = false;\n          if (this.matchKeyword(\"function\")) {\n            expr = this.parseFunctionExpression();\n          } else if (this.matchKeyword(\"this\")) {\n            this.nextToken();\n            expr = this.finalize(node, new ThisExpression());\n          } else if (this.matchKeyword(\"class\")) {\n            expr = this.parseClassExpression();\n          } else if (this.matchKeyword(\"new\")) {\n            expr = this.parseNewExpression();\n          } else if (this.matchImportCall()) {\n            expr = this.parseImportCall();\n          } else if (this.matchImportMeta()) {\n            if (!this.context.isModule) {\n              this.tolerateUnexpectedToken(this.lookahead, Messages.CannotUseImportMetaOutsideAModule);\n            }\n            expr = this.parseImportMeta();\n          } else {\n            expr = this.throwUnexpectedToken(this.nextToken());\n          }\n        }\n        break;\n      default:\n        expr = this.throwUnexpectedToken(this.nextToken());\n    }\n    return expr;\n  }\n  // https://tc39.github.io/ecma262/#sec-array-initializer\n  parseSpreadElement() {\n    const node = this.createNode();\n    this.expect(\"...\");\n    const arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n    return this.finalize(node, new SpreadElement(arg));\n  }\n  parseArrayInitializer() {\n    const node = this.createNode();\n    const elements = [];\n    this.expect(\"[\");\n    while (!this.match(\"]\")) {\n      if (this.match(\",\")) {\n        this.nextToken();\n        elements.push(null);\n      } else if (this.match(\"...\")) {\n        const element = this.parseSpreadElement();\n        if (!this.match(\"]\")) {\n          this.context.isAssignmentTarget = false;\n          this.context.isBindingElement = false;\n          this.expect(\",\");\n        }\n        elements.push(element);\n      } else {\n        elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n        if (!this.match(\"]\")) {\n          this.expect(\",\");\n        }\n      }\n    }\n    this.expect(\"]\");\n    return this.finalize(node, new ArrayExpression(elements));\n  }\n  // https://tc39.github.io/ecma262/#sec-object-initializer\n  parsePropertyMethod(params) {\n    this.context.isAssignmentTarget = false;\n    this.context.isBindingElement = false;\n    const previousStrict = this.context.strict;\n    const previousAllowStrictDirective = this.context.allowStrictDirective;\n    this.context.allowStrictDirective = params.simple;\n    const body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n    if (this.context.strict && params.firstRestricted) {\n      this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n    }\n    if (this.context.strict && params.stricted) {\n      this.tolerateUnexpectedToken(params.stricted, params.message);\n    }\n    this.context.strict = previousStrict;\n    this.context.allowStrictDirective = previousAllowStrictDirective;\n    return body;\n  }\n  parsePropertyMethodFunction(isGenerator) {\n    const node = this.createNode();\n    const previousAllowYield = this.context.allowYield;\n    this.context.allowYield = true;\n    const params = this.parseFormalParameters();\n    const method = this.parsePropertyMethod(params);\n    this.context.allowYield = previousAllowYield;\n    return this.finalize(node, new FunctionExpression(null, params.params, method, isGenerator, false));\n  }\n  parsePropertyMethodAsyncFunction(isGenerator) {\n    const node = this.createNode();\n    const previousAllowYield = this.context.allowYield;\n    const previousIsAsync = this.context.isAsync;\n    this.context.allowYield = false;\n    this.context.isAsync = true;\n    const params = this.parseFormalParameters();\n    const method = this.parsePropertyMethod(params);\n    this.context.allowYield = previousAllowYield;\n    this.context.isAsync = previousIsAsync;\n    return this.finalize(node, new FunctionExpression(null, params.params, method, isGenerator, true));\n  }\n  parseObjectPropertyKey(isPrivate = false) {\n    const node = this.createNode();\n    const token = this.nextToken();\n    let key;\n    switch (token.type) {\n      case 8 /* StringLiteral */:\n      case 6 /* NumericLiteral */:\n        if (this.context.strict && token.octal) {\n          this.tolerateUnexpectedToken(token, Messages.StrictOctalLiteral);\n        }\n        const raw = this.getTokenRaw(token);\n        if (typeof token.value === \"bigint\")\n          key = this.finalize(node, new BigIntLiteral(token.value, raw, token.value.toString()));\n        else\n          key = this.finalize(node, new Literal(token.value, raw));\n        break;\n      case 3 /* Identifier */:\n      case 1 /* BooleanLiteral */:\n      case 5 /* NullLiteral */:\n      case 4 /* Keyword */:\n        key = this.finalize(node, isPrivate ? new PrivateIdentifier(token.value) : new Identifier(token.value));\n        break;\n      case 7 /* Punctuator */:\n        if (token.value === \"[\") {\n          key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n          this.expect(\"]\");\n        } else {\n          key = this.throwUnexpectedToken(token);\n        }\n        break;\n      default:\n        key = this.throwUnexpectedToken(token);\n    }\n    return key;\n  }\n  isPropertyKey(key, value) {\n    return key.type === \"Identifier\" /* Identifier */ && key.name === value || key.type === \"Literal\" /* Literal */ && key.value === value;\n  }\n  parseObjectProperty(hasProto) {\n    const node = this.createNode();\n    const token = this.lookahead;\n    let kind;\n    let key = null;\n    let value = null;\n    let computed = false;\n    let method = false;\n    let shorthand = false;\n    let isAsync = false;\n    let isGenerator = false;\n    if (token.type === 3 /* Identifier */) {\n      const id = token.value;\n      this.nextToken();\n      computed = this.match(\"[\");\n      isAsync = !this.hasLineTerminator && id === \"async\" && !this.match(\":\") && !this.match(\"(\") && !this.match(\",\");\n      isGenerator = this.match(\"*\");\n      if (isGenerator) {\n        this.nextToken();\n      }\n      key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Identifier(id));\n    } else if (this.match(\"*\")) {\n      this.nextToken();\n    } else {\n      computed = this.match(\"[\");\n      key = this.parseObjectPropertyKey();\n    }\n    const lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n    if (token.type === 3 /* Identifier */ && !isAsync && token.value === \"get\" && lookaheadPropertyKey) {\n      kind = \"get\";\n      computed = this.match(\"[\");\n      key = this.parseObjectPropertyKey();\n      this.context.allowYield = false;\n      value = this.parseGetterMethod();\n    } else if (token.type === 3 /* Identifier */ && !isAsync && token.value === \"set\" && lookaheadPropertyKey) {\n      kind = \"set\";\n      computed = this.match(\"[\");\n      key = this.parseObjectPropertyKey();\n      value = this.parseSetterMethod();\n    } else if (token.type === 7 /* Punctuator */ && token.value === \"*\" && lookaheadPropertyKey) {\n      kind = \"init\";\n      computed = this.match(\"[\");\n      key = this.parseObjectPropertyKey();\n      value = this.parseGeneratorMethod(false);\n      method = true;\n    } else {\n      if (!key) {\n        this.throwUnexpectedToken(this.lookahead);\n      }\n      kind = \"init\";\n      if (this.match(\":\") && !isAsync) {\n        if (!computed && this.isPropertyKey(key, \"__proto__\")) {\n          if (hasProto.value) {\n            this.tolerateError(Messages.DuplicateProtoProperty);\n          }\n          hasProto.value = true;\n        }\n        this.nextToken();\n        value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n      } else if (this.match(\"(\")) {\n        value = isAsync ? this.parsePropertyMethodAsyncFunction(isGenerator) : this.parsePropertyMethodFunction(isGenerator);\n        method = true;\n      } else if (token.type === 3 /* Identifier */) {\n        const id = this.finalize(node, new Identifier(token.value));\n        if (this.match(\"=\")) {\n          this.context.firstCoverInitializedNameError = this.lookahead;\n          this.nextToken();\n          shorthand = true;\n          const init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n          value = this.finalize(node, new AssignmentPattern(id, init));\n        } else {\n          shorthand = true;\n          value = id;\n        }\n      } else {\n        this.throwUnexpectedToken(this.nextToken());\n      }\n    }\n    return this.finalize(node, new Property(kind, key, computed, value, method, shorthand));\n  }\n  parseObjectInitializer() {\n    const node = this.createNode();\n    this.expect(\"{\");\n    const properties = [];\n    const hasProto = { value: false };\n    while (!this.match(\"}\")) {\n      const property = this.match(\"...\") ? this.parseSpreadElement() : this.parseObjectProperty(hasProto);\n      properties.push(property);\n      if (!this.match(\"}\") && (!property.method || this.match(\",\"))) {\n        this.expectCommaSeparator();\n      }\n    }\n    this.expect(\"}\");\n    return this.finalize(node, new ObjectExpression(properties));\n  }\n  // https://tc39.es/proposal-template-literal-revision/#sec-static-semantics-template-early-errors\n  throwTemplateLiteralEarlyErrors(token) {\n    switch (token.notEscapeSequenceHead) {\n      case \"u\":\n        return this.throwUnexpectedToken(token, Messages.InvalidUnicodeEscapeSequence);\n      case \"x\":\n        return this.throwUnexpectedToken(token, Messages.InvalidHexEscapeSequence);\n      case \"8\":\n      case \"9\":\n        return this.throwUnexpectedToken(token, Messages.TemplateEscape89);\n      default:\n        return this.throwUnexpectedToken(token, Messages.TemplateOctalLiteral);\n    }\n  }\n  // https://tc39.github.io/ecma262/#sec-template-literals\n  parseTemplateHead(options) {\n    assert(this.lookahead.head, \"Template literal must start with a template head\");\n    const node = this.createNode();\n    const token = this.nextToken();\n    if (!options.isTagged && token.notEscapeSequenceHead !== null) {\n      this.throwTemplateLiteralEarlyErrors(token);\n    }\n    const raw = token.value;\n    const cooked = token.cooked;\n    return this.finalize(node, new TemplateElement({ raw, cooked }, token.tail));\n  }\n  parseTemplateElement(options) {\n    if (this.lookahead.type !== 10 /* Template */) {\n      this.throwUnexpectedToken();\n    }\n    const node = this.createNode();\n    const token = this.nextToken();\n    if (!options.isTagged && token.notEscapeSequenceHead !== null) {\n      this.throwTemplateLiteralEarlyErrors(token);\n    }\n    const raw = token.value;\n    const cooked = token.cooked;\n    return this.finalize(node, new TemplateElement({ raw, cooked }, token.tail));\n  }\n  parseTemplateLiteral(options) {\n    const node = this.createNode();\n    const expressions = [];\n    const quasis = [];\n    let quasi = this.parseTemplateHead(options);\n    quasis.push(quasi);\n    while (!quasi.tail) {\n      expressions.push(this.parseExpression());\n      quasi = this.parseTemplateElement(options);\n      quasis.push(quasi);\n    }\n    return this.finalize(node, new TemplateLiteral(quasis, expressions));\n  }\n  // https://tc39.github.io/ecma262/#sec-grouping-operator\n  reinterpretExpressionAsPattern(expr) {\n    switch (expr.type) {\n      case \"Identifier\" /* Identifier */:\n      case \"MemberExpression\" /* MemberExpression */:\n      case \"RestElement\" /* RestElement */:\n      case \"AssignmentPattern\" /* AssignmentPattern */:\n        break;\n      case \"SpreadElement\" /* SpreadElement */:\n        expr.type = \"RestElement\" /* RestElement */;\n        this.reinterpretExpressionAsPattern(expr.argument);\n        break;\n      case \"ArrayExpression\" /* ArrayExpression */:\n        expr.type = \"ArrayPattern\" /* ArrayPattern */;\n        for (let i = 0; i < expr.elements.length; i++) {\n          if (expr.elements[i] !== null) {\n            this.reinterpretExpressionAsPattern(expr.elements[i]);\n          }\n        }\n        break;\n      case \"ObjectExpression\" /* ObjectExpression */:\n        expr.type = \"ObjectPattern\" /* ObjectPattern */;\n        for (let i = 0; i < expr.properties.length; i++) {\n          const property = expr.properties[i];\n          this.reinterpretExpressionAsPattern(property.type === \"SpreadElement\" /* SpreadElement */ ? property : property.value);\n        }\n        break;\n      case \"AssignmentExpression\" /* AssignmentExpression */:\n        expr.type = \"AssignmentPattern\" /* AssignmentPattern */;\n        delete expr.operator;\n        this.reinterpretExpressionAsPattern(expr.left);\n        break;\n      default:\n        break;\n    }\n  }\n  parseGroupExpression() {\n    let expr;\n    this.expect(\"(\");\n    if (this.match(\")\")) {\n      this.nextToken();\n      if (!this.match(\"=>\")) {\n        this.expect(\"=>\");\n      }\n      expr = {\n        type: ArrowParameterPlaceHolder,\n        params: [],\n        async: false\n      };\n    } else {\n      const startToken = this.lookahead;\n      const params = [];\n      if (this.match(\"...\")) {\n        expr = this.parseRestElement(params);\n        this.expect(\")\");\n        if (!this.match(\"=>\")) {\n          this.expect(\"=>\");\n        }\n        expr = {\n          type: ArrowParameterPlaceHolder,\n          params: [expr],\n          async: false\n        };\n      } else {\n        let arrow = false;\n        this.context.isBindingElement = true;\n        expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n        if (this.match(\",\")) {\n          const expressions = [];\n          this.context.isAssignmentTarget = false;\n          expressions.push(expr);\n          while (this.lookahead.type !== 2 /* EOF */) {\n            if (!this.match(\",\")) {\n              break;\n            }\n            this.nextToken();\n            if (this.match(\")\")) {\n              this.nextToken();\n              for (let i = 0; i < expressions.length; i++) {\n                this.reinterpretExpressionAsPattern(expressions[i]);\n              }\n              arrow = true;\n              expr = {\n                type: ArrowParameterPlaceHolder,\n                params: expressions,\n                async: false\n              };\n            } else if (this.match(\"...\")) {\n              if (!this.context.isBindingElement) {\n                this.throwUnexpectedToken(this.lookahead);\n              }\n              expressions.push(this.parseRestElement(params));\n              this.expect(\")\");\n              if (!this.match(\"=>\")) {\n                this.expect(\"=>\");\n              }\n              this.context.isBindingElement = false;\n              for (let i = 0; i < expressions.length; i++) {\n                this.reinterpretExpressionAsPattern(expressions[i]);\n              }\n              arrow = true;\n              expr = {\n                type: ArrowParameterPlaceHolder,\n                params: expressions,\n                async: false\n              };\n            } else {\n              expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n            }\n            if (arrow) {\n              break;\n            }\n          }\n          if (!arrow) {\n            expr = this.finalize(this.startNode(startToken), new SequenceExpression(expressions));\n          }\n        }\n        if (!arrow) {\n          this.expect(\")\");\n          if (this.match(\"=>\")) {\n            if (expr.type === \"Identifier\" /* Identifier */ && expr.name === \"yield\") {\n              arrow = true;\n              expr = {\n                type: ArrowParameterPlaceHolder,\n                params: [expr],\n                async: false\n              };\n            }\n            if (!arrow) {\n              if (!this.context.isBindingElement) {\n                this.throwUnexpectedToken(this.lookahead);\n              }\n              if (expr.type === \"SequenceExpression\" /* SequenceExpression */) {\n                for (let i = 0; i < expr.expressions.length; i++) {\n                  this.reinterpretExpressionAsPattern(expr.expressions[i]);\n                }\n              } else {\n                this.reinterpretExpressionAsPattern(expr);\n              }\n              const parameters = expr.type === \"SequenceExpression\" /* SequenceExpression */ ? expr.expressions : [expr];\n              expr = {\n                type: ArrowParameterPlaceHolder,\n                params: parameters,\n                async: false\n              };\n            }\n          }\n          this.context.isBindingElement = false;\n        }\n      }\n    }\n    return expr;\n  }\n  // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n  parseArguments() {\n    this.expect(\"(\");\n    const args = [];\n    if (!this.match(\")\")) {\n      while (true) {\n        const expr = this.match(\"...\") ? this.parseSpreadElement() : this.isolateCoverGrammar(this.parseAssignmentExpression);\n        args.push(expr);\n        if (this.match(\")\")) {\n          break;\n        }\n        this.expectCommaSeparator();\n        if (this.match(\")\")) {\n          break;\n        }\n      }\n    }\n    this.expect(\")\");\n    return args;\n  }\n  isIdentifierName(token) {\n    return token.type === 3 /* Identifier */ || token.type === 4 /* Keyword */ || token.type === 1 /* BooleanLiteral */ || token.type === 5 /* NullLiteral */;\n  }\n  parseIdentifierName(allowPrivateField = false) {\n    let isPrivateField = false;\n    let node = this.createNode();\n    let token = this.nextToken();\n    if (token.value === \"#\" && allowPrivateField) {\n      token = this.nextToken();\n      isPrivateField = true;\n    }\n    if (!this.isIdentifierName(token)) {\n      this.throwUnexpectedToken(token);\n    }\n    return this.finalize(node, isPrivateField ? new PrivateIdentifier(token.value) : new Identifier(token.value));\n  }\n  parseNewExpression() {\n    const node = this.createNode();\n    const id = this.parseIdentifierName();\n    assert(id.name === \"new\", \"New expression must start with `new`\");\n    let expr;\n    if (this.match(\".\")) {\n      this.nextToken();\n      if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === \"target\") {\n        const property = this.parseIdentifierName();\n        expr = new MetaProperty(id, property);\n      } else {\n        this.throwUnexpectedToken(this.lookahead);\n      }\n    } else if (this.matchKeyword(\"import\")) {\n      this.throwUnexpectedToken(this.lookahead);\n    } else {\n      const callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n      const args = this.match(\"(\") ? this.parseArguments() : [];\n      expr = new NewExpression(callee, args);\n      this.context.isAssignmentTarget = false;\n      this.context.isBindingElement = false;\n    }\n    return this.finalize(node, expr);\n  }\n  parseAsyncArgument() {\n    const arg = this.parseAssignmentExpression();\n    this.context.firstCoverInitializedNameError = null;\n    return arg;\n  }\n  parseAsyncArguments() {\n    this.expect(\"(\");\n    const args = [];\n    if (!this.match(\")\")) {\n      while (true) {\n        const expr = this.match(\"...\") ? this.parseSpreadElement() : this.isolateCoverGrammar(this.parseAsyncArgument);\n        args.push(expr);\n        if (this.match(\")\")) {\n          break;\n        }\n        this.expectCommaSeparator();\n        if (this.match(\")\")) {\n          break;\n        }\n      }\n    }\n    this.expect(\")\");\n    return args;\n  }\n  matchImportCall() {\n    let match = this.matchKeyword(\"import\");\n    if (match) {\n      const state = this.scanner.saveState();\n      this.scanner.scanComments();\n      const next = this.scanner.lex();\n      this.scanner.restoreState(state);\n      match = next.type === 7 /* Punctuator */ && next.value === \"(\";\n    }\n    return match;\n  }\n  parseImportCall() {\n    const node = this.createNode();\n    this.expectKeyword(\"import\");\n    this.expect(\"(\");\n    var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n    this.context.isAssignmentTarget = true;\n    const source = this.parseAssignmentExpression();\n    let attributes = null;\n    if (this.match(\",\")) {\n      this.nextToken();\n      if (!this.match(\")\"))\n        attributes = this.parseAssignmentExpression();\n    }\n    this.context.isAssignmentTarget = previousIsAssignmentTarget;\n    if (!this.match(\")\")) {\n      if (this.match(\",\")) {\n        this.nextToken();\n      }\n      this.expect(\")\");\n    } else {\n      this.nextToken();\n    }\n    return this.finalize(node, new ImportExpression(source, attributes));\n  }\n  matchImportMeta() {\n    let match = this.matchKeyword(\"import\");\n    if (match) {\n      const state = this.scanner.saveState();\n      this.scanner.scanComments();\n      const dot = this.scanner.lex();\n      if (dot.type === 7 /* Punctuator */ && dot.value === \".\") {\n        this.scanner.scanComments();\n        const meta = this.scanner.lex();\n        match = meta.type === 3 /* Identifier */ && meta.value === \"meta\";\n        if (match) {\n          if (meta.end - meta.start !== \"meta\".length) {\n            this.tolerateUnexpectedToken(meta, Messages.InvalidEscapedReservedWord);\n          }\n        }\n      } else {\n        match = false;\n      }\n      this.scanner.restoreState(state);\n    }\n    return match;\n  }\n  parseImportMeta() {\n    const node = this.createNode();\n    const id = this.parseIdentifierName();\n    this.expect(\".\");\n    const property = this.parseIdentifierName();\n    this.context.isAssignmentTarget = false;\n    return this.finalize(node, new MetaProperty(id, property));\n  }\n  parseLeftHandSideExpressionAllowCall() {\n    const startToken = this.lookahead;\n    const maybeAsync = this.matchContextualKeyword(\"async\");\n    const previousAllowIn = this.context.allowIn;\n    this.context.allowIn = true;\n    let expr;\n    const isSuper = this.matchKeyword(\"super\");\n    if (isSuper && this.context.inFunctionBody) {\n      expr = this.createNode();\n      this.nextToken();\n      expr = this.finalize(expr, new Super());\n      if (!this.match(\"(\") && !this.match(\".\") && !this.match(\"[\")) {\n        this.throwUnexpectedToken(this.lookahead);\n      }\n    } else {\n      expr = this.inheritCoverGrammar(this.matchKeyword(\"new\") ? this.parseNewExpression : this.parsePrimaryExpression);\n    }\n    if (isSuper && this.match(\"(\") && (!this.context.inClassConstructor || !this.context.allowSuper)) {\n      this.tolerateError(Messages.UnexpectedSuper);\n    }\n    let hasOptional = false;\n    while (true) {\n      let optional = false;\n      if (this.match(\"?.\")) {\n        optional = true;\n        hasOptional = true;\n        this.expect(\"?.\");\n      }\n      if (this.match(\"(\")) {\n        const asyncArrow = maybeAsync && startToken.lineNumber === this.lookahead.lineNumber;\n        this.context.isBindingElement = false;\n        this.context.isAssignmentTarget = false;\n        const args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n        if (expr.type === \"ImportExpression\" /* ImportExpression */ && args.length !== 1) {\n          this.tolerateError(Messages.BadImportCallArity);\n        }\n        expr = this.finalize(this.startNode(startToken), new CallExpression(expr, args, optional));\n        if (asyncArrow && this.match(\"=>\")) {\n          for (let i = 0; i < args.length; ++i) {\n            this.reinterpretExpressionAsPattern(args[i]);\n          }\n          expr = {\n            type: ArrowParameterPlaceHolder,\n            params: args,\n            async: true\n          };\n        }\n      } else if (this.match(\"[\")) {\n        this.context.isBindingElement = false;\n        this.context.isAssignmentTarget = !optional;\n        this.expect(\"[\");\n        const property = this.isolateCoverGrammar(this.parseExpression);\n        this.expect(\"]\");\n        expr = this.finalize(this.startNode(startToken), new MemberExpression(true, expr, property, optional));\n      } else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n        if (optional) {\n          this.throwUnexpectedToken(this.lookahead);\n        }\n        if (hasOptional) {\n          this.throwError(Messages.InvalidTaggedTemplateOnOptionalChain);\n        }\n        const quasi = this.parseTemplateLiteral({ isTagged: true });\n        expr = this.finalize(this.startNode(startToken), new TaggedTemplateExpression(expr, quasi));\n      } else if (this.match(\".\") || optional) {\n        this.context.isBindingElement = false;\n        this.context.isAssignmentTarget = !optional;\n        if (!optional) {\n          this.expect(\".\");\n        }\n        const property = this.parseIdentifierName(true);\n        expr = this.finalize(this.startNode(startToken), new MemberExpression(false, expr, property, optional));\n      } else {\n        break;\n      }\n    }\n    this.context.allowIn = previousAllowIn;\n    if (hasOptional) {\n      expr = this.finalize(this.startNode(startToken), new ChainExpression(expr));\n    }\n    return expr;\n  }\n  parseSuper() {\n    const node = this.createNode();\n    this.expectKeyword(\"super\");\n    if (!this.match(\"[\") && !this.match(\".\")) {\n      this.throwUnexpectedToken(this.lookahead);\n    }\n    return this.finalize(node, new Super());\n  }\n  parseLeftHandSideExpression() {\n    assert(this.context.allowIn, \"callee of new expression always allow in keyword.\");\n    const node = this.startNode(this.lookahead);\n    let expr = this.matchKeyword(\"super\") && this.context.inFunctionBody ? this.parseSuper() : this.inheritCoverGrammar(this.matchKeyword(\"new\") ? this.parseNewExpression : this.parsePrimaryExpression);\n    let hasOptional = false;\n    while (true) {\n      let optional = false;\n      if (this.match(\"?.\")) {\n        optional = true;\n        hasOptional = true;\n        this.expect(\"?.\");\n      }\n      if (this.match(\"[\")) {\n        this.context.isBindingElement = false;\n        this.context.isAssignmentTarget = !optional;\n        this.expect(\"[\");\n        const property = this.isolateCoverGrammar(this.parseExpression);\n        this.expect(\"]\");\n        expr = this.finalize(node, new MemberExpression(true, expr, property, optional));\n      } else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n        if (optional) {\n          this.throwUnexpectedToken(this.lookahead);\n        }\n        if (hasOptional) {\n          this.throwError(Messages.InvalidTaggedTemplateOnOptionalChain);\n        }\n        const quasi = this.parseTemplateLiteral({ isTagged: true });\n        expr = this.finalize(node, new TaggedTemplateExpression(expr, quasi));\n      } else if (this.match(\".\") || optional) {\n        this.context.isBindingElement = false;\n        this.context.isAssignmentTarget = !optional;\n        if (!optional) {\n          this.expect(\".\");\n        }\n        const property = this.parseIdentifierName();\n        expr = this.finalize(node, new MemberExpression(false, expr, property, optional));\n      } else {\n        break;\n      }\n    }\n    if (hasOptional) {\n      expr = this.finalize(node, new ChainExpression(expr));\n    }\n    return expr;\n  }\n  // https://tc39.github.io/ecma262/#sec-update-expressions\n  parseUpdateExpression() {\n    let expr;\n    const startToken = this.lookahead;\n    if (this.match(\"++\") || this.match(\"--\")) {\n      const node = this.startNode(startToken);\n      const token = this.nextToken();\n      expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n      if (this.context.strict && expr.type === \"Identifier\" /* Identifier */ && this.scanner.isRestrictedWord(expr.name)) {\n        this.tolerateError(Messages.StrictLHSPrefix);\n      }\n      if (!this.context.isAssignmentTarget) {\n        this.tolerateError(Messages.InvalidLHSInAssignment);\n      }\n      const prefix = true;\n      expr = this.finalize(node, new UpdateExpression(token.value, expr, prefix));\n      this.context.isAssignmentTarget = false;\n      this.context.isBindingElement = false;\n    } else {\n      expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n      if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\n        if (this.match(\"++\") || this.match(\"--\")) {\n          if (this.context.strict && expr.type === \"Identifier\" /* Identifier */ && this.scanner.isRestrictedWord(expr.name)) {\n            this.tolerateError(Messages.StrictLHSPostfix);\n          }\n          if (!this.context.isAssignmentTarget) {\n            this.tolerateError(Messages.InvalidLHSInAssignment);\n          }\n          this.context.isAssignmentTarget = false;\n          this.context.isBindingElement = false;\n          const operator = this.nextToken().value;\n          const prefix = false;\n          expr = this.finalize(this.startNode(startToken), new UpdateExpression(operator, expr, prefix));\n        }\n      }\n    }\n    return expr;\n  }\n  // https://tc39.github.io/ecma262/#sec-unary-operators\n  parseAwaitExpression() {\n    const node = this.createNode();\n    this.nextToken();\n    const argument = this.parseUnaryExpression();\n    return this.finalize(node, new AwaitExpression(argument));\n  }\n  parseUnaryExpression() {\n    let expr;\n    if (this.match(\"+\") || this.match(\"-\") || this.match(\"~\") || this.match(\"!\") || this.matchKeyword(\"delete\") || this.matchKeyword(\"void\") || this.matchKeyword(\"typeof\")) {\n      const node = this.startNode(this.lookahead);\n      const token = this.nextToken();\n      expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n      expr = this.finalize(node, new UnaryExpression(token.value, expr));\n      if (this.context.strict && expr.operator === \"delete\" && expr.argument.type === \"Identifier\" /* Identifier */) {\n        this.tolerateError(Messages.StrictDelete);\n      }\n      this.context.isAssignmentTarget = false;\n      this.context.isBindingElement = false;\n    } else if ((this.context.isModule && !this.context.inFunctionBody || this.context.isAsync) && this.matchContextualKeyword(\"await\")) {\n      expr = this.parseAwaitExpression();\n    } else {\n      expr = this.parseUpdateExpression();\n    }\n    return expr;\n  }\n  parseExponentiationExpression() {\n    const startToken = this.lookahead;\n    const isLeftParenthesized = this.match(\"(\");\n    let expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n    const exponentAllowed = expr.type !== \"UnaryExpression\" /* UnaryExpression */ || isLeftParenthesized;\n    if (exponentAllowed && this.match(\"**\")) {\n      this.nextToken();\n      this.context.isAssignmentTarget = false;\n      this.context.isBindingElement = false;\n      const left = expr;\n      const right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n      expr = this.finalize(this.startNode(startToken), new BinaryExpression(\"**\", left, right));\n    }\n    return expr;\n  }\n  // https://tc39.github.io/ecma262/#sec-exp-operator\n  // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n  // https://tc39.github.io/ecma262/#sec-additive-operators\n  // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n  // https://tc39.github.io/ecma262/#sec-relational-operators\n  // https://tc39.github.io/ecma262/#sec-equality-operators\n  // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n  // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n  binaryPrecedence(token) {\n    const op = token.value;\n    let precedence;\n    if (token.type === 7 /* Punctuator */) {\n      precedence = this.operatorPrecedence[op] || 0;\n    } else if (token.type === 4 /* Keyword */) {\n      precedence = op === \"instanceof\" || this.context.allowIn && op === \"in\" ? 12 : 0;\n    } else {\n      precedence = 0;\n    }\n    return precedence;\n  }\n  parseBinaryExpression() {\n    const startToken = this.lookahead;\n    let expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n    let allowAndOr = true;\n    let allowNullishCoalescing = true;\n    const updateNullishCoalescingRestrictions = (token2) => {\n      if (token2.value === \"&&\" || token2.value === \"||\") {\n        allowNullishCoalescing = false;\n      }\n      if (token2.value === \"??\") {\n        allowAndOr = false;\n      }\n    };\n    const token = this.lookahead;\n    let prec = this.binaryPrecedence(token);\n    if (prec > 0) {\n      updateNullishCoalescingRestrictions(token);\n      this.nextToken();\n      this.context.isAssignmentTarget = false;\n      this.context.isBindingElement = false;\n      const markers = [startToken, this.lookahead];\n      let left = expr;\n      let right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n      const stack = [left, token.value, right];\n      const precedences = [prec];\n      while (true) {\n        prec = this.binaryPrecedence(this.lookahead);\n        if (prec <= 0) {\n          break;\n        }\n        if (!allowAndOr && (this.lookahead.value === \"&&\" || this.lookahead.value === \"||\") || !allowNullishCoalescing && this.lookahead.value === \"??\") {\n          this.throwUnexpectedToken(this.lookahead);\n        }\n        updateNullishCoalescingRestrictions(this.lookahead);\n        while (stack.length > 2 && prec <= precedences[precedences.length - 1]) {\n          right = stack.pop();\n          const operator = stack.pop();\n          precedences.pop();\n          left = stack.pop();\n          markers.pop();\n          const marker = markers[markers.length - 1];\n          const node = this.startNode(marker, marker.lineStart);\n          const logical = operator === \"||\" || operator === \"&&\" || operator === \"??\";\n          stack.push(this.finalize(node, logical ? new LogicalExpression(operator, left, right) : new BinaryExpression(operator, left, right)));\n        }\n        stack.push(this.nextToken().value);\n        precedences.push(prec);\n        markers.push(this.lookahead);\n        stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n      }\n      let i = stack.length - 1;\n      expr = stack[i];\n      let lastMarker = markers.pop();\n      while (i > 1) {\n        const marker = markers.pop();\n        const lastLineStart = lastMarker && lastMarker.lineStart;\n        const node = this.startNode(marker, lastLineStart);\n        const operator = stack[i - 1];\n        const logical = operator === \"||\" || operator === \"&&\" || operator === \"??\";\n        expr = this.finalize(node, logical ? new LogicalExpression(operator, stack[i - 2], expr) : new BinaryExpression(operator, stack[i - 2], expr));\n        i -= 2;\n        lastMarker = marker;\n      }\n    }\n    return expr;\n  }\n  // https://tc39.github.io/ecma262/#sec-conditional-operator\n  parseConditionalExpression() {\n    const startToken = this.lookahead;\n    let expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n    if (this.match(\"?\")) {\n      this.nextToken();\n      const previousAllowIn = this.context.allowIn;\n      this.context.allowIn = true;\n      const consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n      this.context.allowIn = previousAllowIn;\n      this.expect(\":\");\n      const alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n      expr = this.finalize(this.startNode(startToken), new ConditionalExpression(expr, consequent, alternate));\n      this.context.isAssignmentTarget = false;\n      this.context.isBindingElement = false;\n    }\n    return expr;\n  }\n  // https://tc39.github.io/ecma262/#sec-assignment-operators\n  checkPatternParam(options, param) {\n    switch (param.type) {\n      case \"Identifier\" /* Identifier */:\n        this.validateParam(options, param, param.name);\n        break;\n      case \"RestElement\" /* RestElement */:\n        this.checkPatternParam(options, param.argument);\n        break;\n      case \"AssignmentPattern\" /* AssignmentPattern */:\n        this.checkPatternParam(options, param.left);\n        break;\n      case \"ArrayPattern\" /* ArrayPattern */:\n        for (let i = 0; i < param.elements.length; i++) {\n          if (param.elements[i] !== null) {\n            this.checkPatternParam(options, param.elements[i]);\n          }\n        }\n        break;\n      case \"ObjectPattern\" /* ObjectPattern */:\n        for (let i = 0; i < param.properties.length; i++) {\n          const property = param.properties[i];\n          this.checkPatternParam(options, property.type === \"RestElement\" /* RestElement */ ? property : property.value);\n        }\n        break;\n      default:\n        break;\n    }\n    options.simple = options.simple && param instanceof Identifier;\n  }\n  reinterpretAsCoverFormalsList(expr) {\n    let params = [expr];\n    const options = {\n      simple: true,\n      paramSet: {}\n    };\n    let asyncArrow = false;\n    switch (expr.type) {\n      case \"Identifier\" /* Identifier */:\n        break;\n      case ArrowParameterPlaceHolder:\n        params = expr.params;\n        asyncArrow = expr.async;\n        break;\n      default:\n        return null;\n    }\n    for (let i = 0; i < params.length; ++i) {\n      const param = params[i];\n      if (param.type === \"AssignmentPattern\" /* AssignmentPattern */) {\n        if (param.right.type === \"YieldExpression\" /* YieldExpression */) {\n          if (param.right.argument) {\n            this.throwUnexpectedToken(this.lookahead);\n          }\n          param.right.type = \"Identifier\" /* Identifier */;\n          param.right.name = \"yield\";\n          delete param.right.argument;\n          delete param.right.delegate;\n        }\n      } else if (asyncArrow && param.type === \"Identifier\" /* Identifier */ && param.name === \"await\") {\n        this.throwUnexpectedToken(this.lookahead);\n      }\n      this.checkPatternParam(options, param);\n      params[i] = param;\n    }\n    if (this.context.strict || !this.context.allowYield) {\n      for (let i = 0; i < params.length; ++i) {\n        const param = params[i];\n        if (param.type === \"YieldExpression\" /* YieldExpression */) {\n          this.throwUnexpectedToken(this.lookahead);\n        }\n      }\n    }\n    if (options.hasDuplicateParameterNames) {\n      const token = this.context.strict ? options.stricted : options.firstRestricted;\n      this.throwUnexpectedToken(token, Messages.DuplicateParameter);\n    }\n    return {\n      simple: options.simple,\n      params,\n      stricted: options.stricted,\n      firstRestricted: options.firstRestricted,\n      message: options.message\n    };\n  }\n  parseAssignmentExpression() {\n    let expr;\n    if (!this.context.allowYield && this.matchKeyword(\"yield\")) {\n      expr = this.parseYieldExpression();\n    } else {\n      const startToken = this.lookahead;\n      let token = startToken;\n      expr = this.parseConditionalExpression();\n      if (token.type === 3 /* Identifier */ && token.lineNumber === this.lookahead.lineNumber && token.value === \"async\") {\n        if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword(\"yield\")) {\n          const arg = this.parsePrimaryExpression();\n          this.reinterpretExpressionAsPattern(arg);\n          expr = {\n            type: ArrowParameterPlaceHolder,\n            params: [arg],\n            async: true\n          };\n        }\n      }\n      if (expr.type === ArrowParameterPlaceHolder || this.match(\"=>\")) {\n        this.context.isAssignmentTarget = false;\n        this.context.isBindingElement = false;\n        const isAsync = expr.async;\n        const list = this.reinterpretAsCoverFormalsList(expr);\n        if (list) {\n          if (this.hasLineTerminator) {\n            this.tolerateUnexpectedToken(this.lookahead);\n          }\n          this.context.firstCoverInitializedNameError = null;\n          const previousStrict = this.context.strict;\n          const previousAllowStrictDirective = this.context.allowStrictDirective;\n          this.context.allowStrictDirective = list.simple;\n          const previousAllowYield = this.context.allowYield;\n          const previousIsAsync = this.context.isAsync;\n          this.context.allowYield = true;\n          this.context.isAsync = isAsync;\n          const node = this.startNode(startToken);\n          this.expect(\"=>\");\n          let body;\n          if (this.match(\"{\")) {\n            const previousAllowIn = this.context.allowIn;\n            this.context.allowIn = true;\n            body = this.parseFunctionSourceElements();\n            this.context.allowIn = previousAllowIn;\n          } else {\n            body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n          }\n          const expression = body.type !== \"BlockStatement\" /* BlockStatement */;\n          if (this.context.strict && list.firstRestricted) {\n            this.throwUnexpectedToken(list.firstRestricted, list.message);\n          }\n          if (this.context.strict && list.stricted) {\n            this.tolerateUnexpectedToken(list.stricted, list.message);\n          }\n          expr = this.finalize(node, new ArrowFunctionExpression(list.params, body, expression, isAsync));\n          this.context.strict = previousStrict;\n          this.context.allowStrictDirective = previousAllowStrictDirective;\n          this.context.allowYield = previousAllowYield;\n          this.context.isAsync = previousIsAsync;\n        }\n      } else {\n        if (this.matchAssign()) {\n          if (!this.context.isAssignmentTarget) {\n            this.tolerateError(Messages.InvalidLHSInAssignment);\n          }\n          if (this.context.strict && expr.type === \"Identifier\" /* Identifier */) {\n            const id = expr;\n            if (this.scanner.isRestrictedWord(id.name)) {\n              this.tolerateUnexpectedToken(token, Messages.StrictLHSAssignment);\n            }\n            if (this.scanner.isStrictModeReservedWord(id.name)) {\n              this.tolerateUnexpectedToken(token, Messages.StrictReservedWord);\n            }\n          }\n          if (!this.match(\"=\")) {\n            this.context.isAssignmentTarget = false;\n            this.context.isBindingElement = false;\n          } else {\n            this.reinterpretExpressionAsPattern(expr);\n          }\n          token = this.nextToken();\n          const operator = token.value;\n          const right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n          expr = this.finalize(this.startNode(startToken), new AssignmentExpression(operator, expr, right));\n          this.context.firstCoverInitializedNameError = null;\n        }\n      }\n    }\n    return expr;\n  }\n  // https://tc39.github.io/ecma262/#sec-comma-operator\n  parseExpression() {\n    const startToken = this.lookahead;\n    let expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n    if (this.match(\",\")) {\n      const expressions = [];\n      expressions.push(expr);\n      while (this.lookahead.type !== 2 /* EOF */) {\n        if (!this.match(\",\")) {\n          break;\n        }\n        this.nextToken();\n        expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n      }\n      expr = this.finalize(this.startNode(startToken), new SequenceExpression(expressions));\n    }\n    return expr;\n  }\n  // https://tc39.github.io/ecma262/#sec-block\n  parseStatementListItem() {\n    let statement;\n    this.context.isAssignmentTarget = true;\n    this.context.isBindingElement = true;\n    if (this.lookahead.type === 4 /* Keyword */) {\n      switch (this.lookahead.value) {\n        case \"export\":\n          if (!this.context.isModule) {\n            this.tolerateUnexpectedToken(this.lookahead, Messages.IllegalExportDeclaration);\n          }\n          statement = this.parseExportDeclaration();\n          break;\n        case \"import\":\n          if (this.matchImportCall()) {\n            statement = this.parseExpressionStatement();\n          } else if (this.matchImportMeta()) {\n            statement = this.parseStatement();\n          } else {\n            if (!this.context.isModule) {\n              this.tolerateUnexpectedToken(this.lookahead, Messages.IllegalImportDeclaration);\n            }\n            statement = this.parseImportDeclaration();\n          }\n          break;\n        case \"const\":\n          statement = this.parseLexicalDeclaration({ inFor: false });\n          break;\n        case \"function\":\n          statement = this.parseFunctionDeclaration();\n          break;\n        case \"class\":\n          statement = this.parseClassDeclaration();\n          break;\n        case \"let\":\n          statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\n          break;\n        default:\n          statement = this.parseStatement();\n          break;\n      }\n    } else {\n      statement = this.parseStatement();\n    }\n    return statement;\n  }\n  parseBlock() {\n    const node = this.createNode();\n    this.expect(\"{\");\n    const block = [];\n    while (true) {\n      if (this.match(\"}\")) {\n        break;\n      }\n      block.push(this.parseStatementListItem());\n    }\n    this.expect(\"}\");\n    return this.finalize(node, new BlockStatement(block));\n  }\n  // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n  parseLexicalBinding(kind, options) {\n    const node = this.createNode();\n    const params = [];\n    const id = this.parsePattern(params, kind);\n    if (this.context.strict && id.type === \"Identifier\" /* Identifier */) {\n      if (this.scanner.isRestrictedWord(id.name)) {\n        this.tolerateError(Messages.StrictVarName);\n      }\n    }\n    let init = null;\n    if (kind === \"const\") {\n      if (!this.matchKeyword(\"in\") && !this.matchContextualKeyword(\"of\")) {\n        if (this.match(\"=\")) {\n          this.nextToken();\n          init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n        } else {\n          this.throwError(Messages.DeclarationMissingInitializer, \"const\");\n        }\n      }\n    } else if (!options.inFor && id.type !== \"Identifier\" /* Identifier */ || this.match(\"=\")) {\n      this.expect(\"=\");\n      init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n    }\n    return this.finalize(node, new VariableDeclarator(id, init));\n  }\n  parseBindingList(kind, options) {\n    const list = [this.parseLexicalBinding(kind, options)];\n    while (this.match(\",\")) {\n      this.nextToken();\n      list.push(this.parseLexicalBinding(kind, options));\n    }\n    return list;\n  }\n  isLexicalDeclaration() {\n    const state = this.scanner.saveState();\n    this.scanner.scanComments();\n    const next = this.scanner.lex();\n    this.scanner.restoreState(state);\n    return next.type === 3 /* Identifier */ || next.type === 7 /* Punctuator */ && next.value === \"[\" || next.type === 7 /* Punctuator */ && next.value === \"{\" || next.type === 4 /* Keyword */ && next.value === \"let\" || next.type === 4 /* Keyword */ && next.value === \"yield\";\n  }\n  parseLexicalDeclaration(options) {\n    const node = this.createNode();\n    const kind = this.nextToken().value;\n    assert(kind === \"let\" || kind === \"const\", \"Lexical declaration must be either let or const\");\n    const declarations = this.parseBindingList(kind, options);\n    this.consumeSemicolon();\n    return this.finalize(node, new VariableDeclaration(declarations, kind));\n  }\n  /**\n   * This function checks to see if a property is initialized in a Class\n   * e.g.\n   * publicProp = 123;\n   * @returns {Boolean}\n   */\n  isInitializedProperty() {\n    let state = this.scanner.saveState();\n    this.scanner.scanComments();\n    let next = this.scanner.lex();\n    this.scanner.restoreState(state);\n    return this.lookahead.type === 3 && next.value === \"=\";\n  }\n  /**\n   * This function checks to see if a property is declared in a Class\n   * e.g.\n   * publicProp;\n   * @returns {Boolean}\n   */\n  isDeclaredProperty() {\n    let state = this.scanner.saveState();\n    this.scanner.scanComments();\n    let next = this.scanner.lex();\n    this.scanner.restoreState(state);\n    return this.lookahead.type === 3 && next.value === \";\" || this.lookahead.type === 3 && next.lineNumber !== this.startMarker.line;\n  }\n  // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n  parseBindingRestElement(params, kind) {\n    const node = this.createNode();\n    this.expect(\"...\");\n    const arg = this.parsePattern(params, kind);\n    return this.finalize(node, new RestElement(arg));\n  }\n  parseArrayPattern(params, kind) {\n    const node = this.createNode();\n    this.expect(\"[\");\n    const elements = [];\n    while (!this.match(\"]\")) {\n      if (this.match(\",\")) {\n        this.nextToken();\n        elements.push(null);\n      } else {\n        if (this.match(\"...\")) {\n          elements.push(this.parseBindingRestElement(params, kind));\n          break;\n        } else {\n          elements.push(this.parsePatternWithDefault(params, kind));\n        }\n        if (!this.match(\"]\")) {\n          this.expect(\",\");\n        }\n      }\n    }\n    this.expect(\"]\");\n    return this.finalize(node, new ArrayPattern(elements));\n  }\n  parsePropertyPattern(params, kind) {\n    const node = this.createNode();\n    let computed = false;\n    let shorthand = false;\n    const method = false;\n    let key;\n    let value;\n    if (this.lookahead.type === 3 /* Identifier */) {\n      const keyToken = this.lookahead;\n      key = this.parseVariableIdentifier();\n      const init = this.finalize(node, new Identifier(keyToken.value));\n      if (this.match(\"=\")) {\n        params.push(keyToken);\n        shorthand = true;\n        this.nextToken();\n        const expr = this.parseAssignmentExpression();\n        value = this.finalize(this.startNode(keyToken), new AssignmentPattern(init, expr));\n      } else if (!this.match(\":\")) {\n        params.push(keyToken);\n        shorthand = true;\n        value = init;\n      } else {\n        this.expect(\":\");\n        value = this.parsePatternWithDefault(params, kind);\n      }\n    } else {\n      computed = this.match(\"[\");\n      key = this.parseObjectPropertyKey();\n      this.expect(\":\");\n      value = this.parsePatternWithDefault(params, kind);\n    }\n    return this.finalize(node, new Property(\"init\", key, computed, value, method, shorthand));\n  }\n  parseRestProperty(params) {\n    const node = this.createNode();\n    this.expect(\"...\");\n    const arg = this.parsePattern(params);\n    if (this.match(\"=\")) {\n      this.throwError(Messages.DefaultRestProperty);\n    }\n    if (!this.match(\"}\")) {\n      this.throwError(Messages.PropertyAfterRestProperty);\n    }\n    return this.finalize(node, new RestElement(arg));\n  }\n  parseObjectPattern(params, kind) {\n    const node = this.createNode();\n    const properties = [];\n    this.expect(\"{\");\n    while (!this.match(\"}\")) {\n      properties.push(this.match(\"...\") ? this.parseRestProperty(params) : this.parsePropertyPattern(params, kind));\n      if (!this.match(\"}\")) {\n        this.expect(\",\");\n      }\n    }\n    this.expect(\"}\");\n    return this.finalize(node, new ObjectPattern(properties));\n  }\n  parsePattern(params, kind) {\n    let pattern;\n    if (this.match(\"[\")) {\n      pattern = this.parseArrayPattern(params, kind);\n    } else if (this.match(\"{\")) {\n      pattern = this.parseObjectPattern(params, kind);\n    } else {\n      if (this.matchKeyword(\"let\") && (kind === \"const\" || kind === \"let\")) {\n        this.tolerateUnexpectedToken(this.lookahead, Messages.LetInLexicalBinding);\n      }\n      params.push(this.lookahead);\n      pattern = this.parseVariableIdentifier(kind);\n    }\n    return pattern;\n  }\n  parsePatternWithDefault(params, kind) {\n    const startToken = this.lookahead;\n    let pattern = this.parsePattern(params, kind);\n    if (this.match(\"=\")) {\n      this.nextToken();\n      const previousAllowYield = this.context.allowYield;\n      this.context.allowYield = true;\n      const right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n      this.context.allowYield = previousAllowYield;\n      pattern = this.finalize(this.startNode(startToken), new AssignmentPattern(pattern, right));\n    }\n    return pattern;\n  }\n  // https://tc39.github.io/ecma262/#sec-variable-statement\n  parseVariableIdentifier(kind) {\n    const node = this.createNode();\n    const token = this.nextToken();\n    if (token.type === 4 /* Keyword */ && token.value === \"yield\") {\n      if (this.context.strict) {\n        this.tolerateUnexpectedToken(token, Messages.StrictReservedWord);\n      } else if (!this.context.allowYield) {\n        this.throwUnexpectedToken(token);\n      }\n    } else if (token.type !== 3 /* Identifier */) {\n      if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\n        this.tolerateUnexpectedToken(token, Messages.StrictReservedWord);\n      } else {\n        if (this.context.strict || token.value !== \"let\" || kind !== \"var\") {\n          this.throwUnexpectedToken(token);\n        }\n      }\n    } else if ((this.context.isModule || this.context.isAsync) && token.type === 3 /* Identifier */ && token.value === \"await\") {\n      this.tolerateUnexpectedToken(token);\n    }\n    return this.finalize(node, new Identifier(token.value));\n  }\n  parseVariableDeclaration(options) {\n    const node = this.createNode();\n    const params = [];\n    const id = this.parsePattern(params, \"var\");\n    if (this.context.strict && id.type === \"Identifier\" /* Identifier */) {\n      if (this.scanner.isRestrictedWord(id.name)) {\n        this.tolerateError(Messages.StrictVarName);\n      }\n    }\n    let init = null;\n    if (this.match(\"=\")) {\n      this.nextToken();\n      init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n    } else if (id.type !== \"Identifier\" /* Identifier */ && !options.inFor) {\n      this.expect(\"=\");\n    }\n    return this.finalize(node, new VariableDeclarator(id, init));\n  }\n  parseVariableDeclarationList(options) {\n    const opt = { inFor: options.inFor };\n    const list = [];\n    list.push(this.parseVariableDeclaration(opt));\n    while (this.match(\",\")) {\n      this.nextToken();\n      list.push(this.parseVariableDeclaration(opt));\n    }\n    return list;\n  }\n  parseVariableStatement() {\n    const node = this.createNode();\n    this.expectKeyword(\"var\");\n    const declarations = this.parseVariableDeclarationList({ inFor: false });\n    this.consumeSemicolon();\n    return this.finalize(node, new VariableDeclaration(declarations, \"var\"));\n  }\n  // https://tc39.github.io/ecma262/#sec-empty-statement\n  parseEmptyStatement() {\n    const node = this.createNode();\n    this.expect(\";\");\n    return this.finalize(node, new EmptyStatement());\n  }\n  // https://tc39.github.io/ecma262/#sec-expression-statement\n  parseExpressionStatement() {\n    const node = this.createNode();\n    const expr = this.parseExpression();\n    this.consumeSemicolon();\n    return this.finalize(node, new ExpressionStatement(expr));\n  }\n  // https://tc39.github.io/ecma262/#sec-if-statement\n  parseIfClause() {\n    if (this.context.strict && this.matchKeyword(\"function\")) {\n      this.tolerateError(Messages.StrictFunction);\n    }\n    return this.parseStatement();\n  }\n  parseIfStatement() {\n    const node = this.createNode();\n    let consequent;\n    let alternate = null;\n    this.expectKeyword(\"if\");\n    this.expect(\"(\");\n    const test = this.parseExpression();\n    if (!this.match(\")\") && this.config.tolerant) {\n      this.tolerateUnexpectedToken(this.nextToken());\n      consequent = this.finalize(this.createNode(), new EmptyStatement());\n    } else {\n      this.expect(\")\");\n      consequent = this.parseIfClause();\n      if (this.matchKeyword(\"else\")) {\n        this.nextToken();\n        alternate = this.parseIfClause();\n      }\n    }\n    return this.finalize(node, new IfStatement(test, consequent, alternate));\n  }\n  // https://tc39.github.io/ecma262/#sec-do-while-statement\n  parseDoWhileStatement() {\n    const node = this.createNode();\n    this.expectKeyword(\"do\");\n    this.tolerateInvalidLoopStatement();\n    const previousInIteration = this.context.inIteration;\n    this.context.inIteration = true;\n    const body = this.parseStatement();\n    this.context.inIteration = previousInIteration;\n    this.expectKeyword(\"while\");\n    this.expect(\"(\");\n    const test = this.parseExpression();\n    if (!this.match(\")\") && this.config.tolerant) {\n      this.tolerateUnexpectedToken(this.nextToken());\n    } else {\n      this.expect(\")\");\n      if (this.match(\";\")) {\n        this.nextToken();\n      }\n    }\n    return this.finalize(node, new DoWhileStatement(body, test));\n  }\n  // https://tc39.github.io/ecma262/#sec-while-statement\n  parseWhileStatement() {\n    const node = this.createNode();\n    let body;\n    this.expectKeyword(\"while\");\n    this.expect(\"(\");\n    const test = this.parseExpression();\n    if (!this.match(\")\") && this.config.tolerant) {\n      this.tolerateUnexpectedToken(this.nextToken());\n      body = this.finalize(this.createNode(), new EmptyStatement());\n    } else {\n      this.expect(\")\");\n      const previousInIteration = this.context.inIteration;\n      this.context.inIteration = true;\n      body = this.parseStatement();\n      this.context.inIteration = previousInIteration;\n    }\n    return this.finalize(node, new WhileStatement(test, body));\n  }\n  // https://tc39.github.io/ecma262/#sec-for-statement\n  // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n  parseForStatement() {\n    let init = null;\n    let test = null;\n    let update = null;\n    let forIn = true;\n    let left, right;\n    let _await = false;\n    const node = this.createNode();\n    this.expectKeyword(\"for\");\n    if (this.matchContextualKeyword(\"await\")) {\n      if (!this.context.isAsync) {\n        this.tolerateUnexpectedToken(this.lookahead);\n      }\n      _await = true;\n      this.nextToken();\n    }\n    this.expect(\"(\");\n    if (this.match(\";\")) {\n      this.nextToken();\n    } else {\n      if (this.matchKeyword(\"var\")) {\n        init = this.createNode();\n        this.nextToken();\n        const previousAllowIn = this.context.allowIn;\n        this.context.allowIn = false;\n        const declarations = this.parseVariableDeclarationList({ inFor: true });\n        this.context.allowIn = previousAllowIn;\n        if (!_await && declarations.length === 1 && this.matchKeyword(\"in\")) {\n          const decl = declarations[0];\n          if (decl.init && (decl.id.type === \"ArrayPattern\" /* ArrayPattern */ || decl.id.type === \"ObjectPattern\" /* ObjectPattern */ || this.context.strict)) {\n            this.tolerateError(Messages.ForInOfLoopInitializer, \"for-in\");\n          }\n          init = this.finalize(init, new VariableDeclaration(declarations, \"var\"));\n          this.nextToken();\n          left = init;\n          right = this.parseExpression();\n          init = null;\n        } else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword(\"of\")) {\n          init = this.finalize(init, new VariableDeclaration(declarations, \"var\"));\n          this.nextToken();\n          left = init;\n          right = this.parseAssignmentExpression();\n          init = null;\n          forIn = false;\n        } else {\n          init = this.finalize(init, new VariableDeclaration(declarations, \"var\"));\n          this.expect(\";\");\n        }\n      } else if (this.matchKeyword(\"const\") || this.matchKeyword(\"let\")) {\n        init = this.createNode();\n        const kind = this.nextToken().value;\n        if (!this.context.strict && this.lookahead.value === \"in\") {\n          init = this.finalize(init, new Identifier(kind));\n          this.nextToken();\n          left = init;\n          right = this.parseExpression();\n          init = null;\n        } else {\n          const previousAllowIn = this.context.allowIn;\n          this.context.allowIn = false;\n          const declarations = this.parseBindingList(kind, { inFor: true });\n          this.context.allowIn = previousAllowIn;\n          if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword(\"in\")) {\n            init = this.finalize(init, new VariableDeclaration(declarations, kind));\n            this.nextToken();\n            left = init;\n            right = this.parseExpression();\n            init = null;\n          } else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword(\"of\")) {\n            init = this.finalize(init, new VariableDeclaration(declarations, kind));\n            this.nextToken();\n            left = init;\n            right = this.parseAssignmentExpression();\n            init = null;\n            forIn = false;\n          } else {\n            this.consumeSemicolon();\n            init = this.finalize(init, new VariableDeclaration(declarations, kind));\n          }\n        }\n      } else {\n        const initStartToken = this.lookahead;\n        const previousIsBindingElement = this.context.isBindingElement;\n        const previousIsAssignmentTarget = this.context.isAssignmentTarget;\n        const previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n        const previousAllowIn = this.context.allowIn;\n        this.context.allowIn = false;\n        init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n        this.context.allowIn = previousAllowIn;\n        if (this.matchKeyword(\"in\")) {\n          if (!this.context.isAssignmentTarget || init.type === \"AssignmentExpression\" /* AssignmentExpression */) {\n            this.tolerateError(Messages.InvalidLHSInForIn);\n          }\n          this.nextToken();\n          this.reinterpretExpressionAsPattern(init);\n          left = init;\n          right = this.parseExpression();\n          init = null;\n        } else if (this.matchContextualKeyword(\"of\")) {\n          if (!this.context.isAssignmentTarget || init.type === \"AssignmentExpression\" /* AssignmentExpression */) {\n            this.tolerateError(Messages.InvalidLHSInForLoop);\n          }\n          this.nextToken();\n          this.reinterpretExpressionAsPattern(init);\n          left = init;\n          right = this.parseAssignmentExpression();\n          init = null;\n          forIn = false;\n        } else {\n          this.context.isBindingElement = previousIsBindingElement;\n          this.context.isAssignmentTarget = previousIsAssignmentTarget;\n          this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n          if (this.match(\",\")) {\n            const initSeq = [init];\n            while (this.match(\",\")) {\n              this.nextToken();\n              initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n            }\n            init = this.finalize(this.startNode(initStartToken), new SequenceExpression(initSeq));\n          }\n          this.expect(\";\");\n        }\n      }\n    }\n    if (typeof left === \"undefined\") {\n      if (!this.match(\";\")) {\n        test = this.isolateCoverGrammar(this.parseExpression);\n      }\n      this.expect(\";\");\n      if (!this.match(\")\")) {\n        update = this.isolateCoverGrammar(this.parseExpression);\n      }\n    }\n    let body;\n    if (!this.match(\")\") && this.config.tolerant) {\n      this.tolerateUnexpectedToken(this.nextToken());\n      body = this.finalize(this.createNode(), new EmptyStatement());\n    } else {\n      this.expect(\")\");\n      this.tolerateInvalidLoopStatement();\n      const previousInIteration = this.context.inIteration;\n      this.context.inIteration = true;\n      body = this.isolateCoverGrammar(this.parseStatement);\n      this.context.inIteration = previousInIteration;\n    }\n    return typeof left === \"undefined\" ? this.finalize(node, new ForStatement(init, test, update, body)) : forIn ? this.finalize(node, new ForInStatement(left, right, body)) : this.finalize(node, new ForOfStatement(left, right, body, _await));\n  }\n  // https://tc39.github.io/ecma262/#sec-continue-statement\n  parseContinueStatement() {\n    const node = this.createNode();\n    this.expectKeyword(\"continue\");\n    let label = null;\n    if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n      const id = this.parseVariableIdentifier();\n      label = id;\n      const key = \"$\" + id.name;\n      if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n        this.throwError(Messages.UnknownLabel, id.name);\n      }\n    }\n    this.consumeSemicolon();\n    if (label === null && !this.context.inIteration) {\n      this.throwError(Messages.IllegalContinue);\n    }\n    return this.finalize(node, new ContinueStatement(label));\n  }\n  // https://tc39.github.io/ecma262/#sec-break-statement\n  parseBreakStatement() {\n    const node = this.createNode();\n    this.expectKeyword(\"break\");\n    let label = null;\n    if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n      const id = this.parseVariableIdentifier();\n      const key = \"$\" + id.name;\n      if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n        this.throwError(Messages.UnknownLabel, id.name);\n      }\n      label = id;\n    }\n    this.consumeSemicolon();\n    if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n      this.throwError(Messages.IllegalBreak);\n    }\n    return this.finalize(node, new BreakStatement(label));\n  }\n  // https://tc39.github.io/ecma262/#sec-return-statement\n  parseReturnStatement() {\n    if (!this.context.inFunctionBody) {\n      this.tolerateError(Messages.IllegalReturn);\n    }\n    const node = this.createNode();\n    this.expectKeyword(\"return\");\n    const hasArgument = !this.match(\";\") && !this.match(\"}\") && !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */ || this.lookahead.type === 8 /* StringLiteral */ || this.lookahead.type === 10 /* Template */;\n    const argument = hasArgument ? this.parseExpression() : null;\n    this.consumeSemicolon();\n    return this.finalize(node, new ReturnStatement(argument));\n  }\n  // https://tc39.github.io/ecma262/#sec-with-statement\n  parseWithStatement() {\n    if (this.context.strict) {\n      this.tolerateError(Messages.StrictModeWith);\n    }\n    const node = this.createNode();\n    let body;\n    this.expectKeyword(\"with\");\n    this.expect(\"(\");\n    const object = this.parseExpression();\n    if (!this.match(\")\") && this.config.tolerant) {\n      this.tolerateUnexpectedToken(this.nextToken());\n      body = this.finalize(this.createNode(), new EmptyStatement());\n    } else {\n      this.expect(\")\");\n      body = this.parseStatement();\n    }\n    return this.finalize(node, new WithStatement(object, body));\n  }\n  // https://tc39.github.io/ecma262/#sec-switch-statement\n  parseSwitchCase() {\n    const node = this.createNode();\n    let test;\n    if (this.matchKeyword(\"default\")) {\n      this.nextToken();\n      test = null;\n    } else {\n      this.expectKeyword(\"case\");\n      test = this.parseExpression();\n    }\n    this.expect(\":\");\n    const consequent = [];\n    while (true) {\n      if (this.match(\"}\") || this.matchKeyword(\"default\") || this.matchKeyword(\"case\")) {\n        break;\n      }\n      consequent.push(this.parseStatementListItem());\n    }\n    return this.finalize(node, new SwitchCase(test, consequent));\n  }\n  parseSwitchStatement() {\n    const node = this.createNode();\n    this.expectKeyword(\"switch\");\n    this.expect(\"(\");\n    const discriminant = this.parseExpression();\n    this.expect(\")\");\n    const previousInSwitch = this.context.inSwitch;\n    this.context.inSwitch = true;\n    const cases = [];\n    let defaultFound = false;\n    this.expect(\"{\");\n    while (true) {\n      if (this.match(\"}\")) {\n        break;\n      }\n      const clause = this.parseSwitchCase();\n      if (clause.test === null) {\n        if (defaultFound) {\n          this.throwError(Messages.MultipleDefaultsInSwitch);\n        }\n        defaultFound = true;\n      }\n      cases.push(clause);\n    }\n    this.expect(\"}\");\n    this.context.inSwitch = previousInSwitch;\n    return this.finalize(node, new SwitchStatement(discriminant, cases));\n  }\n  // https://tc39.github.io/ecma262/#sec-labelled-statements\n  parseLabelledStatement() {\n    const node = this.createNode();\n    const expr = this.parseExpression();\n    let statement;\n    if (expr.type === \"Identifier\" /* Identifier */ && this.match(\":\")) {\n      this.nextToken();\n      const id = expr;\n      const key = \"$\" + id.name;\n      if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n        this.throwError(Messages.Redeclaration, \"Label\", id.name);\n      }\n      this.context.labelSet[key] = true;\n      let body;\n      if (this.matchKeyword(\"class\")) {\n        this.tolerateUnexpectedToken(this.lookahead);\n        body = this.parseClassDeclaration();\n      } else if (this.matchKeyword(\"function\")) {\n        const token = this.lookahead;\n        const declaration = this.parseFunctionDeclaration();\n        if (this.context.strict) {\n          this.tolerateUnexpectedToken(token, Messages.StrictFunction);\n        } else if (declaration.generator) {\n          this.tolerateUnexpectedToken(token, Messages.GeneratorInLegacyContext);\n        }\n        body = declaration;\n      } else {\n        body = this.parseStatement();\n      }\n      delete this.context.labelSet[key];\n      statement = new LabeledStatement(id, body);\n    } else {\n      this.consumeSemicolon();\n      statement = new ExpressionStatement(expr);\n    }\n    return this.finalize(node, statement);\n  }\n  // https://tc39.github.io/ecma262/#sec-throw-statement\n  parseThrowStatement() {\n    const node = this.createNode();\n    this.expectKeyword(\"throw\");\n    if (this.hasLineTerminator) {\n      this.throwError(Messages.NewlineAfterThrow);\n    }\n    const argument = this.parseExpression();\n    this.consumeSemicolon();\n    return this.finalize(node, new ThrowStatement(argument));\n  }\n  // https://tc39.github.io/ecma262/#sec-try-statement\n  parseCatchClause() {\n    const node = this.createNode();\n    this.expectKeyword(\"catch\");\n    let param = null;\n    if (this.match(\"(\")) {\n      this.expect(\"(\");\n      if (this.match(\")\")) {\n        this.throwUnexpectedToken(this.lookahead);\n      }\n      const params = [];\n      param = this.parsePattern(params);\n      const paramMap = {};\n      for (let i = 0; i < params.length; i++) {\n        const key = \"$\" + params[i].value;\n        if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n          this.tolerateError(Messages.DuplicateBinding, params[i].value);\n        }\n        paramMap[key] = true;\n      }\n      if (this.context.strict && param.type === \"Identifier\" /* Identifier */) {\n        if (this.scanner.isRestrictedWord(param.name)) {\n          this.tolerateError(Messages.StrictCatchVariable);\n        }\n      }\n      this.expect(\")\");\n    }\n    const body = this.parseBlock();\n    return this.finalize(node, new CatchClause(param, body));\n  }\n  parseFinallyClause() {\n    this.expectKeyword(\"finally\");\n    return this.parseBlock();\n  }\n  parseTryStatement() {\n    const node = this.createNode();\n    this.expectKeyword(\"try\");\n    const block = this.parseBlock();\n    const handler = this.matchKeyword(\"catch\") ? this.parseCatchClause() : null;\n    const finalizer = this.matchKeyword(\"finally\") ? this.parseFinallyClause() : null;\n    if (!handler && !finalizer) {\n      this.throwError(Messages.NoCatchOrFinally);\n    }\n    return this.finalize(node, new TryStatement(block, handler, finalizer));\n  }\n  // https://tc39.github.io/ecma262/#sec-debugger-statement\n  parseDebuggerStatement() {\n    const node = this.createNode();\n    this.expectKeyword(\"debugger\");\n    this.consumeSemicolon();\n    return this.finalize(node, new DebuggerStatement());\n  }\n  // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n  parseStatement() {\n    let statement;\n    switch (this.lookahead.type) {\n      case 1 /* BooleanLiteral */:\n      case 5 /* NullLiteral */:\n      case 6 /* NumericLiteral */:\n      case 8 /* StringLiteral */:\n      case 10 /* Template */:\n      case 9 /* RegularExpression */:\n        statement = this.parseExpressionStatement();\n        break;\n      case 7 /* Punctuator */:\n        const value = this.lookahead.value;\n        if (value === \"{\") {\n          statement = this.parseBlock();\n        } else if (value === \"(\") {\n          statement = this.parseExpressionStatement();\n        } else if (value === \";\") {\n          statement = this.parseEmptyStatement();\n        } else {\n          statement = this.parseExpressionStatement();\n        }\n        break;\n      case 3 /* Identifier */:\n        statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n        break;\n      case 4 /* Keyword */:\n        switch (this.lookahead.value) {\n          case \"break\":\n            statement = this.parseBreakStatement();\n            break;\n          case \"continue\":\n            statement = this.parseContinueStatement();\n            break;\n          case \"debugger\":\n            statement = this.parseDebuggerStatement();\n            break;\n          case \"do\":\n            statement = this.parseDoWhileStatement();\n            break;\n          case \"for\":\n            statement = this.parseForStatement();\n            break;\n          case \"function\":\n            statement = this.parseFunctionDeclaration();\n            break;\n          case \"if\":\n            statement = this.parseIfStatement();\n            break;\n          case \"return\":\n            statement = this.parseReturnStatement();\n            break;\n          case \"switch\":\n            statement = this.parseSwitchStatement();\n            break;\n          case \"throw\":\n            statement = this.parseThrowStatement();\n            break;\n          case \"try\":\n            statement = this.parseTryStatement();\n            break;\n          case \"var\":\n            statement = this.parseVariableStatement();\n            break;\n          case \"while\":\n            statement = this.parseWhileStatement();\n            break;\n          case \"with\":\n            statement = this.parseWithStatement();\n            break;\n          default:\n            statement = this.parseExpressionStatement();\n            break;\n        }\n        break;\n      default:\n        statement = this.throwUnexpectedToken(this.lookahead);\n    }\n    return statement;\n  }\n  // https://tc39.github.io/ecma262/#sec-function-definitions\n  parseFunctionSourceElements() {\n    const node = this.createNode();\n    this.expect(\"{\");\n    const body = this.parseDirectivePrologues();\n    const previousLabelSet = this.context.labelSet;\n    const previousInIteration = this.context.inIteration;\n    const previousInSwitch = this.context.inSwitch;\n    const previousInFunctionBody = this.context.inFunctionBody;\n    this.context.labelSet = {};\n    this.context.inIteration = false;\n    this.context.inSwitch = false;\n    this.context.inFunctionBody = true;\n    while (this.lookahead.type !== 2 /* EOF */) {\n      if (this.match(\"}\")) {\n        break;\n      }\n      body.push(this.parseStatementListItem());\n    }\n    this.expect(\"}\");\n    this.context.labelSet = previousLabelSet;\n    this.context.inIteration = previousInIteration;\n    this.context.inSwitch = previousInSwitch;\n    this.context.inFunctionBody = previousInFunctionBody;\n    return this.finalize(node, new BlockStatement(body));\n  }\n  validateParam(options, param, name) {\n    const key = \"$\" + name;\n    if (this.context.strict) {\n      if (this.scanner.isRestrictedWord(name)) {\n        options.stricted = param;\n        options.message = Messages.StrictParamName;\n      }\n      if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n        options.stricted = param;\n        options.hasDuplicateParameterNames = true;\n      }\n    } else if (!options.firstRestricted) {\n      if (this.scanner.isRestrictedWord(name)) {\n        options.firstRestricted = param;\n        options.message = Messages.StrictParamName;\n      } else if (this.scanner.isStrictModeReservedWord(name)) {\n        options.firstRestricted = param;\n        options.message = Messages.StrictReservedWord;\n      } else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n        options.stricted = param;\n        options.hasDuplicateParameterNames = true;\n      }\n    }\n    if (typeof Object.defineProperty === \"function\") {\n      Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\n    } else {\n      options.paramSet[key] = true;\n    }\n  }\n  parseRestElement(params) {\n    const node = this.createNode();\n    this.expect(\"...\");\n    const arg = this.parsePattern(params);\n    if (this.match(\"=\")) {\n      this.throwError(Messages.DefaultRestParameter);\n    }\n    if (!this.match(\")\")) {\n      this.throwError(Messages.ParameterAfterRestParameter);\n    }\n    return this.finalize(node, new RestElement(arg));\n  }\n  parseFormalParameter(options) {\n    const params = [];\n    const param = this.match(\"...\") ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n    for (let i = 0; i < params.length; i++) {\n      this.validateParam(options, params[i], params[i].value);\n    }\n    options.simple = options.simple && param instanceof Identifier;\n    options.params.push(param);\n  }\n  parseFormalParameters(firstRestricted) {\n    const options = {\n      simple: true,\n      hasDuplicateParameterNames: false,\n      params: [],\n      firstRestricted\n    };\n    this.expect(\"(\");\n    if (!this.match(\")\")) {\n      options.paramSet = {};\n      while (this.lookahead.type !== 2 /* EOF */) {\n        this.parseFormalParameter(options);\n        if (this.match(\")\")) {\n          break;\n        }\n        this.expect(\",\");\n        if (this.match(\")\")) {\n          break;\n        }\n      }\n    }\n    this.expect(\")\");\n    if (options.hasDuplicateParameterNames) {\n      if (this.context.strict || this.context.isAsync || !options.simple) {\n        this.throwError(Messages.DuplicateParameter);\n      }\n    }\n    return {\n      simple: options.simple,\n      params: options.params,\n      stricted: options.stricted,\n      firstRestricted: options.firstRestricted,\n      message: options.message\n    };\n  }\n  matchAsyncFunction() {\n    let match = this.matchContextualKeyword(\"async\");\n    if (match) {\n      const state = this.scanner.saveState();\n      this.scanner.scanComments();\n      const next = this.scanner.lex();\n      this.scanner.restoreState(state);\n      match = state.lineNumber === next.lineNumber && next.type === 4 /* Keyword */ && next.value === \"function\";\n    }\n    return match;\n  }\n  parseFunctionDeclaration(identifierIsOptional) {\n    const node = this.createNode();\n    const isAsync = this.matchContextualKeyword(\"async\");\n    if (isAsync) {\n      if (this.context.inIteration) {\n        this.tolerateError(Messages.AsyncFunctionInSingleStatementContext);\n      }\n      this.nextToken();\n    }\n    this.expectKeyword(\"function\");\n    const isGenerator = this.match(\"*\");\n    if (isGenerator) {\n      this.nextToken();\n    }\n    let message;\n    let id = null;\n    let firstRestricted = null;\n    if (!identifierIsOptional || !this.match(\"(\")) {\n      const token = this.lookahead;\n      id = this.parseVariableIdentifier();\n      if (this.context.strict) {\n        if (this.scanner.isRestrictedWord(token.value)) {\n          this.tolerateUnexpectedToken(token, Messages.StrictFunctionName);\n        }\n      } else {\n        if (this.scanner.isRestrictedWord(token.value)) {\n          firstRestricted = token;\n          message = Messages.StrictFunctionName;\n        } else if (this.scanner.isStrictModeReservedWord(token.value)) {\n          firstRestricted = token;\n          message = Messages.StrictReservedWord;\n        }\n      }\n    }\n    const previousIsAsync = this.context.isAsync;\n    const previousAllowYield = this.context.allowYield;\n    this.context.isAsync = isAsync;\n    this.context.allowYield = !isGenerator;\n    const formalParameters = this.parseFormalParameters(firstRestricted);\n    const params = formalParameters.params;\n    const stricted = formalParameters.stricted;\n    firstRestricted = formalParameters.firstRestricted;\n    if (formalParameters.message) {\n      message = formalParameters.message;\n    }\n    const previousStrict = this.context.strict;\n    const previousAllowStrictDirective = this.context.allowStrictDirective;\n    this.context.allowStrictDirective = formalParameters.simple;\n    const body = this.parseFunctionSourceElements();\n    if (this.context.strict && firstRestricted) {\n      this.throwUnexpectedToken(firstRestricted, message);\n    }\n    if (this.context.strict && stricted) {\n      this.tolerateUnexpectedToken(stricted, message);\n    }\n    this.context.strict = previousStrict;\n    this.context.allowStrictDirective = previousAllowStrictDirective;\n    this.context.isAsync = previousIsAsync;\n    this.context.allowYield = previousAllowYield;\n    return isAsync ? this.finalize(node, new AsyncFunctionDeclaration(id, params, body, isGenerator)) : this.finalize(node, new FunctionDeclaration(id, params, body, isGenerator));\n  }\n  parseFunctionExpression() {\n    const node = this.createNode();\n    const isAsync = this.matchContextualKeyword(\"async\");\n    if (isAsync) {\n      this.nextToken();\n    }\n    this.expectKeyword(\"function\");\n    const isGenerator = this.match(\"*\");\n    if (isGenerator) {\n      this.nextToken();\n    }\n    let message;\n    let id = null;\n    let firstRestricted;\n    const previousIsAsync = this.context.isAsync;\n    const previousAllowYield = this.context.allowYield;\n    this.context.isAsync = isAsync;\n    this.context.allowYield = !isGenerator;\n    if (!this.match(\"(\")) {\n      const token = this.lookahead;\n      id = !this.context.strict && !isGenerator && this.matchKeyword(\"yield\") ? this.parseIdentifierName() : this.parseVariableIdentifier();\n      if (this.context.strict) {\n        if (this.scanner.isRestrictedWord(token.value)) {\n          this.tolerateUnexpectedToken(token, Messages.StrictFunctionName);\n        }\n      } else {\n        if (this.scanner.isRestrictedWord(token.value)) {\n          firstRestricted = token;\n          message = Messages.StrictFunctionName;\n        } else if (this.scanner.isStrictModeReservedWord(token.value)) {\n          firstRestricted = token;\n          message = Messages.StrictReservedWord;\n        }\n      }\n    }\n    const formalParameters = this.parseFormalParameters(firstRestricted);\n    const params = formalParameters.params;\n    const stricted = formalParameters.stricted;\n    firstRestricted = formalParameters.firstRestricted;\n    if (formalParameters.message) {\n      message = formalParameters.message;\n    }\n    const previousStrict = this.context.strict;\n    const previousAllowStrictDirective = this.context.allowStrictDirective;\n    this.context.allowStrictDirective = formalParameters.simple;\n    const body = this.parseFunctionSourceElements();\n    if (this.context.strict && firstRestricted) {\n      this.throwUnexpectedToken(firstRestricted, message);\n    }\n    if (this.context.strict && stricted) {\n      this.tolerateUnexpectedToken(stricted, message);\n    }\n    this.context.strict = previousStrict;\n    this.context.allowStrictDirective = previousAllowStrictDirective;\n    this.context.isAsync = previousIsAsync;\n    this.context.allowYield = previousAllowYield;\n    return this.finalize(node, new FunctionExpression(id, params, body, isGenerator, isAsync));\n  }\n  // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n  parseDirective() {\n    const token = this.lookahead;\n    const node = this.createNode();\n    const expr = this.parseExpression();\n    const directive = expr.type === \"Literal\" /* Literal */ ? this.getTokenRaw(token).slice(1, -1) : null;\n    this.consumeSemicolon();\n    return this.finalize(node, directive ? new Directive(expr, directive) : new ExpressionStatement(expr));\n  }\n  parseDirectivePrologues() {\n    let firstRestricted = null;\n    const body = [];\n    while (true) {\n      const token = this.lookahead;\n      if (token.type !== 8 /* StringLiteral */) {\n        break;\n      }\n      const statement = this.parseDirective();\n      body.push(statement);\n      const directive = statement.directive;\n      if (typeof directive !== \"string\") {\n        break;\n      }\n      if (directive === \"use strict\") {\n        this.context.strict = true;\n        if (firstRestricted) {\n          this.tolerateUnexpectedToken(firstRestricted, Messages.StrictOctalLiteral);\n        }\n        if (!this.context.allowStrictDirective) {\n          this.tolerateUnexpectedToken(token, Messages.IllegalLanguageModeDirective);\n        }\n      } else {\n        if (!firstRestricted && token.octal) {\n          firstRestricted = token;\n        }\n      }\n    }\n    return body;\n  }\n  // https://tc39.github.io/ecma262/#sec-method-definitions\n  qualifiedPropertyName(token) {\n    switch (token.type) {\n      case 3 /* Identifier */:\n      case 8 /* StringLiteral */:\n      case 1 /* BooleanLiteral */:\n      case 5 /* NullLiteral */:\n      case 6 /* NumericLiteral */:\n      case 4 /* Keyword */:\n        return true;\n      case 7 /* Punctuator */:\n        return token.value === \"[\" || token.value === \"#\";\n      default:\n        break;\n    }\n    return false;\n  }\n  parseGetterMethod() {\n    const node = this.createNode();\n    const isGenerator = false;\n    const previousAllowYield = this.context.allowYield;\n    this.context.allowYield = !isGenerator;\n    const formalParameters = this.parseFormalParameters();\n    if (formalParameters.params.length > 0) {\n      this.tolerateError(Messages.BadGetterArity);\n    }\n    const method = this.parsePropertyMethod(formalParameters);\n    this.context.allowYield = previousAllowYield;\n    return this.finalize(node, new FunctionExpression(null, formalParameters.params, method, isGenerator, false));\n  }\n  parseSetterMethod() {\n    const node = this.createNode();\n    const isGenerator = false;\n    const previousAllowYield = this.context.allowYield;\n    this.context.allowYield = !isGenerator;\n    const formalParameters = this.parseFormalParameters();\n    if (formalParameters.params.length !== 1) {\n      this.tolerateError(Messages.BadSetterArity);\n    } else if (formalParameters.params[0] instanceof RestElement) {\n      this.tolerateError(Messages.BadSetterRestParameter);\n    }\n    const method = this.parsePropertyMethod(formalParameters);\n    this.context.allowYield = previousAllowYield;\n    return this.finalize(node, new FunctionExpression(null, formalParameters.params, method, isGenerator, false));\n  }\n  parseGeneratorMethod(isAsync) {\n    const node = this.createNode();\n    const isGenerator = true;\n    const previousAllowYield = this.context.allowYield;\n    this.context.allowYield = true;\n    const params = this.parseFormalParameters();\n    this.context.allowYield = false;\n    const method = this.parsePropertyMethod(params);\n    this.context.allowYield = previousAllowYield;\n    return this.finalize(node, new FunctionExpression(null, params.params, method, isGenerator, isAsync));\n  }\n  // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n  isStartOfExpression() {\n    let start = true;\n    const value = this.lookahead.value;\n    switch (this.lookahead.type) {\n      case 7 /* Punctuator */:\n        start = value === \"[\" || value === \"(\" || value === \"{\" || value === \"+\" || value === \"-\" || value === \"!\" || value === \"~\" || value === \"++\" || value === \"--\" || value === \"/\" || value === \"/=\";\n        break;\n      case 4 /* Keyword */:\n        start = value === \"class\" || value === \"delete\" || value === \"function\" || value === \"let\" || value === \"new\" || value === \"super\" || value === \"this\" || value === \"typeof\" || value === \"void\" || value === \"yield\";\n        break;\n      default:\n        break;\n    }\n    return start;\n  }\n  parseYieldExpression() {\n    const node = this.createNode();\n    this.expectKeyword(\"yield\");\n    let argument = null;\n    let delegate = false;\n    if (!this.hasLineTerminator) {\n      const previousAllowYield = this.context.allowYield;\n      this.context.allowYield = false;\n      delegate = this.match(\"*\");\n      if (delegate) {\n        this.nextToken();\n        argument = this.parseAssignmentExpression();\n      } else if (this.isStartOfExpression()) {\n        argument = this.parseAssignmentExpression();\n      }\n      this.context.allowYield = previousAllowYield;\n    }\n    return this.finalize(node, new YieldExpression(argument, delegate));\n  }\n  // https://tc39.github.io/ecma262/#sec-class-definitions\n  parseStaticBlock() {\n    const node = this.createNode();\n    this.expect(\"{\");\n    const block = [];\n    while (true) {\n      if (this.match(\"}\")) {\n        break;\n      }\n      block.push(this.parseStatementListItem());\n    }\n    this.expect(\"}\");\n    return this.finalize(node, new StaticBlock(block));\n  }\n  parseDecorator() {\n    const node = this.createNode();\n    this.expect(\"@\");\n    const previousStrict = this.context.strict;\n    const previousAllowYield = this.context.allowYield;\n    const previousIsAsync = this.context.isAsync;\n    this.context.strict = false;\n    this.context.allowYield = true;\n    this.context.isAsync = false;\n    const expression = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n    this.context.strict = previousStrict;\n    this.context.allowYield = previousAllowYield;\n    this.context.isAsync = previousIsAsync;\n    if (this.match(\";\")) {\n      this.throwError(Messages.NoSemicolonAfterDecorator);\n    }\n    return this.finalize(node, new Decorator(expression));\n  }\n  parseDecorators() {\n    let decorators = null;\n    while (this.match(\"@\")) {\n      if (decorators == null)\n        decorators = [];\n      decorators.push(this.parseDecorator());\n    }\n    return decorators;\n  }\n  parseClassElement(hasConstructor) {\n    let token = this.lookahead;\n    const node = this.createNode();\n    const previousInConstructor = this.context.inConstructor;\n    let kind = \"\";\n    let key = null;\n    let value = null;\n    let computed = false;\n    let method = false;\n    let isStatic = false;\n    let isAsync = false;\n    let isGenerator = false;\n    let isPrivate = false;\n    const decorators = this.parseDecorators();\n    if (decorators) {\n      token = this.lookahead;\n    }\n    if (this.match(\"*\")) {\n      this.nextToken();\n    } else {\n      computed = this.match(\"[\");\n      if (this.match(\"#\")) {\n        isPrivate = true;\n        this.nextToken();\n        token = this.lookahead;\n      }\n      key = this.parseObjectPropertyKey(isPrivate);\n      const id = key;\n      this.context.inConstructor = token.type === 3 /* Identifier */ && token.value === \"constructor\";\n      if (id.name === \"static\" && (this.qualifiedPropertyName(this.lookahead) || this.match(\"*\"))) {\n        token = this.lookahead;\n        isStatic = true;\n        computed = this.match(\"[\");\n        if (this.match(\"*\")) {\n          this.nextToken();\n          if (this.match(\"#\")) {\n            isPrivate = true;\n            this.nextToken();\n            token = this.lookahead;\n          }\n        } else {\n          if (this.match(\"#\")) {\n            isPrivate = true;\n            this.nextToken();\n            token = this.lookahead;\n          }\n          key = this.parseObjectPropertyKey(isPrivate);\n        }\n      }\n      if (id.name === \"static\" && this.match(\"{\")) {\n        return this.parseStaticBlock();\n      }\n      if (token.type === 3 /* Identifier */ && !this.hasLineTerminator && token.value === \"async\") {\n        const punctuator = this.lookahead.value;\n        if (punctuator !== \":\" && punctuator !== \"(\") {\n          isAsync = true;\n          isGenerator = this.match(\"*\");\n          if (isGenerator) {\n            this.nextToken();\n          }\n          token = this.lookahead;\n          computed = this.match(\"[\");\n          if (this.match(\"*\")) {\n            this.nextToken();\n            if (this.match(\"#\")) {\n              isPrivate = true;\n              this.nextToken();\n            }\n          } else {\n            if (this.match(\"#\")) {\n              isPrivate = true;\n              this.nextToken();\n              token = this.lookahead;\n            }\n            key = this.parseObjectPropertyKey(isPrivate);\n          }\n          if (token.type === 3 /* Identifier */ && token.value === \"constructor\" && !isStatic) {\n            this.tolerateUnexpectedToken(token, Messages.ConstructorIsAsync);\n          }\n        }\n      }\n    }\n    if (token.type === 3 /* Identifier */ && token.value === \"constructor\" && isPrivate) {\n      this.tolerateUnexpectedToken(token, Messages.ConstructorIsPrivate);\n    }\n    const lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n    if (token.type === 3 /* Identifier */ || token.type === 8 /* StringLiteral */) {\n      if (token.value === \"get\" && lookaheadPropertyKey) {\n        kind = \"get\";\n        if (this.match(\"#\")) {\n          isPrivate = true;\n          this.nextToken();\n          token = this.lookahead;\n        }\n        computed = this.match(\"[\");\n        key = this.parseObjectPropertyKey(isPrivate);\n        this.context.allowYield = false;\n        value = this.parseGetterMethod();\n      } else if (token.value === \"set\" && lookaheadPropertyKey) {\n        kind = \"set\";\n        if (this.match(\"#\")) {\n          isPrivate = true;\n          this.nextToken();\n          token = this.lookahead;\n        }\n        computed = this.match(\"[\");\n        key = this.parseObjectPropertyKey(isPrivate);\n        value = this.parseSetterMethod();\n      } else if (!this.match(\"(\")) {\n        kind = \"property\";\n        computed = false;\n        if (this.match(\"=\")) {\n          this.nextToken();\n          value = this.isolateCoverGrammar(this.parseAssignmentExpression);\n        }\n      }\n    } else if (token.type === 7 /* Punctuator */ && token.value === \"*\" && lookaheadPropertyKey) {\n      kind = \"init\";\n      computed = this.match(\"[\");\n      key = this.parseObjectPropertyKey(isPrivate);\n      value = this.parseGeneratorMethod(isAsync);\n      method = true;\n    } else if (token.type === 7 /* Punctuator */ && token.value === \"[\" && !this.match(\"(\")) {\n      kind = \"property\";\n      computed = true;\n      if (this.match(\"=\")) {\n        this.nextToken();\n        value = this.isolateCoverGrammar(this.parseAssignmentExpression);\n      }\n    }\n    if (!kind && key && this.match(\"(\")) {\n      const previousInClassConstructor = this.context.inClassConstructor;\n      this.context.inClassConstructor = token.value === \"constructor\";\n      kind = \"init\";\n      value = isAsync ? this.parsePropertyMethodAsyncFunction(isGenerator) : this.parsePropertyMethodFunction(isGenerator);\n      this.context.inClassConstructor = previousInClassConstructor;\n      method = true;\n    }\n    if (!kind) {\n      this.throwUnexpectedToken(this.lookahead);\n    }\n    if (kind === \"init\") {\n      kind = \"method\";\n    }\n    if (!computed) {\n      if (isStatic && this.isPropertyKey(key, \"prototype\")) {\n        this.throwUnexpectedToken(token, Messages.StaticPrototype);\n      }\n      if (!isStatic && this.isPropertyKey(key, \"constructor\")) {\n        if (kind !== \"method\" || !method || value && value.generator) {\n          this.throwUnexpectedToken(token, Messages.ConstructorSpecialMethod);\n        }\n        if (hasConstructor.value) {\n          this.throwUnexpectedToken(token, Messages.DuplicateConstructor);\n        } else {\n          hasConstructor.value = true;\n        }\n        kind = \"constructor\";\n      }\n    }\n    this.context.inConstructor = previousInConstructor;\n    if (kind === \"property\") {\n      this.consumeSemicolon();\n      return this.finalize(node, new PropertyDefinition(key, computed, value, isStatic, decorators));\n    } else\n      return this.finalize(node, new MethodDefinition(key, computed, value, kind, isStatic, decorators));\n  }\n  parseClassElementList() {\n    const body = [];\n    const hasConstructor = { value: false };\n    this.expect(\"{\");\n    while (!this.match(\"}\")) {\n      if (this.match(\";\")) {\n        this.nextToken();\n      } else {\n        body.push(this.parseClassElement(hasConstructor));\n      }\n    }\n    this.expect(\"}\");\n    return body;\n  }\n  parseClassBody() {\n    const node = this.createNode();\n    const elementList = this.parseClassElementList();\n    return this.finalize(node, new ClassBody(elementList));\n  }\n  parseClassDeclaration(identifierIsOptional) {\n    const node = this.createNode();\n    const previousStrict = this.context.strict;\n    const previousAllowSuper = this.context.allowSuper;\n    this.context.strict = true;\n    this.expectKeyword(\"class\");\n    const id = identifierIsOptional && this.lookahead.type !== 3 /* Identifier */ ? null : this.parseVariableIdentifier();\n    let superClass = null;\n    if (this.matchKeyword(\"extends\")) {\n      this.nextToken();\n      superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n      this.context.allowSuper = true;\n    }\n    const classBody = this.parseClassBody();\n    this.context.allowSuper = previousAllowSuper;\n    this.context.strict = previousStrict;\n    return this.finalize(node, new ClassDeclaration(id, superClass, classBody, this.context.decorators));\n  }\n  parseClassExpression() {\n    const node = this.createNode();\n    const previousStrict = this.context.strict;\n    this.context.strict = true;\n    this.expectKeyword(\"class\");\n    const id = this.lookahead.type === 3 /* Identifier */ ? this.parseVariableIdentifier() : null;\n    let superClass = null;\n    if (this.matchKeyword(\"extends\")) {\n      this.nextToken();\n      superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n      this.context.allowSuper = true;\n    }\n    const classBody = this.parseClassBody();\n    this.context.strict = previousStrict;\n    return this.finalize(node, new ClassExpression(id, superClass, classBody, this.context.decorators));\n  }\n  // https://tc39.github.io/ecma262/#sec-scripts\n  // https://tc39.github.io/ecma262/#sec-modules\n  parseModule() {\n    this.context.strict = true;\n    this.context.isModule = true;\n    this.scanner.isModule = true;\n    const node = this.createNode();\n    const body = this.parseDirectivePrologues();\n    while (this.lookahead.type !== 2 /* EOF */) {\n      body.push(this.parseStatementListItem());\n    }\n    return this.finalize(node, new Module(body));\n  }\n  parseScript() {\n    const node = this.createNode();\n    const body = this.parseDirectivePrologues();\n    while (this.lookahead.type !== 2 /* EOF */) {\n      body.push(this.parseStatementListItem());\n    }\n    return this.finalize(node, new Script(body));\n  }\n  // https://tc39.github.io/ecma262/#sec-imports\n  parseImportAttributes() {\n    if (this.lookahead.value === \"assert\") {\n      this.nextToken();\n      this.expect(\"{\");\n      const attributes = [];\n      while (!this.match(\"}\")) {\n        attributes.push(this.parseImportAttribute());\n        if (!this.match(\"}\")) {\n          this.expectCommaSeparator();\n        }\n      }\n      this.expect(\"}\");\n      return attributes;\n    }\n    return null;\n  }\n  parseImportAttribute() {\n    const node = this.createNode();\n    if (this.lookahead.type !== 3 /* Identifier */) {\n      this.throwUnexpectedToken(this.nextToken());\n    }\n    const key = this.parseIdentifierName();\n    if (!this.match(\":\")) {\n      this.throwUnexpectedToken(this.nextToken());\n    }\n    this.nextToken();\n    const literalToken = this.nextToken();\n    const raw = this.getTokenRaw(literalToken);\n    const value = this.finalize(node, new Literal(literalToken.value, raw));\n    return this.finalize(node, new ImportAttribute(key, value));\n  }\n  parseModuleSpecifier() {\n    const node = this.createNode();\n    if (this.lookahead.type !== 8 /* StringLiteral */) {\n      this.throwError(Messages.InvalidModuleSpecifier);\n    }\n    const token = this.nextToken();\n    const raw = this.getTokenRaw(token);\n    if (!Character.isStringWellFormedUnicode(token.value)) {\n      this.throwError(Messages.InvalidModuleSpecifier);\n    }\n    return this.finalize(node, new Literal(token.value, raw));\n  }\n  // import {<foo as bar>} ...;\n  parseImportSpecifier() {\n    const node = this.createNode();\n    let imported;\n    let local;\n    if (this.lookahead.type === 3 /* Identifier */) {\n      imported = this.parseVariableIdentifier();\n      local = imported;\n      if (this.matchContextualKeyword(\"as\")) {\n        this.nextToken();\n        local = this.parseVariableIdentifier();\n      }\n    } else {\n      imported = this.lookahead.type == 8 /* StringLiteral */ ? this.parseModuleSpecifier() : this.parseIdentifierName();\n      local = imported;\n      if (this.matchContextualKeyword(\"as\")) {\n        this.nextToken();\n        local = this.parseVariableIdentifier();\n      } else {\n        this.throwUnexpectedToken(this.nextToken());\n      }\n    }\n    return this.finalize(node, new ImportSpecifier(local, imported));\n  }\n  // {foo, bar as bas}\n  parseNamedImports() {\n    this.expect(\"{\");\n    const specifiers = [];\n    while (!this.match(\"}\")) {\n      specifiers.push(this.parseImportSpecifier());\n      if (!this.match(\"}\")) {\n        this.expect(\",\");\n      }\n    }\n    this.expect(\"}\");\n    return specifiers;\n  }\n  // import <foo> ...;\n  parseImportDefaultSpecifier() {\n    const node = this.createNode();\n    const local = this.parseIdentifierName();\n    return this.finalize(node, new ImportDefaultSpecifier(local));\n  }\n  // import <* as foo> ...;\n  parseImportNamespaceSpecifier() {\n    const node = this.createNode();\n    this.expect(\"*\");\n    if (!this.matchContextualKeyword(\"as\")) {\n      this.throwError(Messages.NoAsAfterImportNamespace);\n    }\n    if (this.lookahead.escaped) {\n      this.throwError(Messages.NoAsAndFromEscapeSequences);\n    }\n    this.nextToken();\n    const local = this.parseIdentifierName();\n    return this.finalize(node, new ImportNamespaceSpecifier(local));\n  }\n  parseImportDeclaration() {\n    if (this.context.inFunctionBody) {\n      this.throwError(Messages.IllegalImportDeclaration);\n    }\n    const node = this.createNode();\n    this.expectKeyword(\"import\");\n    let src;\n    let specifiers = [];\n    if (this.lookahead.type === 8 /* StringLiteral */) {\n      src = this.parseModuleSpecifier();\n    } else {\n      if (this.match(\"{\")) {\n        specifiers = specifiers.concat(this.parseNamedImports());\n      } else if (this.match(\"*\")) {\n        specifiers.push(this.parseImportNamespaceSpecifier());\n      } else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword(\"default\")) {\n        specifiers.push(this.parseImportDefaultSpecifier());\n        if (this.match(\",\")) {\n          this.nextToken();\n          if (this.match(\"*\")) {\n            specifiers.push(this.parseImportNamespaceSpecifier());\n          } else if (this.match(\"{\")) {\n            specifiers = specifiers.concat(this.parseNamedImports());\n          } else {\n            this.throwUnexpectedToken(this.lookahead);\n          }\n        }\n      } else {\n        this.throwUnexpectedToken(this.nextToken());\n      }\n      if (!this.matchContextualKeyword(\"from\")) {\n        const message = this.lookahead.value ? Messages.UnexpectedToken : Messages.MissingFromClause;\n        this.throwError(message, this.lookahead.value);\n      }\n      this.nextToken();\n      src = this.parseModuleSpecifier();\n    }\n    const attributes = this.parseImportAttributes();\n    this.consumeSemicolon();\n    return this.finalize(node, new ImportDeclaration(specifiers, src, attributes));\n  }\n  // https://tc39.github.io/ecma262/#sec-exports\n  parseExportSpecifier() {\n    const node = this.createNode();\n    const local = this.lookahead.type == 8 /* StringLiteral */ ? this.parseModuleSpecifier() : this.parseIdentifierName();\n    let exported = local;\n    if (this.matchContextualKeyword(\"as\")) {\n      if (this.lookahead.escaped) {\n        this.throwError(Messages.NoAsAndFromEscapeSequences);\n      }\n      this.nextToken();\n      exported = this.lookahead.type == 8 /* StringLiteral */ ? this.parseModuleSpecifier() : this.parseIdentifierName();\n    }\n    return this.finalize(node, new ExportSpecifier(local, exported));\n  }\n  parseExportDeclaration() {\n    if (this.context.inFunctionBody) {\n      this.throwError(Messages.IllegalExportDeclaration);\n    }\n    const node = this.createNode();\n    this.expectKeyword(\"export\");\n    let exportDeclaration;\n    if (this.matchKeyword(\"default\")) {\n      this.nextToken();\n      if (this.matchKeyword(\"function\")) {\n        const declaration = this.parseFunctionDeclaration(true);\n        exportDeclaration = this.finalize(node, new ExportDefaultDeclaration(declaration));\n      } else if (this.matchKeyword(\"class\")) {\n        const declaration = this.parseClassDeclaration(true);\n        exportDeclaration = this.finalize(node, new ExportDefaultDeclaration(declaration));\n      } else if (this.matchContextualKeyword(\"async\")) {\n        const declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n        exportDeclaration = this.finalize(node, new ExportDefaultDeclaration(declaration));\n      } else {\n        if (this.matchContextualKeyword(\"from\")) {\n          this.throwError(Messages.UnexpectedToken, this.lookahead.value);\n        }\n        const declaration = this.match(\"{\") ? this.parseObjectInitializer() : this.match(\"[\") ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n        this.consumeSemicolon();\n        exportDeclaration = this.finalize(node, new ExportDefaultDeclaration(declaration));\n      }\n    } else if (this.match(\"*\")) {\n      this.nextToken();\n      let exported = null;\n      if (this.matchContextualKeyword(\"as\")) {\n        if (this.lookahead.escaped) {\n          this.throwError(Messages.NoAsAndFromEscapeSequences);\n        }\n        this.nextToken();\n        exported = this.lookahead.type == 8 /* StringLiteral */ ? this.parseModuleSpecifier() : this.parseIdentifierName();\n      }\n      if (!this.matchContextualKeyword(\"from\")) {\n        const message = this.lookahead.value ? Messages.UnexpectedToken : Messages.MissingFromClause;\n        this.throwError(message, this.lookahead.value);\n      }\n      if (this.lookahead.escaped) {\n        this.throwError(Messages.NoAsAndFromEscapeSequences);\n      }\n      this.nextToken();\n      const src = this.parseModuleSpecifier();\n      const attributes = this.parseImportAttributes();\n      this.consumeSemicolon();\n      exportDeclaration = this.finalize(node, new ExportAllDeclaration(src, exported, attributes));\n    } else if (this.lookahead.type === 4 /* Keyword */) {\n      let declaration;\n      switch (this.lookahead.value) {\n        case \"let\":\n        case \"const\":\n          declaration = this.parseLexicalDeclaration({ inFor: false });\n          break;\n        case \"var\":\n        case \"class\":\n        case \"function\":\n          declaration = this.parseStatementListItem();\n          break;\n        default:\n          this.throwUnexpectedToken(this.lookahead);\n      }\n      exportDeclaration = this.finalize(node, new ExportNamedDeclaration(declaration, [], null, null));\n    } else if (this.matchAsyncFunction()) {\n      const declaration = this.parseFunctionDeclaration();\n      exportDeclaration = this.finalize(node, new ExportNamedDeclaration(declaration, [], null, null));\n    } else {\n      const specifiers = [];\n      let source = null;\n      let isExportFromIdentifier = false;\n      let attributes = null;\n      this.expect(\"{\");\n      while (!this.match(\"}\")) {\n        isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword(\"default\");\n        specifiers.push(this.parseExportSpecifier());\n        if (!this.match(\"}\")) {\n          this.expect(\",\");\n        }\n      }\n      this.expect(\"}\");\n      if (this.matchContextualKeyword(\"from\")) {\n        if (this.lookahead.escaped) {\n          this.throwError(Messages.NoAsAndFromEscapeSequences);\n        }\n        this.nextToken();\n        source = this.parseModuleSpecifier();\n        attributes = this.parseImportAttributes();\n        this.consumeSemicolon();\n      } else if (isExportFromIdentifier) {\n        const message = this.lookahead.value ? Messages.UnexpectedToken : Messages.MissingFromClause;\n        this.throwError(message, this.lookahead.value);\n      } else {\n        attributes = this.parseImportAttributes();\n        this.consumeSemicolon();\n      }\n      exportDeclaration = this.finalize(node, new ExportNamedDeclaration(null, specifiers, source, attributes));\n    }\n    return exportDeclaration;\n  }\n};\n\n// src/xhtml-entities.ts\nvar XHTMLEntities = {\n  quot: '\"',\n  amp: \"&\",\n  apos: \"'\",\n  gt: \">\",\n  nbsp: \"\\xA0\",\n  iexcl: \"\\xA1\",\n  cent: \"\\xA2\",\n  pound: \"\\xA3\",\n  curren: \"\\xA4\",\n  yen: \"\\xA5\",\n  brvbar: \"\\xA6\",\n  sect: \"\\xA7\",\n  uml: \"\\xA8\",\n  copy: \"\\xA9\",\n  ordf: \"\\xAA\",\n  laquo: \"\\xAB\",\n  not: \"\\xAC\",\n  shy: \"\\xAD\",\n  reg: \"\\xAE\",\n  macr: \"\\xAF\",\n  deg: \"\\xB0\",\n  plusmn: \"\\xB1\",\n  sup2: \"\\xB2\",\n  sup3: \"\\xB3\",\n  acute: \"\\xB4\",\n  micro: \"\\xB5\",\n  para: \"\\xB6\",\n  middot: \"\\xB7\",\n  cedil: \"\\xB8\",\n  sup1: \"\\xB9\",\n  ordm: \"\\xBA\",\n  raquo: \"\\xBB\",\n  frac14: \"\\xBC\",\n  frac12: \"\\xBD\",\n  frac34: \"\\xBE\",\n  iquest: \"\\xBF\",\n  Agrave: \"\\xC0\",\n  Aacute: \"\\xC1\",\n  Acirc: \"\\xC2\",\n  Atilde: \"\\xC3\",\n  Auml: \"\\xC4\",\n  Aring: \"\\xC5\",\n  AElig: \"\\xC6\",\n  Ccedil: \"\\xC7\",\n  Egrave: \"\\xC8\",\n  Eacute: \"\\xC9\",\n  Ecirc: \"\\xCA\",\n  Euml: \"\\xCB\",\n  Igrave: \"\\xCC\",\n  Iacute: \"\\xCD\",\n  Icirc: \"\\xCE\",\n  Iuml: \"\\xCF\",\n  ETH: \"\\xD0\",\n  Ntilde: \"\\xD1\",\n  Ograve: \"\\xD2\",\n  Oacute: \"\\xD3\",\n  Ocirc: \"\\xD4\",\n  Otilde: \"\\xD5\",\n  Ouml: \"\\xD6\",\n  times: \"\\xD7\",\n  Oslash: \"\\xD8\",\n  Ugrave: \"\\xD9\",\n  Uacute: \"\\xDA\",\n  Ucirc: \"\\xDB\",\n  Uuml: \"\\xDC\",\n  Yacute: \"\\xDD\",\n  THORN: \"\\xDE\",\n  szlig: \"\\xDF\",\n  agrave: \"\\xE0\",\n  aacute: \"\\xE1\",\n  acirc: \"\\xE2\",\n  atilde: \"\\xE3\",\n  auml: \"\\xE4\",\n  aring: \"\\xE5\",\n  aelig: \"\\xE6\",\n  ccedil: \"\\xE7\",\n  egrave: \"\\xE8\",\n  eacute: \"\\xE9\",\n  ecirc: \"\\xEA\",\n  euml: \"\\xEB\",\n  igrave: \"\\xEC\",\n  iacute: \"\\xED\",\n  icirc: \"\\xEE\",\n  iuml: \"\\xEF\",\n  eth: \"\\xF0\",\n  ntilde: \"\\xF1\",\n  ograve: \"\\xF2\",\n  oacute: \"\\xF3\",\n  ocirc: \"\\xF4\",\n  otilde: \"\\xF5\",\n  ouml: \"\\xF6\",\n  divide: \"\\xF7\",\n  oslash: \"\\xF8\",\n  ugrave: \"\\xF9\",\n  uacute: \"\\xFA\",\n  ucirc: \"\\xFB\",\n  uuml: \"\\xFC\",\n  yacute: \"\\xFD\",\n  thorn: \"\\xFE\",\n  yuml: \"\\xFF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n  lang: \"\\u27E8\",\n  rang: \"\\u27E9\"\n};\n\n// src/jsx-parser.ts\nTokenName[100 /* Identifier */] = \"JSXIdentifier\";\nTokenName[101 /* Text */] = \"JSXText\";\nfunction getQualifiedElementName(elementName) {\n  let qualifiedName;\n  switch (elementName.type) {\n    case \"JSXIdentifier\" /* JSXIdentifier */:\n      const id = elementName;\n      qualifiedName = id.name;\n      break;\n    case \"JSXNamespacedName\" /* JSXNamespacedName */:\n      const ns = elementName;\n      qualifiedName = getQualifiedElementName(ns.namespace) + \":\" + getQualifiedElementName(ns.name);\n      break;\n    case \"JSXMemberExpression\" /* JSXMemberExpression */:\n      const expr = elementName;\n      qualifiedName = getQualifiedElementName(expr.object) + \".\" + getQualifiedElementName(expr.property);\n      break;\n    default:\n      break;\n  }\n  return qualifiedName;\n}\nvar JSXParser = class extends Parser {\n  constructor(code, options, delegate) {\n    super(code, options, delegate);\n  }\n  //@ts-ignore\n  parsePrimaryExpression() {\n    return this.match(\"<\") ? this.parseJSXRoot() : super.parsePrimaryExpression();\n  }\n  startJSX() {\n    this.scanner.index = this.startMarker.index;\n    this.scanner.lineNumber = this.startMarker.line;\n    this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n  }\n  finishJSX() {\n    this.nextToken();\n  }\n  reenterJSX() {\n    this.startJSX();\n    this.expectJSX(\"}\");\n    if (this.config.tokens) {\n      this.tokens.pop();\n    }\n  }\n  createJSXNode() {\n    this.collectComments();\n    return {\n      index: this.scanner.index,\n      line: this.scanner.lineNumber,\n      column: this.scanner.index - this.scanner.lineStart\n    };\n  }\n  createJSXChildNode() {\n    return {\n      index: this.scanner.index,\n      line: this.scanner.lineNumber,\n      column: this.scanner.index - this.scanner.lineStart\n    };\n  }\n  scanXHTMLEntity(quote) {\n    let result = \"&\";\n    let valid = true;\n    let terminated = false;\n    let numeric = false;\n    let hex = false;\n    while (!this.scanner.eof() && valid && !terminated) {\n      const ch = this.scanner.source[this.scanner.index];\n      if (ch === quote) {\n        break;\n      }\n      terminated = ch === \";\";\n      result += ch;\n      ++this.scanner.index;\n      if (!terminated) {\n        switch (result.length) {\n          case 2:\n            numeric = ch === \"#\";\n            break;\n          case 3:\n            if (numeric) {\n              hex = ch === \"x\";\n              valid = hex || Character.isDecimalDigit(ch.charCodeAt(0));\n              numeric = numeric && !hex;\n            }\n            break;\n          default:\n            valid = valid && !(numeric && !Character.isDecimalDigit(ch.charCodeAt(0)));\n            valid = valid && !(hex && !Character.isHexDigit(ch.charCodeAt(0)));\n            break;\n        }\n      }\n    }\n    if (valid && terminated && result.length > 2) {\n      const str = result.substr(1, result.length - 2);\n      if (numeric && str.length > 1) {\n        result = String.fromCharCode(parseInt(str.substr(1), 10));\n      } else if (hex && str.length > 2) {\n        result = String.fromCharCode(parseInt(\"0\" + str.substr(1), 16));\n      } else if (!numeric && !hex && XHTMLEntities[str]) {\n        result = XHTMLEntities[str];\n      }\n    }\n    return result;\n  }\n  // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n  lexJSX() {\n    const cp = this.scanner.source.charCodeAt(this.scanner.index);\n    if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n      const value = this.scanner.source[this.scanner.index++];\n      return {\n        type: 7 /* Punctuator */,\n        value,\n        lineNumber: this.scanner.lineNumber,\n        lineStart: this.scanner.lineStart,\n        start: this.scanner.index - 1,\n        end: this.scanner.index\n      };\n    }\n    if (cp === 34 || cp === 39) {\n      const start = this.scanner.index;\n      const quote = this.scanner.source[this.scanner.index++];\n      let str = \"\";\n      while (!this.scanner.eof()) {\n        const ch = this.scanner.source[this.scanner.index++];\n        if (ch === quote) {\n          break;\n        } else if (ch === \"&\") {\n          str += this.scanXHTMLEntity(quote);\n        } else {\n          str += ch;\n        }\n      }\n      return {\n        type: 8 /* StringLiteral */,\n        value: str,\n        lineNumber: this.scanner.lineNumber,\n        lineStart: this.scanner.lineStart,\n        start,\n        end: this.scanner.index\n      };\n    }\n    if (cp === 46) {\n      const n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n      const n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n      const value = n1 === 46 && n2 === 46 ? \"...\" : \".\";\n      const start = this.scanner.index;\n      this.scanner.index += value.length;\n      return {\n        type: 7 /* Punctuator */,\n        value,\n        lineNumber: this.scanner.lineNumber,\n        lineStart: this.scanner.lineStart,\n        start,\n        end: this.scanner.index\n      };\n    }\n    if (cp === 96) {\n      return {\n        type: 10 /* Template */,\n        value: \"\",\n        lineNumber: this.scanner.lineNumber,\n        lineStart: this.scanner.lineStart,\n        start: this.scanner.index,\n        end: this.scanner.index\n      };\n    }\n    if (Character.isIdentifierStart(cp) && cp !== 92) {\n      const start = this.scanner.index;\n      ++this.scanner.index;\n      while (!this.scanner.eof()) {\n        const ch = this.scanner.source.charCodeAt(this.scanner.index);\n        if (Character.isIdentifierPart(ch) && ch !== 92) {\n          ++this.scanner.index;\n        } else if (ch === 45) {\n          ++this.scanner.index;\n        } else {\n          break;\n        }\n      }\n      const id = this.scanner.source.slice(start, this.scanner.index);\n      return {\n        type: 100 /* Identifier */,\n        value: id,\n        lineNumber: this.scanner.lineNumber,\n        lineStart: this.scanner.lineStart,\n        start,\n        end: this.scanner.index\n      };\n    }\n    return this.scanner.lex();\n  }\n  nextJSXToken() {\n    this.collectComments();\n    this.startMarker.index = this.scanner.index;\n    this.startMarker.line = this.scanner.lineNumber;\n    this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n    const token = this.lexJSX();\n    this.lastMarker.index = this.scanner.index;\n    this.lastMarker.line = this.scanner.lineNumber;\n    this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n    if (this.config.tokens) {\n      this.tokens.push(this.convertToken(token));\n    }\n    return token;\n  }\n  nextJSXText() {\n    this.startMarker.index = this.scanner.index;\n    this.startMarker.line = this.scanner.lineNumber;\n    this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n    const start = this.scanner.index;\n    let text = \"\";\n    while (!this.scanner.eof()) {\n      const ch = this.scanner.source[this.scanner.index];\n      if (ch === \"{\" || ch === \"<\") {\n        break;\n      }\n      ++this.scanner.index;\n      text += ch;\n      if (Character.isLineTerminator(ch.charCodeAt(0))) {\n        ++this.scanner.lineNumber;\n        if (ch === \"\\r\" && this.scanner.source[this.scanner.index] === \"\\n\") {\n          ++this.scanner.index;\n        }\n        this.scanner.lineStart = this.scanner.index;\n      }\n    }\n    this.lastMarker.index = this.scanner.index;\n    this.lastMarker.line = this.scanner.lineNumber;\n    this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n    const token = {\n      type: 101 /* Text */,\n      value: text,\n      lineNumber: this.scanner.lineNumber,\n      lineStart: this.scanner.lineStart,\n      start,\n      end: this.scanner.index\n    };\n    if (text.length > 0 && this.config.tokens) {\n      this.tokens.push(this.convertToken(token));\n    }\n    return token;\n  }\n  peekJSXToken() {\n    const state = this.scanner.saveState();\n    this.scanner.scanComments();\n    const next = this.lexJSX();\n    this.scanner.restoreState(state);\n    return next;\n  }\n  // Expect the next JSX token to match the specified punctuator.\n  // If not, an exception will be thrown.\n  expectJSX(value) {\n    const token = this.nextJSXToken();\n    if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n      this.throwUnexpectedToken(token);\n    }\n  }\n  // Return true if the next JSX token matches the specified punctuator.\n  matchJSX(value) {\n    const next = this.peekJSXToken();\n    return next.type === 7 /* Punctuator */ && next.value === value;\n  }\n  parseJSXIdentifier() {\n    const node = this.createJSXNode();\n    const token = this.nextJSXToken();\n    if (token.type !== 100 /* Identifier */) {\n      this.throwUnexpectedToken(token);\n    }\n    return this.finalize(node, new JSXIdentifier(token.value));\n  }\n  parseJSXElementName() {\n    const node = this.createJSXNode();\n    let elementName = this.parseJSXIdentifier();\n    if (this.matchJSX(\":\")) {\n      const namespace = elementName;\n      this.expectJSX(\":\");\n      const name = this.parseJSXIdentifier();\n      elementName = this.finalize(node, new JSXNamespacedName(namespace, name));\n    } else if (this.matchJSX(\".\")) {\n      while (this.matchJSX(\".\")) {\n        const object = elementName;\n        this.expectJSX(\".\");\n        const property = this.parseJSXIdentifier();\n        elementName = this.finalize(node, new JSXMemberExpression(object, property));\n      }\n    }\n    return elementName;\n  }\n  parseJSXAttributeName() {\n    const node = this.createJSXNode();\n    let attributeName;\n    const identifier = this.parseJSXIdentifier();\n    if (this.matchJSX(\":\")) {\n      const namespace = identifier;\n      this.expectJSX(\":\");\n      const name = this.parseJSXIdentifier();\n      attributeName = this.finalize(node, new JSXNamespacedName(namespace, name));\n    } else {\n      attributeName = identifier;\n    }\n    return attributeName;\n  }\n  parseJSXStringLiteralAttribute() {\n    const node = this.createJSXNode();\n    const token = this.nextJSXToken();\n    if (token.type !== 8 /* StringLiteral */) {\n      this.throwUnexpectedToken(token);\n    }\n    const raw = this.getTokenRaw(token);\n    return this.finalize(node, new Literal(token.value, raw));\n  }\n  parseJSXExpressionAttribute() {\n    const node = this.createJSXNode();\n    this.expectJSX(\"{\");\n    this.finishJSX();\n    if (this.match(\"}\")) {\n      this.tolerateError(\"JSX attributes must only be assigned a non-empty expression\");\n    }\n    const expression = this.parseAssignmentExpression();\n    this.reenterJSX();\n    return this.finalize(node, new JSXExpressionContainer(expression));\n  }\n  parseJSXAttributeValue() {\n    return this.matchJSX(\"{\") ? this.parseJSXExpressionAttribute() : this.matchJSX(\"<\") ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n  }\n  parseJSXNameValueAttribute() {\n    const node = this.createJSXNode();\n    const name = this.parseJSXAttributeName();\n    let value = null;\n    if (this.matchJSX(\"=\")) {\n      this.expectJSX(\"=\");\n      value = this.parseJSXAttributeValue();\n    }\n    return this.finalize(node, new JSXAttribute(name, value));\n  }\n  parseJSXSpreadAttribute() {\n    const node = this.createJSXNode();\n    this.expectJSX(\"{\");\n    this.expectJSX(\"...\");\n    this.finishJSX();\n    const argument = this.parseAssignmentExpression();\n    this.reenterJSX();\n    return this.finalize(node, new JSXSpreadAttribute(argument));\n  }\n  parseJSXAttributes() {\n    const attributes = [];\n    while (!this.matchJSX(\"/\") && !this.matchJSX(\">\")) {\n      const attribute = this.matchJSX(\"{\") ? this.parseJSXSpreadAttribute() : this.parseJSXNameValueAttribute();\n      attributes.push(attribute);\n    }\n    return attributes;\n  }\n  parseJSXOpeningElement() {\n    const node = this.createJSXNode();\n    this.expectJSX(\"<\");\n    if (this.matchJSX(\">\")) {\n      this.expectJSX(\">\");\n      return this.finalize(node, new JSXOpeningFragment(false));\n    }\n    const name = this.parseJSXElementName();\n    const attributes = this.parseJSXAttributes();\n    const selfClosing = this.matchJSX(\"/\");\n    if (selfClosing) {\n      this.expectJSX(\"/\");\n    }\n    this.expectJSX(\">\");\n    return this.finalize(node, new JSXOpeningElement(name, selfClosing, attributes));\n  }\n  parseJSXBoundaryElement() {\n    const node = this.createJSXNode();\n    this.expectJSX(\"<\");\n    if (this.matchJSX(\"/\")) {\n      this.expectJSX(\"/\");\n      if (this.matchJSX(\">\")) {\n        this.expectJSX(\">\");\n        return this.finalize(node, new JSXClosingFragment());\n      }\n      const elementName = this.parseJSXElementName();\n      this.expectJSX(\">\");\n      return this.finalize(node, new JSXClosingElement(elementName));\n    }\n    const name = this.parseJSXElementName();\n    const attributes = this.parseJSXAttributes();\n    const selfClosing = this.matchJSX(\"/\");\n    if (selfClosing) {\n      this.expectJSX(\"/\");\n    }\n    this.expectJSX(\">\");\n    return this.finalize(node, new JSXOpeningElement(name, selfClosing, attributes));\n  }\n  parseJSXEmptyExpression() {\n    const node = this.createJSXChildNode();\n    this.collectComments();\n    this.lastMarker.index = this.scanner.index;\n    this.lastMarker.line = this.scanner.lineNumber;\n    this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n    return this.finalize(node, new JSXEmptyExpression());\n  }\n  parseJSXExpressionContainer() {\n    const node = this.createJSXNode();\n    this.expectJSX(\"{\");\n    let expression;\n    if (this.matchJSX(\"}\")) {\n      expression = this.parseJSXEmptyExpression();\n      this.expectJSX(\"}\");\n    } else {\n      this.finishJSX();\n      expression = this.parseAssignmentExpression();\n      this.reenterJSX();\n    }\n    return this.finalize(node, new JSXExpressionContainer(expression));\n  }\n  parseJSXChildren() {\n    const children = [];\n    while (!this.scanner.eof()) {\n      const node = this.createJSXChildNode();\n      const token = this.nextJSXText();\n      if (token.start < token.end) {\n        const raw = this.getTokenRaw(token);\n        const child = this.finalize(node, new JSXText(token.value, raw));\n        children.push(child);\n      }\n      if (this.scanner.source[this.scanner.index] === \"{\") {\n        const container = this.parseJSXExpressionContainer();\n        children.push(container);\n      } else {\n        break;\n      }\n    }\n    return children;\n  }\n  parseComplexJSXElement(el) {\n    const stack = [];\n    while (!this.scanner.eof()) {\n      el.children = el.children.concat(this.parseJSXChildren());\n      const node = this.createJSXChildNode();\n      const element = this.parseJSXBoundaryElement();\n      if (element.type === \"JSXOpeningElement\" /* JSXOpeningElement */) {\n        const opening = element;\n        if (opening.selfClosing) {\n          const child = this.finalize(node, new JSXElement(opening, [], null));\n          el.children.push(child);\n        } else {\n          stack.push(el);\n          el = { node, opening, closing: null, children: [] };\n        }\n      }\n      if (element.type === \"JSXClosingElement\" /* JSXClosingElement */) {\n        el.closing = element;\n        const open = getQualifiedElementName(el.opening.name);\n        const close = getQualifiedElementName(el.closing.name);\n        if (open !== close) {\n          this.tolerateError(\"Expected corresponding JSX closing tag for %0\", open);\n        }\n        if (stack.length > 0) {\n          const child = this.finalize(el.node, new JSXElement(el.opening, el.children, el.closing));\n          el = stack[stack.length - 1];\n          el.children.push(child);\n          stack.pop();\n        } else {\n          break;\n        }\n      }\n      if (element.type === \"JSXClosingFragment\" /* JSXClosingFragment */) {\n        el.closing = element;\n        if (el.opening.type !== \"JSXOpeningFragment\" /* JSXOpeningFragment */) {\n          this.tolerateError(\"Expected corresponding JSX closing tag for jsx fragment\");\n        } else {\n          break;\n        }\n      }\n    }\n    return el;\n  }\n  parseJSXElement() {\n    const node = this.createJSXNode();\n    const opening = this.parseJSXOpeningElement();\n    let children = [];\n    let closing = null;\n    if (!opening.selfClosing) {\n      const el = this.parseComplexJSXElement({ node, opening, closing, children });\n      children = el.children;\n      closing = el.closing;\n    }\n    return this.finalize(node, new JSXElement(opening, children, closing));\n  }\n  parseJSXRoot() {\n    if (this.config.tokens) {\n      this.tokens.pop();\n    }\n    this.startJSX();\n    const element = this.parseJSXElement();\n    this.finishJSX();\n    return element;\n  }\n  isStartOfExpression() {\n    return super.isStartOfExpression() || this.match(\"<\");\n  }\n};\n\n// src/tokenizer.ts\nvar beforeFunctionExpressionTokens = [\n  \"(\",\n  \"{\",\n  \"[\",\n  \"in\",\n  \"typeof\",\n  \"instanceof\",\n  \"new\",\n  \"return\",\n  \"case\",\n  \"delete\",\n  \"throw\",\n  \"void\",\n  // assignment operators\n  \"=\",\n  \"+=\",\n  \"-=\",\n  \"*=\",\n  \"**=\",\n  \"/=\",\n  \"%=\",\n  \"<<=\",\n  \">>=\",\n  \">>>=\",\n  \"&=\",\n  \"|=\",\n  \"^=\",\n  \",\",\n  // binary/unary operators\n  \"+\",\n  \"-\",\n  \"*\",\n  \"**\",\n  \"/\",\n  \"%\",\n  \"++\",\n  \"--\",\n  \"<<\",\n  \">>\",\n  \">>>\",\n  \"&\",\n  \"|\",\n  \"^\",\n  \"!\",\n  \"~\",\n  \"&&\",\n  \"||\",\n  \"??\",\n  \"?\",\n  \":\",\n  \"===\",\n  \"==\",\n  \">=\",\n  \"<=\",\n  \"<\",\n  \">\",\n  \"!=\",\n  \"!==\"\n];\nvar Reader = class {\n  values;\n  curly;\n  paren;\n  constructor() {\n    this.values = [];\n    this.curly = this.paren = -1;\n  }\n  // A function following one of those tokens is an expression.\n  beforeFunctionExpression(t) {\n    return beforeFunctionExpressionTokens.includes(t);\n  }\n  // Determine if forward slash (/) is an operator or part of a regular expression\n  // https://github.com/mozilla/sweet.js/wiki/design\n  isRegexStart() {\n    const previous = this.values[this.values.length - 1];\n    let regex = previous !== null;\n    switch (previous) {\n      case \"this\":\n      case \"]\":\n        regex = false;\n        break;\n      case \")\":\n        const keyword = this.values[this.paren - 1];\n        regex = keyword === \"if\" || keyword === \"while\" || keyword === \"for\" || keyword === \"with\";\n        break;\n      case \"}\":\n        regex = true;\n        if (this.values[this.curly - 3] === \"function\") {\n          const check = this.values[this.curly - 4];\n          regex = check ? !this.beforeFunctionExpression(check) : false;\n        } else if (this.values[this.curly - 4] === \"function\") {\n          const check = this.values[this.curly - 5];\n          regex = check ? !this.beforeFunctionExpression(check) : true;\n        }\n        break;\n      default:\n        break;\n    }\n    return regex;\n  }\n  push(token) {\n    if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\n      if (token.value === \"{\") {\n        this.curly = this.values.length;\n      } else if (token.value === \"(\") {\n        this.paren = this.values.length;\n      }\n      this.values.push(token.value);\n    } else {\n      this.values.push(null);\n    }\n  }\n};\nvar Tokenizer = class {\n  errorHandler;\n  scanner;\n  trackRange;\n  trackLoc;\n  buffer;\n  reader;\n  constructor(code, config) {\n    this.errorHandler = new ErrorHandler();\n    this.errorHandler.tolerant = config ? typeof config.tolerant === \"boolean\" && config.tolerant : false;\n    this.scanner = new Scanner(code, this.errorHandler);\n    this.scanner.trackComment = config ? typeof config.comment === \"boolean\" && config.comment : false;\n    this.trackRange = config ? typeof config.range === \"boolean\" && config.range : false;\n    this.trackLoc = config ? typeof config.loc === \"boolean\" && config.loc : false;\n    this.buffer = [];\n    this.reader = new Reader();\n  }\n  errors() {\n    return this.errorHandler.errors;\n  }\n  getNextToken() {\n    if (this.buffer.length === 0) {\n      const comments = this.scanner.scanComments();\n      if (this.scanner.trackComment) {\n        for (let i = 0; i < comments.length; ++i) {\n          const e = comments[i];\n          const value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n          const comment = {\n            type: e.multiLine ? \"BlockComment\" : \"LineComment\",\n            value\n          };\n          if (this.trackRange) {\n            comment.range = e.range;\n          }\n          if (this.trackLoc) {\n            comment.loc = e.loc;\n          }\n          this.buffer.push(comment);\n        }\n      }\n      if (!this.scanner.eof()) {\n        let loc;\n        if (this.trackLoc) {\n          loc = {\n            start: {\n              line: this.scanner.lineNumber,\n              column: this.scanner.index - this.scanner.lineStart\n            },\n            end: {}\n          };\n        }\n        const maybeRegex = this.scanner.source[this.scanner.index] === \"/\" && this.reader.isRegexStart();\n        let token;\n        if (maybeRegex) {\n          const state = this.scanner.saveState();\n          try {\n            token = this.scanner.scanRegExp();\n          } catch (e) {\n            this.scanner.restoreState(state);\n            token = this.scanner.lex();\n          }\n        } else {\n          token = this.scanner.lex();\n        }\n        this.reader.push(token);\n        const entry = {\n          type: TokenName[token.type],\n          value: this.scanner.source.slice(token.start, token.end)\n        };\n        if (this.trackRange) {\n          entry.range = [token.start, token.end];\n        }\n        if (this.trackLoc) {\n          loc.end = {\n            line: this.scanner.lineNumber,\n            column: this.scanner.index - this.scanner.lineStart\n          };\n          entry.loc = loc;\n        }\n        if (token.type === 9 /* RegularExpression */) {\n          const pattern = token.pattern;\n          const flags = token.flags;\n          entry.regex = { pattern, flags };\n        }\n        this.buffer.push(entry);\n      }\n    }\n    return this.buffer.shift();\n  }\n};\n\n// src/visitor.ts\nvar Visitor = class {\n  visit(node) {\n    if (node == null)\n      return node;\n    switch (node.type) {\n      case \"AssignmentExpression\" /* AssignmentExpression */:\n        return this.visitAssignmentExpression(node);\n      case \"AssignmentPattern\" /* AssignmentPattern */:\n        return this.visitAssignmentPattern(node);\n      case \"ArrayExpression\" /* ArrayExpression */:\n        return this.visitArrayExpression(node);\n      case \"ArrayPattern\" /* ArrayPattern */:\n        return this.visitArrayPattern(node);\n      case \"ArrowFunctionExpression\" /* ArrowFunctionExpression */:\n        return this.visitArrowFunctionExpression(node);\n      case \"AwaitExpression\" /* AwaitExpression */:\n        return this.visitAwaitExpression(node);\n      case \"BlockStatement\" /* BlockStatement */:\n        return this.visitBlockStatement(node);\n      case \"BinaryExpression\" /* BinaryExpression */:\n        return this.visitBinaryExpression(node);\n      case \"BreakStatement\" /* BreakStatement */:\n        return this.visitBreakStatement(node);\n      case \"CallExpression\" /* CallExpression */:\n        return this.visitCallExpression(node);\n      case \"CatchClause\" /* CatchClause */:\n        return this.visitCatchClause(node);\n      case \"ChainExpression\" /* ChainExpression */:\n        return this.visitChainExpression(node);\n      case \"ClassBody\" /* ClassBody */:\n        return this.visitClassBody(node);\n      case \"ClassDeclaration\" /* ClassDeclaration */:\n        return this.visitClassDeclaration(node);\n      case \"ClassExpression\" /* ClassExpression */:\n        return this.visitClassExpression(node);\n      case \"ConditionalExpression\" /* ConditionalExpression */:\n        return this.visitConditionalExpression(node);\n      case \"ContinueStatement\" /* ContinueStatement */:\n        return this.visitContinueStatement(node);\n      case \"Decorator\" /* Decorator */:\n        return this.visitDecorator(node);\n      case \"DoWhileStatement\" /* DoWhileStatement */:\n        return this.visitDoWhileStatement(node);\n      case \"DebuggerStatement\" /* DebuggerStatement */:\n        return this.visitDebuggerStatement(node);\n      case \"EmptyStatement\" /* EmptyStatement */:\n        return this.visitEmptyStatement(node);\n      case \"ExportAllDeclaration\" /* ExportAllDeclaration */:\n        return this.visitExportAllDeclaration(node);\n      case \"ExportDefaultDeclaration\" /* ExportDefaultDeclaration */:\n        return this.visitExportDefaultDeclaration(node);\n      case \"ExportNamedDeclaration\" /* ExportNamedDeclaration */:\n        return this.visitExportNamedDeclaration(node);\n      case \"ExportSpecifier\" /* ExportSpecifier */:\n        return this.visitExportSpecifier(node);\n      case \"ExpressionStatement\" /* ExpressionStatement */:\n        return this.visitExpressionStatement(node);\n      case \"ForStatement\" /* ForStatement */:\n        return this.visitForStatement(node);\n      case \"ForOfStatement\" /* ForOfStatement */:\n        return this.visitForOfStatement(node);\n      case \"ForInStatement\" /* ForInStatement */:\n        return this.visitForInStatement(node);\n      case \"FunctionDeclaration\" /* FunctionDeclaration */:\n        return this.visitFunctionDeclaration(node);\n      case \"FunctionExpression\" /* FunctionExpression */:\n        return this.visitFunctionExpression(node);\n      case \"Identifier\" /* Identifier */:\n        return this.visitIdentifier(node);\n      case \"IfStatement\" /* IfStatement */:\n        return this.visitIfStatement(node);\n      case \"ImportAttribute\" /* ImportAttribute */:\n        return this.visitImportAttribute(node);\n      case \"ImportExpression\" /* ImportExpression */:\n        return this.visitImportExpression(node);\n      case \"ImportDeclaration\" /* ImportDeclaration */:\n        return this.visitImportDeclaration(node);\n      case \"ImportDefaultSpecifier\" /* ImportDefaultSpecifier */:\n        return this.visitImportDefaultSpecifier(node);\n      case \"ImportNamespaceSpecifier\" /* ImportNamespaceSpecifier */:\n        return this.visitImportNamespaceSpecifier(node);\n      case \"ImportSpecifier\" /* ImportSpecifier */:\n        return this.visitImportSpecifier(node);\n      case \"Literal\" /* Literal */:\n        return this.visitLiteral(node);\n      case \"LabeledStatement\" /* LabeledStatement */:\n        return this.visitLabeledStatement(node);\n      case \"LogicalExpression\" /* LogicalExpression */:\n        return this.visitLogicalExpression(node);\n      case \"MemberExpression\" /* MemberExpression */:\n        return this.visitMemberExpression(node);\n      case \"MetaProperty\" /* MetaProperty */:\n        return this.visitMetaProperty(node);\n      case \"MethodDefinition\" /* MethodDefinition */:\n        return this.visitMethodDefinition(node);\n      case \"NewExpression\" /* NewExpression */:\n        return this.visitNewExpression(node);\n      case \"ObjectExpression\" /* ObjectExpression */:\n        return this.visitObjectExpression(node);\n      case \"ObjectPattern\" /* ObjectPattern */:\n        return this.visitObjectPattern(node);\n      case \"Program\" /* Program */:\n        return this.visitProgram(node);\n      case \"Property\" /* Property */:\n        return this.visitProperty(node);\n      case \"PrivateIdentifier\" /* PrivateIdentifier */:\n        return this.visitPrivateIdentifier(node);\n      case \"RestElement\" /* RestElement */:\n        return this.visitRestElement(node);\n      case \"ReturnStatement\" /* ReturnStatement */:\n        return this.visitReturnStatement(node);\n      case \"SequenceExpression\" /* SequenceExpression */:\n        return this.visitSequenceExpression(node);\n      case \"SpreadElement\" /* SpreadElement */:\n        return this.visitSpreadElement(node);\n      case \"StaticBlock\" /* StaticBlock */:\n        return this.visitStaticBlock(node);\n      case \"Super\" /* Super */:\n        return this.visitSuper(node);\n      case \"SwitchCase\" /* SwitchCase */:\n        return this.visitSwitchCase(node);\n      case \"SwitchStatement\" /* SwitchStatement */:\n        return this.visitSwitchStatement(node);\n      case \"TaggedTemplateExpression\" /* TaggedTemplateExpression */:\n        return this.visitTaggedTemplateExpression(node);\n      case \"TemplateElement\" /* TemplateElement */:\n        return this.visitTemplateElement(node);\n      case \"TemplateLiteral\" /* TemplateLiteral */:\n        return this.visitTemplateLiteral(node);\n      case \"ThisExpression\" /* ThisExpression */:\n        return this.visitThisExpression(node);\n      case \"ThrowStatement\" /* ThrowStatement */:\n        return this.visitThrowStatement(node);\n      case \"TryStatement\" /* TryStatement */:\n        return this.visitTryStatement(node);\n      case \"UnaryExpression\" /* UnaryExpression */:\n        return this.visitUnaryExpression(node);\n      case \"UpdateExpression\" /* UpdateExpression */:\n        return this.visitUpdateExpression(node);\n      case \"VariableDeclaration\" /* VariableDeclaration */:\n        return this.visitVariableDeclaration(node);\n      case \"VariableDeclarator\" /* VariableDeclarator */:\n        return this.visitVariableDeclarator(node);\n      case \"WhileStatement\" /* WhileStatement */:\n        return this.visitWhileStatement(node);\n      case \"WithStatement\" /* WithStatement */:\n        return this.visitWithStatement(node);\n      case \"YieldExpression\" /* YieldExpression */:\n        return this.visitYieldExpression(node);\n    }\n  }\n  visitNodeList(original) {\n    if (original == null)\n      return original;\n    let list = null;\n    for (let i = 0, n = original.length; i < n; i++) {\n      let p = this.visit(original[i]);\n      if (list != null) {\n        list.push(p);\n      } else if (p != original[i]) {\n        list = [];\n        for (let j = 0; j < i; j++) {\n          list.push(original[j]);\n        }\n        list.push(p);\n      }\n    }\n    if (list != null)\n      return list;\n    return original;\n  }\n  visitAssignmentExpression(node) {\n    const left = this.visit(node.left);\n    const right = this.visit(node.right);\n    if (left !== node.left || right !== node.right)\n      return new AssignmentExpression(node.operator, left, right);\n    return node;\n  }\n  visitAssignmentPattern(node) {\n    const left = this.visit(node.left);\n    const right = this.visit(node.right);\n    if (left !== node.left || right !== node.right)\n      return new AssignmentPattern(left, right);\n    return node;\n  }\n  visitArrayExpression(node) {\n    const elements = this.visitNodeList(node.elements);\n    if (elements !== node.elements)\n      return new ArrayExpression(elements);\n    return node;\n  }\n  visitArrayPattern(node) {\n    const elements = this.visitNodeList(node.elements);\n    if (elements !== node.elements)\n      return new ArrayPattern(elements);\n    return node;\n  }\n  visitArrowFunctionExpression(node) {\n    const id = this.visit(node.id);\n    const params = this.visitNodeList(node.params);\n    const body = this.visit(node.body);\n    if (id !== node.id || params !== node.params || body !== node.body) {\n      const ret = new ArrowFunctionExpression(params, body, node.expression, node.async);\n      ret.id = id;\n      return ret;\n    }\n    return node;\n  }\n  visitAwaitExpression(node) {\n    const argument = this.visit(node.argument);\n    if (argument !== node.argument)\n      return new AwaitExpression(argument);\n    return node;\n  }\n  visitBlockStatement(node) {\n    const body = this.visitNodeList(node.body);\n    if (body !== node.body)\n      return new BlockStatement(body);\n    return node;\n  }\n  visitBinaryExpression(node) {\n    const left = this.visit(node.left);\n    const right = this.visit(node.right);\n    if (left !== node.left || right !== node.right)\n      return new BinaryExpression(node.operator, left, right);\n    return node;\n  }\n  visitBreakStatement(node) {\n    const label = this.visit(node.label);\n    if (label !== node.label)\n      return new BreakStatement(label);\n    return node;\n  }\n  visitCallExpression(node) {\n    const callee = this.visit(node.callee);\n    const args = this.visitNodeList(node.arguments);\n    if (callee !== node.callee || args !== node.arguments)\n      return new CallExpression(callee, args, node.optional);\n    return node;\n  }\n  visitCatchClause(node) {\n    const param = this.visit(node.param);\n    const body = this.visit(node.body);\n    if (param !== node.param || body !== node.body)\n      return new CatchClause(param, body);\n    return node;\n  }\n  visitChainExpression(node) {\n    const expression = this.visit(node.expression);\n    if (expression !== node.expression)\n      return new ChainExpression(expression);\n    return node;\n  }\n  visitClassBody(node) {\n    const body = this.visitNodeList(node.body);\n    if (body !== node.body)\n      return new ClassBody(body);\n    return node;\n  }\n  visitClassDeclaration(node) {\n    const id = this.visit(node.id);\n    const superClass = this.visit(node.superClass);\n    const body = this.visit(node.body);\n    const decorators = this.visitNodeList(node.decorators);\n    if (id !== node.id || superClass !== node.superClass || body !== node.body || decorators !== node.decorators)\n      return new ClassDeclaration(id, superClass, body, decorators);\n    return node;\n  }\n  visitClassExpression(node) {\n    const id = this.visit(node.id);\n    const superClass = this.visit(node.superClass);\n    const body = this.visit(node.body);\n    const decorators = this.visitNodeList(node.decorators);\n    if (id !== node.id || superClass !== node.superClass || body !== node.body || decorators !== node.decorators)\n      return new ClassExpression(id, superClass, body, decorators);\n    return node;\n  }\n  visitConditionalExpression(node) {\n    const test = this.visit(node.test);\n    const consequent = this.visit(node.consequent);\n    const alternate = this.visit(node.alternate);\n    if (test !== node.test || consequent !== node.consequent || alternate !== node.alternate)\n      return new ConditionalExpression(test, consequent, alternate);\n    return node;\n  }\n  visitContinueStatement(node) {\n    const label = this.visit(node.label);\n    if (label !== node.label)\n      return new ContinueStatement(label);\n    return node;\n  }\n  visitDecorator(node) {\n    const expression = this.visit(node.expression);\n    if (expression !== node.expression)\n      return new Decorator(expression);\n    return node;\n  }\n  visitDoWhileStatement(node) {\n    const body = this.visit(node.body);\n    const test = this.visit(node.test);\n    if (body !== node.body || test !== node.test)\n      return new DoWhileStatement(body, test);\n    return node;\n  }\n  visitDebuggerStatement(node) {\n    return node;\n  }\n  visitEmptyStatement(node) {\n    return node;\n  }\n  visitExportAllDeclaration(node) {\n    const source = this.visit(node.source);\n    const exported = this.visit(node.exported);\n    const assertions = this.visitNodeList(node.assertions);\n    if (source !== node.source || exported !== node.exported || assertions !== node.assertions)\n      return new ExportAllDeclaration(source, exported, assertions);\n    return node;\n  }\n  visitExportDefaultDeclaration(node) {\n    const declaration = this.visit(node.declaration);\n    if (declaration !== node.declaration)\n      return new ExportDefaultDeclaration(declaration);\n    return node;\n  }\n  visitExportNamedDeclaration(node) {\n    const declaration = this.visit(node.declaration);\n    const specifiers = this.visitNodeList(node.specifiers);\n    const source = this.visit(node.source);\n    const assertions = this.visitNodeList(node.assertions);\n    if (declaration !== node.declaration || specifiers !== node.specifiers || source !== node.source || assertions !== node.assertions)\n      return new ExportNamedDeclaration(declaration, specifiers, source, assertions);\n    return node;\n  }\n  visitExportSpecifier(node) {\n    const exported = this.visit(node.exported);\n    const local = this.visit(node.local);\n    if (exported !== node.exported || local !== node.local)\n      return new ExportSpecifier(exported, local);\n    return node;\n  }\n  visitExpressionStatement(node) {\n    const expression = this.visit(node.expression);\n    if (expression !== node.expression)\n      return new ExpressionStatement(expression);\n    return node;\n  }\n  visitForStatement(node) {\n    const init = this.visit(node.init);\n    const test = this.visit(node.test);\n    const update = this.visit(node.update);\n    const body = this.visit(node.body);\n    if (init !== node.init || test !== node.test || update !== node.update || body !== node.body)\n      return new ForStatement(init, test, update, body);\n    return node;\n  }\n  visitForOfStatement(node) {\n    const left = this.visit(node.left);\n    const right = this.visit(node.right);\n    const body = this.visit(node.body);\n    if (left !== node.left || right !== node.right || body !== node.body)\n      return new ForOfStatement(left, right, body, node.await);\n    return node;\n  }\n  visitForInStatement(node) {\n    const left = this.visit(node.left);\n    const right = this.visit(node.right);\n    const body = this.visit(node.body);\n    if (left !== node.left || right !== node.right || body !== node.body)\n      return new ForInStatement(left, right, body);\n    return node;\n  }\n  visitFunctionDeclaration(node) {\n    const id = this.visit(node.id);\n    const params = this.visitNodeList(node.params);\n    const body = this.visit(node.body);\n    if (id !== node.id || params !== node.params || body !== node.body)\n      return new FunctionDeclaration(id, params, body, node.generator);\n    return node;\n  }\n  visitFunctionExpression(node) {\n    const id = this.visit(node.id);\n    const params = this.visitNodeList(node.params);\n    const body = this.visit(node.body);\n    if (id !== node.id || params !== node.params || body !== node.body)\n      return new FunctionExpression(id, params, body, node.generator, node.async);\n    return node;\n  }\n  visitIdentifier(node) {\n    return node;\n  }\n  visitIfStatement(node) {\n    const test = this.visit(node.test);\n    const consequent = this.visit(node.consequent);\n    const alternate = this.visit(node.alternate);\n    if (test !== node.test || consequent !== node.consequent || alternate !== node.alternate)\n      return new IfStatement(test, consequent, alternate);\n    return node;\n  }\n  visitImportAttribute(node) {\n    const key = this.visit(node.key);\n    const value = this.visit(node.value);\n    if (key !== node.key || value !== node.value)\n      return new ImportAttribute(key, value);\n    return node;\n  }\n  visitImportExpression(node) {\n    const source = this.visit(node.source);\n    const attributes = this.visit(node.attributes);\n    if (source !== node.source || attributes !== node.attributes)\n      return new ImportExpression(source, attributes);\n    return node;\n  }\n  visitImportDeclaration(node) {\n    const specifiers = this.visitNodeList(node.specifiers);\n    const source = this.visit(node.source);\n    const assertions = this.visitNodeList(node.assertions);\n    if (specifiers !== node.specifiers || source !== node.source || assertions !== node.assertions)\n      return new ImportDeclaration(specifiers, source, assertions);\n    return node;\n  }\n  visitImportDefaultSpecifier(node) {\n    const local = this.visit(node.local);\n    if (local !== node.local)\n      return new ImportDefaultSpecifier(local);\n    return node;\n  }\n  visitImportNamespaceSpecifier(node) {\n    const local = this.visit(node.local);\n    if (local !== node.local)\n      return new ImportNamespaceSpecifier(local);\n    return node;\n  }\n  visitImportSpecifier(node) {\n    const local = this.visit(node.local);\n    const imported = this.visit(node.imported);\n    if (local !== node.local || imported !== node.imported)\n      return new ImportSpecifier(local, imported);\n    return node;\n  }\n  visitLiteral(node) {\n    return node;\n  }\n  visitLabeledStatement(node) {\n    const label = this.visit(node.label);\n    const body = this.visit(node.body);\n    if (label !== node.label || body !== node.body)\n      return new LabeledStatement(label, body);\n    return node;\n  }\n  visitLogicalExpression(node) {\n    const left = this.visit(node.left);\n    const right = this.visit(node.right);\n    if (left !== node.left || right !== node.right)\n      return new LogicalExpression(node.operator, left, right);\n    return node;\n  }\n  visitMemberExpression(node) {\n    const _object = this.visit(node.object);\n    const property = this.visit(node.property);\n    if (_object !== node.object || property !== node.property)\n      return new MemberExpression(node.computed, _object, property, node.optional);\n    return node;\n  }\n  visitMetaProperty(node) {\n    const meta = this.visit(node.meta);\n    const property = this.visit(node.property);\n    if (meta !== node.meta || property !== node.property)\n      return new MetaProperty(meta, property);\n    return node;\n  }\n  visitMethodDefinition(node) {\n    const key = this.visit(node.key);\n    const value = this.visit(node.value);\n    const decorators = this.visitNodeList(node.decorators);\n    if (key !== node.key || value !== node.value || decorators !== node.decorators)\n      return new MethodDefinition(key, node.computed, value, node.kind, node.static, decorators);\n    return node;\n  }\n  visitNewExpression(node) {\n    const callee = this.visit(node.callee);\n    const args = this.visitNodeList(node.arguments);\n    if (callee !== node.callee || args !== node.arguments)\n      return new NewExpression(callee, args);\n    return node;\n  }\n  visitObjectExpression(node) {\n    const properties = this.visitNodeList(node.properties);\n    if (properties !== node.properties)\n      return new ObjectExpression(properties);\n    return node;\n  }\n  visitObjectPattern(node) {\n    const properties = this.visitNodeList(node.properties);\n    if (properties !== node.properties)\n      return new ObjectPattern(properties);\n    return node;\n  }\n  visitProgram(node) {\n    const body = this.visitNodeList(node.body);\n    if (body !== node.body)\n      return new Program(node.sourceType, body);\n    return node;\n  }\n  visitProperty(node) {\n    const key = this.visit(node.key);\n    const value = this.visit(node.value);\n    const decorators = this.visitNodeList(node.decorators);\n    if (key !== node.key || value !== node.value || decorators !== decorators) {\n      if (\"kind\" in node)\n        return new Property(node.kind, key, node.computed, value, node.method, node.shorthand);\n      else\n        return new PropertyDefinition(key, node.computed, value, node.static, decorators);\n    }\n    return node;\n  }\n  visitPrivateIdentifier(node) {\n    return node;\n  }\n  visitRestElement(node) {\n    const argument = this.visit(node.argument);\n    if (argument !== node.argument)\n      return new RestElement(argument);\n    return node;\n  }\n  visitReturnStatement(node) {\n    const argument = this.visit(node.argument);\n    if (argument !== node.argument)\n      return new ReturnStatement(argument);\n    return node;\n  }\n  visitSequenceExpression(node) {\n    const expressions = this.visitNodeList(node.expressions);\n    if (expressions !== node.expressions)\n      return new SequenceExpression(expressions);\n    return node;\n  }\n  visitSpreadElement(node) {\n    const argument = this.visit(node.argument);\n    if (argument !== node.argument)\n      return new SpreadElement(argument);\n    return node;\n  }\n  visitStaticBlock(node) {\n    const body = this.visitNodeList(node.body);\n    if (body !== node.body)\n      return new StaticBlock(body);\n    return node;\n  }\n  visitSuper(node) {\n    return node;\n  }\n  visitSwitchCase(node) {\n    const test = this.visit(node.test);\n    const consequent = this.visitNodeList(node.consequent);\n    if (test !== node.test || consequent !== node.consequent)\n      return new SwitchCase(test, consequent);\n    return node;\n  }\n  visitSwitchStatement(node) {\n    const discriminant = this.visit(node.discriminant);\n    const cases = this.visitNodeList(node.cases);\n    if (discriminant !== node.discriminant || cases !== node.cases)\n      return new SwitchStatement(discriminant, cases);\n    return node;\n  }\n  visitTaggedTemplateExpression(node) {\n    const tag = this.visit(node.tag);\n    const quasi = this.visit(node.quasi);\n    if (tag !== node.tag || quasi !== node.quasi)\n      return new TaggedTemplateExpression(tag, quasi);\n    return node;\n  }\n  visitTemplateElement(node) {\n    return node;\n  }\n  visitTemplateLiteral(node) {\n    const quasis = this.visitNodeList(node.quasis);\n    const expressions = this.visitNodeList(node.expressions);\n    if (quasis !== node.quasis || expressions !== node.expressions)\n      return new TemplateLiteral(quasis, expressions);\n    return node;\n  }\n  visitThisExpression(node) {\n    return node;\n  }\n  visitThrowStatement(node) {\n    const argument = this.visit(node.argument);\n    if (argument !== node.argument)\n      return new ThrowStatement(argument);\n    return node;\n  }\n  visitTryStatement(node) {\n    const block = this.visit(node.block);\n    const handler = this.visit(node.handler);\n    const finalizer = this.visit(node.finalizer);\n    if (block !== node.block || handler !== node.handler || finalizer !== node.finalizer)\n      return new TryStatement(block, handler, finalizer);\n    return node;\n  }\n  visitUnaryExpression(node) {\n    const argument = this.visit(node.argument);\n    if (argument !== node.argument)\n      return new UnaryExpression(node.operator, argument);\n    return node;\n  }\n  visitUpdateExpression(node) {\n    const argument = this.visit(node.argument);\n    if (argument !== node.argument)\n      return new UpdateExpression(node.operator, argument, node.prefix);\n    return node;\n  }\n  visitVariableDeclaration(node) {\n    const declarations = this.visitNodeList(node.declarations);\n    if (declarations !== node.declarations)\n      return new VariableDeclaration(declarations, node.kind);\n    return node;\n  }\n  visitVariableDeclarator(node) {\n    const id = this.visit(node.id);\n    const init = this.visit(node.init);\n    if (id !== node.id || init !== node.init)\n      return new VariableDeclarator(id, init);\n    return node;\n  }\n  visitWhileStatement(node) {\n    const test = this.visit(node.test);\n    const body = this.visit(node.body);\n    if (test !== node.test || body !== node.body)\n      return new WhileStatement(test, body);\n    return node;\n  }\n  visitWithStatement(node) {\n    const _object = this.visit(node.object);\n    const body = this.visit(node.body);\n    if (_object !== node.object || body !== node.body)\n      return new WithStatement(_object, body);\n    return node;\n  }\n  visitYieldExpression(node) {\n    const argument = this.visit(node.argument);\n    if (argument !== node.argument)\n      return new YieldExpression(argument, node.delegate);\n    return node;\n  }\n};\n\n// src/esprima.ts\nfunction parse(code, options, delegate) {\n  let commentHandler = null;\n  const proxyDelegate = (node, metadata) => {\n    if (delegate) {\n      delegate(node, metadata);\n    }\n    if (commentHandler) {\n      commentHandler.visit(node, metadata);\n    }\n  };\n  let parserDelegate = typeof delegate === \"function\" ? proxyDelegate : null;\n  let collectComment = false;\n  if (options) {\n    collectComment = typeof options.comment === \"boolean\" && options.comment;\n    const attachComment = typeof options.attachComment === \"boolean\" && options.attachComment;\n    if (collectComment || attachComment) {\n      commentHandler = new CommentHandler();\n      commentHandler.attach = attachComment;\n      options.comment = true;\n      parserDelegate = proxyDelegate;\n    }\n  }\n  let isModule = false;\n  if (options && typeof options.sourceType === \"string\") {\n    isModule = options.sourceType === \"module\";\n  }\n  let parser;\n  if (options && typeof options.jsx === \"boolean\" && options.jsx) {\n    parser = new JSXParser(code, options, parserDelegate);\n  } else {\n    parser = new Parser(code, options, parserDelegate);\n  }\n  const program = isModule ? parser.parseModule() : parser.parseScript();\n  const ast = program;\n  if (collectComment && commentHandler) {\n    ast.comments = commentHandler.comments;\n  }\n  if (parser.config.tokens) {\n    ast.tokens = parser.tokens;\n  }\n  if (parser.config.tolerant) {\n    ast.errors = parser.errorHandler.errors;\n  }\n  return ast;\n}\nfunction parseModule(code, options, delegate) {\n  const parsingOptions = options || {};\n  parsingOptions.sourceType = \"module\";\n  return parse(code, parsingOptions, delegate);\n}\nfunction parseScript(code, options, delegate) {\n  const parsingOptions = options || {};\n  parsingOptions.sourceType = \"script\";\n  return parse(code, parsingOptions, delegate);\n}\nfunction tokenize(code, options, delegate) {\n  const tokenizer = new Tokenizer(code, options);\n  const tokens = [];\n  try {\n    while (true) {\n      let token = tokenizer.getNextToken();\n      if (!token) {\n        break;\n      }\n      if (delegate) {\n        token = delegate(token);\n      }\n      tokens.push(token);\n    }\n  } catch (e) {\n    tokenizer.errorHandler.tolerate(e);\n  }\n  if (tokenizer.errorHandler.tolerant) {\n    tokens.errors = tokenizer.errors();\n  }\n  return tokens;\n}\nvar version = \"6.0.3\";\nvar esprima_default = {\n  parse,\n  parseModule,\n  parseScript,\n  tokenize,\n  Syntax,\n  version\n};\nexport {\n  ArrayExpression,\n  ArrayPattern,\n  ArrowFunctionExpression,\n  AssignmentExpression,\n  AssignmentPattern,\n  AsyncFunctionDeclaration,\n  AwaitExpression,\n  BigIntLiteral,\n  BinaryExpression,\n  BlockStatement,\n  BreakStatement,\n  CallExpression,\n  CatchClause,\n  ChainExpression,\n  ClassBody,\n  ClassDeclaration,\n  ClassExpression,\n  ConditionalExpression,\n  ContinueStatement,\n  DebuggerStatement,\n  Decorator,\n  Directive,\n  DoWhileStatement,\n  EmptyStatement,\n  ExportAllDeclaration,\n  ExportDefaultDeclaration,\n  ExportNamedDeclaration,\n  ExportSpecifier,\n  ExpressionStatement,\n  ForInStatement,\n  ForOfStatement,\n  ForStatement,\n  FunctionDeclaration,\n  FunctionExpression,\n  Identifier,\n  IfStatement,\n  ImportAttribute,\n  ImportDeclaration,\n  ImportDefaultSpecifier,\n  ImportExpression,\n  ImportNamespaceSpecifier,\n  ImportSpecifier,\n  LabeledStatement,\n  Literal,\n  LogicalExpression,\n  MemberExpression,\n  MetaProperty,\n  MethodDefinition,\n  Module,\n  NewExpression,\n  nodes_exports as Nodes,\n  ObjectExpression,\n  ObjectPattern,\n  PrivateIdentifier,\n  Program,\n  Property,\n  PropertyDefinition,\n  RegexLiteral,\n  RestElement,\n  ReturnStatement,\n  Script,\n  SequenceExpression,\n  SpreadElement,\n  StaticBlock,\n  Super,\n  SwitchCase,\n  SwitchStatement,\n  Syntax,\n  TaggedTemplateExpression,\n  TemplateElement,\n  TemplateLiteral,\n  ThisExpression,\n  ThrowStatement,\n  TryStatement,\n  UnaryExpression,\n  UpdateExpression,\n  VariableDeclaration,\n  VariableDeclarator,\n  Visitor,\n  WhileStatement,\n  WithStatement,\n  YieldExpression,\n  esprima_default as default,\n  parse,\n  parseModule,\n  parseScript,\n  tokenize,\n  version\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"index.0ff99339.js.map","sourceRoot":"/__parcel_source_root/"}